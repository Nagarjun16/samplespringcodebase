<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CIQReportMapper">

	<resultMap id="importExportReferenceWorkingListMap" 
				type="com.ngen.cosys.report.service.poi.model.CIQImportExportReferenceWorkingListReport">
		<result column="C2K_Identifier" property="c2kIdentifier" />
		<result column="GHA" property="gha" />
		<result column="Month" property="month" />
		<result column="Station" property="station" />
		<result column="CarrierGroup" property="group" />
		<result column="Carrier" property="airline" />
		<result column="ExportShipment" property="exportAWBMWBs" />
		<result column="ExportManifested" property="exportShipmentsManifested" />
		<result column="FWBReceived" property="fwbReceived" />
		<result column="FWBReceivedBeforeRCS" property="fwbReceivedBeforeRCS" />
		<result column="RCSSent" property="rcsSent" />
		<result column="FFMSent" property="ffmSent" />
		<result column="DEPSent" property="depSent" />
		<result column="DEPSentInTime" property="depSentInTime" />
		<result column="ImportShipment" property="importAWBMWBs" />
		<result column="ImportManifested" property="importShipmentsManifested" />
		<result column="FWBReceivedBeforeATA" property="fwbReceivedBeforeATA" />
		<result column="FFMReceivedBeforeATA" property="ffmReceivedBeforeATA" />
		<result column="RCFSent" property="rcfSent" />
		<result column="RCFSentInTime" property="rcfSentInTime" />
		<result column="AWDSent" property="awdSent" />
		<result column="AWDSentInTime" property="awdSentInTime" />
		<result column="NFDSent" property="nfdMessagesSent" />
		<result column="NFDSentInTime" property="nfdSentInTime" />
		<result column="DLVSent" property="dlvEvent" />
		<result column="DLVSentInTime" property="dlvSentInTime" />
	</resultMap>
	
	<!-- Import Export Reference Working List Report -->
	<select id="sqlSelectImportExportReferenceWorkingListData" resultMap="importExportReferenceWorkingListMap"
			parameterType="com.ngen.cosys.report.model.ExcelReportRequest" >
	<![CDATA[
	--Temp table for cargo iq carrier info
	declare @CargoiQCarrierInfo table(
	       C2K_Identifier varchar(1),
	       GroundHandlerCode varchar(10),
	       Carrier varchar(3),
	       ShipmentYear numeric,
	       ShipmentMonth numeric,
	       Airline varchar(10),
	       FromPeriod datetime,
	       ToPeriod datetime
	)
	--insert the cargo iq carrier info to temp table
	;insert into @CargoiQCarrierInfo
	select 
	       case when Mst_Carrier.CargoIqFlag = 1 then  'C' else  'N' end C2K_Identifier,
	       'SAT' GroundHandlerCode, 
	       Mst_Carrier.CarrierCode as Carrier,
	       datepart(yyyy,cast(#{parameters.fromDate} as datetime)) as ShipmentYear,
	       datepart(mm,cast(#{parameters.fromDate} as datetime)) as ShipmentMonth,
	       (select case when  cargoiqflag  =1 then Mst_Carrier.CarrierCode else 'IE'  end ciqMember)Airline ,
	       cast(#{parameters.fromDate} as datetime) FromPeriod,
	       cast(#{parameters.toDate} as datetime) ToPeriod
	from Mst_Carrier 
	       where  
	              Mst_Carrier.GroundHandlerCode = 'SATS' and 
	              Mst_Carrier.CargoIqFlag = 0 and 
				  --Mst_Carrier.CarrierCode = 'bs'
	              Mst_Carrier.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration,Mst_Carrier 
	        where  CargoiQ_SLAConfiguration.airline=Mst_Carrier.carrierCode and Mst_Carrier.CargoIqFlag=0) 
	              ;
	--Temp table for storing export flight information
	declare @ExportOperativeFlights table(
	       Flight_ID     numeric,      
	       CarrierCode varchar(3),
	       FlightNumber varchar(5),
	       FlightKey varchar(8),
	       DateSTD       datetime,
	       DateATD       datetime,
	       FlightType varchar(1),
	       FlightBoardPoint varchar(3),
	       FlightOffPoint varchar(3)
	)
	--Query to fetch export flight information based on cargo iq configuration
	; insert into @ExportOperativeFlights
	select
	       Flt_OperativeFlight.Flight_ID,     
	       Flt_OperativeFlight.CarrierCode,
	       Flt_OperativeFlight.FlightNumber,
	       Flt_OperativeFlight.FlightKey,
	       Flt_OperativeFlight_Legs.DateSTD,
	       Flt_OperativeFlight_Legs.DateATD,
	       Flt_OperativeFlight.FlightType,
	       Flt_OperativeFlight_Legs.FlightBoardPoint,
	       Flt_OperativeFlight_Legs.FlightOffPoint
	from
		    @CargoiQCarrierInfo CargoiQCarrierInfo 
		   inner join
	       Flt_OperativeFlight_Legs on              
	       Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} and
	       Flt_OperativeFlight_Legs.DateSTD between 
		   CargoiQCarrierInfo.FromPeriod  and CargoiQCarrierInfo.ToPeriod 	   
		   inner join
	       Flt_OperativeFlight on 
			Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID  
	         and CargoiQCarrierInfo.Carrier = Flt_OperativeFlight.CarrierCode 
			 and FlightOriginDate  between 
		   CargoiQCarrierInfo.FromPeriod-1  and CargoiQCarrierInfo.ToPeriod+1 
	
	--Temp table for storing import flight information
	declare @ImportOperativeFlights table(
	       Flight_ID     numeric,      
	       CarrierCode varchar(3),
	       FlightNumber varchar(5), 
	       FlightKey varchar(8),
	       DateSTA       datetime,
	       DateATA       datetime,
	       FlightType varchar(1),
	       FlightBoardPoint varchar(3),
	       FlightOffPoint varchar(3)
	)
	--Query to fetch export flight information based on cargo iq configuration
	; insert into @ImportOperativeFlights
	select
	       Flt_OperativeFlight.Flight_ID,     
	       Flt_OperativeFlight.CarrierCode,
	       Flt_OperativeFlight.FlightNumber,
	       Flt_OperativeFlight.FlightKey,
	       Flt_OperativeFlight_Legs.DateSTA,
	       Flt_OperativeFlight_Legs.DateATA,
	       Flt_OperativeFlight.FlightType,
	       Flt_OperativeFlight_Legs.FlightBoardPoint,
	       Flt_OperativeFlight_Legs.FlightOffPoint
	from
	       @CargoiQCarrierInfo CargoiQCarrierInfo 
		   inner join
	       Flt_OperativeFlight_Legs on              
	       Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} and
	       Flt_OperativeFlight_Legs.DateSTA  between 
		   CargoiQCarrierInfo.FromPeriod  and CargoiQCarrierInfo.ToPeriod 	   
		   inner join
	       Flt_OperativeFlight on 
			Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID  
	         and CargoiQCarrierInfo.Carrier = Flt_OperativeFlight.CarrierCode 
			 and FlightOriginDate  between 
		   CargoiQCarrierInfo.FromPeriod-3  and CargoiQCarrierInfo.ToPeriod 	  
		
	
	--Temp table for storing export shipment information
	declare @ExportShipmentInfo table(
	       ShipmentId    numeric,      
	       CarrierCode varchar(3)
	)
	--Query to fetch export shipment information based on cargo iq configuration
	insert into @ExportShipmentInfo
	SELECT
	        distinct Shipment_Master.ShipmentId,--Shipment_Master.shipmentnumber,
	              exportFlight.CarrierCode
	        from
	          Shipment_Master inner join
	          Exp_ManifestShipmentInfo
	            on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId inner join
	          Exp_Manifest  on Exp_ManifestShipmentInfo.ManifestId = Exp_Manifest.ManifestId inner join
	         @ExportOperativeFlights exportFlight on exportFlight.Flight_ID=Exp_Manifest.flightid    
	        and
	          Shipment_Master.Origin in ( #{tenantAirport}, #{tenantCity}) and
	          Shipment_Master.ShipmentType in ('AWB') and
	          Shipment_Master.CancelledOn is null
	
	
	--Temp table for storing export shipment manifest information
	declare @ExportShipmentManifestInfo table(
	       ShipmentId    numeric,      
	       CarrierCode varchar(3),
	       Flight_ID numeric,
		   Flightkey varchar(10),		--#Praveen
		   DateATD datetime,
		   DateSTD datetime,
		   ShipmentNumber varchar(14),
		   ShipmentDate datetime,
		   FlightOffPoint varchar(4)
	)
	--Query to fetch export shipment manifest information based on cargo iq configuration
	insert into @ExportShipmentManifestInfo
	  select  Exp_ManifestShipmentInfo.ShipmentId, 
				exportFlight.CarrierCode,Exp_Manifest.FlightId,exportFlight.Flightkey, exportFlight.DateATD,exportFlight.DateSTD,
				Shipment_Master.ShipmentNumber,Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint
	        from
	          Shipment_Master inner join
	          Exp_ManifestShipmentInfo
	            on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId inner join
	          Exp_Manifest
	            on Exp_ManifestShipmentInfo.ManifestId = Exp_Manifest.ManifestId inner join
	           @ExportOperativeFlights exportFlight on exportFlight.Flight_ID=Exp_Manifest.flightid    
	           inner join Exp_flightevents on Exp_flightevents.flightid =   exportFlight.Flight_ID and Exp_flightevents.ManifestCompletedAt is not null       
	        and
	          Shipment_Master.Origin in ( #{tenantAirport}, #{tenantCity}) and
	          Shipment_Master.ShipmentType in ('AWB') and 
	          Shipment_Master.CancelledOn is null 
	       group by 
				Exp_ManifestShipmentInfo.ShipmentId,
				exportFlight.CarrierCode,  exportFlight.Flightkey,      
	           Exp_Manifest.FlightId,exportFlight.DateATD,exportFlight.DateSTD,Shipment_Master.ShipmentNumber,Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint  
	
	--Temp table for storing export FWB information
	declare @ExportFwb table(
	    CarrierCode varchar(4),
	    fwbCount numeric 
	)
	--Query to fetch export shipment FWB
	insert into @ExportFwb		   
	 SELECT fwb.CarrierCode , --fwb.ShipmentNumber, 
			count(1)fwbCount from 
	  (select distinct exportManifest.ShipmentId, exportManifest.carrierCode,ShipmentNumber
	        from @ExportShipmentManifestInfo exportManifest
	        where exists(
	        select 1  from
	        Shipment_FreightWayBill where
	        Shipment_FreightWayBill.AwbNumber = exportManifest.ShipmentNumber and
	        Shipment_FreightWayBill.AwbDate = exportManifest.ShipmentDate
			))fwb
			group by fwb.CarrierCode--, fwb.ShipmentNumber  
	
	--Temp table for storing export FWB information
	declare @ExportFwbRecvdb4RCS table(
	    CarrierCode varchar(4),
	    fwbRecvdCount numeric 
	)
	--Query to fetch export shipment FWB
	insert into @ExportFwbRecvdb4RCS	
	 SELECT FwbRecvd.CarrierCode, count(1)fwbRecvdCount from 
	  (SELECT
	        distinct exportManifest.ShipmentId,exportManifest.CarrierCode
	        from
	        @ExportShipmentManifestInfo exportManifest
	        inner join Shipment_FreightWayBill
	                      on exportManifest.ShipmentNumber = Shipment_FreightWayBill.AwbNumber and
	        exportManifest.ShipmentDate = Shipment_FreightWayBill.AwbDate inner join
	        Shipment_StatusUpdateEvent
	                      on exportManifest.Shipmentid = Shipment_StatusUpdateEvent.Shipmentid and Shipment_StatusUpdateEvent.EventType = 'RCS'
	      where
	        Shipment_StatusUpdateEvent.EventType = 'RCS' and
	        isnull(Shipment_FreightWayBill.MessageProcessedDate, Shipment_FreightWayBill.CreatedDateTime) <
	        convert(datetime, CONVERT(datetimeoffset, isnull(Shipment_StatusUpdateEvent.EventInitiatedOn, Shipment_StatusUpdateEvent.EventInitiatedOn))  
			AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))FwbRecvd
			group by FwbRecvd.CarrierCode      
	
	
	--Temp table for storing RCS airlines configured  in CiQ
	declare @CargoiQRCSAirlines table(
	       CarrierCode varchar(3),
		   rcsFlag varchar(1)
	)
	--Query to fetch RCS airlines configured in CiQ
	insert into @CargoiQRCSAirlines
	select distinct Airline CarrierCode, 'Y' rcsFlag  from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCS'
	
	--Temp table for storing RCS Shipment from StatusUpdateEvent
	declare @StatusEventRCS table(
	  	CarrierCode varchar(3),
		--shipmentnumber varchar(14),			--#praveen
		rcsFlag varchar(1),
		rcsCount numeric
	)
	
	--Query to fetch RCS Shipment from StatusUpdateEvent
	insert into @StatusEventRCS
	select
	        shipmentInfo.CarrierCode,--GroupedShipment_StatusUpdateEventInfo.ShipmentNumber, 
			carrierInfoRCS.rcsFlag,
			count(1) rcsCount
	    FROM
			@ExportShipmentInfo shipmentInfo  		
			inner join Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			inner join 
			(select
	                    min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	                    Shipment_StatusUpdateEvent.ShipmentId, Shipment_StatusUpdateEvent.ShipmentNumber
	        from
	                    Shipment_StatusUpdateEvent
	        where
	                    Shipment_StatusUpdateEvent.EventType = 'RCS' and
	                    Shipment_StatusUpdateEvent.IsOutgoing = 1 and
						--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	                    Shipment_StatusUpdateEvent.EventCompletedOn is not null
						--and  Shipment_StatusUpdateEvent.ShipmentNumber = '20580649085'
	        group by
	                    Shipment_StatusUpdateEvent.ShipmentId, Shipment_StatusUpdateEvent.ShipmentNumber
	        )GroupedShipment_StatusUpdateEventInfo
	            on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
					Shipment_StatusUpdateEvent.FsuStatusLine is not null
			left join @CargoiQRCSAirlines carrierInfoRCS on carrierInfoRCS.CarrierCode = shipmentInfo.CarrierCode
			group by 
			shipmentInfo.CarrierCode,carrierInfoRCS.rcsFlag--, GroupedShipment_StatusUpdateEventInfo.ShipmentNumber
	
	
	---------------DEP------------------
	
	--Temp table for storing DEP shipment manifest  
	declare @DEPShipmentManifestInfo table(
	       ShipmentId    numeric,      
	       CarrierCode varchar(3),
	       Flight_ID numeric,
		   DateATD datetime,
		   DateSTD datetime,
		   ShipmentNumber varchar(14),
		   ShipmentDate datetime,
		   FlightOffPoint varchar(4)
	)
	--Query to fetch DEP shipment manifest information 
	insert into @DEPShipmentManifestInfo
	  select  Shipment_FreightOut.ShipmentId, 
				exportFlight.CarrierCode,Shipment_FreightOut.FlightId,exportFlight.DateATD,exportFlight.DateSTD,
				Shipment_Master.ShipmentNumber,Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint
	        from
			 @ExportOperativeFlights exportFlight 
			  inner join Shipment_FreightOut 		  
				on exportFlight.Flight_ID=Shipment_FreightOut.flightid 
	           inner join  Shipment_Master 
	            on Shipment_Master.ShipmentId = Shipment_FreightOut.ShipmentId  
	          and
	          Shipment_Master.Origin in ( #{tenantAirport}, #{tenantCity}) and
	          Shipment_Master.ShipmentType in ('AWB') and 
	          Shipment_Master.CancelledOn is null 
	       group by 
				Shipment_FreightOut.ShipmentId,
				exportFlight.CarrierCode,        
	           Shipment_FreightOut.FlightId,exportFlight.DateATD,exportFlight.DateSTD,Shipment_Master.ShipmentNumber,Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint  
	
	--Temp table for storing DEP airlines configured  in CiQ
	declare @CargoiQDEPAirlines table(
	       CarrierCode varchar(3),
		   depFlag varchar(2)
	)
	--Query to fetch DEP airlines configured in CiQ
	insert into @CargoiQDEPAirlines
	select distinct Airline CarrierCode, 'Y' depFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' and CargoiQ_SLAConfiguration.FlowType='E'
	
	--Temp table for storing DEP Shipment from StatusUpdateEvent
	declare @StatusEventDEP table(
			CarrierCode varchar(3),
			depFlag varchar(2),
	        depCount numeric
	)
	--Query to fetch DEP Shipment from StatusUpdateEvent
	insert into @StatusEventDEP
	SELECT
	     shipmentInfo.CarrierCode,
		 carrierInfo.depFlag,	
		 count(1) depCount
	    FROM
	    @DEPShipmentManifestInfo shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId
		inner join
	    (select
	                min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	                Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.Outgoingflightid
	    from
	                Shipment_StatusUpdateEvent
	    where
	                Shipment_StatusUpdateEvent.EventType = 'DEP' and
	                Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	                Shipment_StatusUpdateEvent.EventCompletedOn is not null
					--and  Shipment_StatusUpdateEvent.ShipmentNumber = '53905801445'
	    group by
	                Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.Outgoingflightid
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                        Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
							Shipment_StatusUpdateEvent.FsuStatusLine is not null
		left join @CargoiQDEPAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
			group by 
				 shipmentInfo.CarrierCode, carrierInfo.depFlag
	
	--Temp table for storing DEP SLA time from ciqConfiguration
	 declare @DEPSlaTime table( 
	    depSlaTime numeric,
		carrierCode varchar(4),
		Destination varchar(5)
	  )
	--Query to fetch DEP SLA Time from CiQ
	insert into @DEPSlaTime
	 select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode,ciqConfig.Destination
				from
				CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQDEPAirlines carrierInfo
				on ciqConfig.Airline = carrierInfo.CarrierCode 
				and (ciqConfig.FlowType = 'E' OR ciqConfig.FlowType is null) 
				and ciqConfig.CiqMessageTypeId = 'DEP' 
				group by ciqConfig.Airline,ciqConfig.SLATime,ciqConfig.Destination
				order by ciqConfig.SLATime
	
	--Temp table for storing DEP Shipment from StatusUpdateEvent
	declare @StatusEventDEPInTime table(
			CarrierCode varchar(3),
	        depCount numeric
	)
	--Query to fetch DEP Shipment from StatusUpdateEvent
	insert into @StatusEventDEPInTime
	SELECT
	     shipmentInfo.CarrierCode,	
		 count(1) depCount 
		FROM
	    @DEPShipmentManifestInfo shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId	
		inner join
	    (select
	                min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	                Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.Outgoingflightid
	    from
	                Shipment_StatusUpdateEvent
	    where
	                Shipment_StatusUpdateEvent.EventType = 'DEP' and
	                Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	                Shipment_StatusUpdateEvent.EventCompletedOn is not null
					--and  Shipment_StatusUpdateEvent.ShipmentNumber = '53905801445'
	    group by
	                Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.Outgoingflightid
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                        Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
							Shipment_StatusUpdateEvent.FsuStatusLine is not null
		left join @CargoiQDEPAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
	
			left join @DEPSlaTime depSla
					on depSla.carrierCode=  carrierInfo.carrierCode
					and (shipmentInfo.FlightOffPoint = depSla.Destination)  
			left join @DEPSlaTime depSlaOffPointisNull
							  on depSlaOffPointisNull.carrierCode=  carrierInfo.carrierCode  
										   and (shipmentInfo.FlightOffPoint<>depSla.Destination)
			left join @DEPSlaTime depSlaDestisNull
							  on depSlaDestisNull.carrierCode=  carrierInfo.carrierCode  
										   and (depSlaDestisNull.destination is null)
			where 
			(((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime, 
			   CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
							  AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))) 
					   <= depSla.depSlaTime) OR
			((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime, 
			   CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
							  AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))) 
					   <= depSlaOffPointisNull.depSlaTime) OR 
			((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime, 
			   CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
							  AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))) 
					   <= depSlaDestisNull.depSlaTime))
				group by 
					 shipmentInfo.CarrierCode  
				
	
	--Temp table for storing Import Shipment
	declare @ImportShipment table(
			 ShipmentId numeric, 
			-- shipmentnumber varchar(14),		--# praveen
			 CarrierCode varchar(5)
	)
	--Query to fetch Import Shipment
	insert into @ImportShipment
	 SELECT
	         distinct Shipment_Master.ShipmentId,--Shipment_Master.ShipmentNumber,
			 flightInfo.CarrierCode 
	        from
	        Shipment_Master inner join
	        Imp_ShipmentVerification
	           on Shipment_Master.ShipmentId=Imp_ShipmentVerification.ShipmentId
	             inner join  @ImportOperativeFlights flightInfo
	            on Imp_ShipmentVerification.FlightId = flightInfo.Flight_ID and
	            Imp_ShipmentVerification.breakdownpieces is not null 
				and exists (select 1 from Imp_ArrivalManifestShipmentInfo
								inner join
								Imp_ArrivalManifestULD
								   on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId inner join
								Imp_ArrivalManifestBySegment
								   on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
								Imp_ArrivalManifestByFlight
								   on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId=Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId 
								   where Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Imp_ArrivalManifestShipmentInfo.ShipmentDate = Shipment_Master.ShipmentDate 
								and Imp_ShipmentVerification.FlightId = Imp_ArrivalManifestByFlight.flightid )
	        and
	            Shipment_Master.Destination in ( #{tenantAirport}, #{tenantCity}) and
	            Shipment_Master.ShipmentType in ('AWB') and
	            Shipment_Master.CancelledOn is null
	
	--Temp table for storing Import Manifest Shipment
	declare @ImportManifestShipment table(
			 ShipmentId numeric,
			 CarrierCode varchar(5),
			 Flight_ID numeric,
			 ShipmentNumber varchar(15),
			-- FlightKey varchar(15),		--# Praveen
			 DateSTA datetime,
			 DateATA datetime,
			 ShipmentDate datetime
	)
	--Query to fetch Import Shipment
	insert into @ImportManifestShipment
	SELECT Shipment_Master.ShipmentId,
	 importFlight.CarrierCode,
	 Imp_ArrivalManifestByFlight.FlightId Flight_ID, Imp_ArrivalManifestShipmentInfo.ShipmentNumber,--importFlight.FlightKey,
	 importFlight.DateSTA,importFlight.DateATA,Shipment_Master.ShipmentDate
	 from
	        Shipment_Master inner join
	        Imp_ArrivalManifestShipmentInfo
	           on Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Shipment_Master.ShipmentNumber and
	        Imp_ArrivalManifestShipmentInfo.ShipmentDate = Shipment_Master.ShipmentDate inner join
	        Imp_ArrivalManifestULD
	           on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId inner join
	        Imp_ArrivalManifestBySegment
	           on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
	        Imp_ArrivalManifestByFlight
	           on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId=Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId
	        inner join @ImportOperativeFlights importFlight on Imp_ArrivalManifestByFlight.FlightId=importFlight.flight_id 
	              Inner Join Imp_Shipmentverification on Imp_Shipmentverification.shipmentId=Shipment_Master.ShipmentId 
	              and Imp_Shipmentverification.breakdownpieces is not null  
	        and
	            Shipment_Master.Destination in ( #{tenantAirport}, #{tenantCity}) and
	            Shipment_Master.ShipmentType in ('AWB') and
	            Shipment_Master.CancelledOn is null 
			group by 
				 Shipment_Master.ShipmentId,importFlight.CarrierCode,--importFlight.FlightKey,
				 Imp_ArrivalManifestByFlight.FlightId,Imp_ArrivalManifestShipmentInfo.ShipmentNumber,
				 importFlight.DateSTA,importFlight.DateATA,Shipment_Master.ShipmentDate  
	
	
	--Temp table for storing RCF airlines configured  in CiQ
	declare @CargoiQRCFAirlines table(
	       CarrierCode varchar(3),
		   rcfFlag varchar(2)
	)
	--Query to fetch RCF airlines configured in CiQ
	insert into @CargoiQRCFAirlines
	select distinct Airline CarrierCode, 'Y' rcfFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCF' and CargoiQ_SLAConfiguration.FlowType='I'
	
	--Temp table for storing RCF Shipment from StatusUpdateEvent
	declare @StatusEventRCF table(
			CarrierCode varchar(3),
			rcfFlag varchar(2),
	        rcfCount numeric
	)
	--Query to fetch RCF Shipment from StatusUpdateEvent
	insert into @StatusEventRCF
	SELECT rcf.CarrierCode,rcf.rcfFlag, count(1) rcfCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime,
		carrierInfo.rcfFlag  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join 
		(select
					min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
		from
					Shipment_StatusUpdateEvent
		where
					Shipment_StatusUpdateEvent.EventType = 'RCF' and
					--Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
					Shipment_StatusUpdateEvent.EventCompletedOn is not null
		group by
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                         Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
							 Shipment_StatusUpdateEvent.FsuStatusLine is not null
		 left join @CargoiQRCFAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.rcfFlag
			)rcf
			group by 
				 rcf.CarrierCode,rcf.rcfFlag
	
	--Temp table for storing RCF SLA time from ciqConfiguration
	 declare @RCFSlaTime table( 
	    rcfSlaTime numeric,
		carrierCode varchar(4)
	  )
	--Query to fetch DEP SLA Time from CiQ
	insert into @RCFSlaTime
	 select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
				from
				CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQRCFAirlines carrierInfo
				on ciqConfig.Airline = carrierInfo.CarrierCode 
				and (ciqConfig.FlowType = 'I' OR ciqConfig.FlowType is null) 
				and ciqConfig.CiqMessageTypeId = 'RCF' 
				group by ciqConfig.Airline,ciqConfig.SLATime
				order by ciqConfig.SLATime
	
	--Temp table for storing RCFInTime Shipment from StatusUpdateEvent
	declare @StatusEventRCFInTime table(
			CarrierCode varchar(3),
	        rcfCount numeric
	)
	--Query to fetch RCFInTime Shipment from StatusUpdateEvent
	insert into @StatusEventRCFInTime
	SELECT rcf.CarrierCode,  count(1) rcfCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
		format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
		AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join 
		(select
					min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
		from
					Shipment_StatusUpdateEvent
		where
					Shipment_StatusUpdateEvent.EventType = 'RCF' and
					--Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
					Shipment_StatusUpdateEvent.EventCompletedOn is not null
		group by
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                         Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
							 Shipment_StatusUpdateEvent.FsuStatusLine is not null
		 left join @CargoiQRCFAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
			left join @RCFSlaTime rcfSla
				on rcfSla.carrierCode=  carrierInfo.carrierCode 
	where
	((DATEDIFF(minute,isnull(shipmentInfo.DateATA, shipmentInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	            AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	        <=rcfSla.rcfSlaTime) 
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn
			)rcf
			group by 
				 rcf.CarrierCode
	
	
	--Temp table for storing RCF airlines configured  in CiQ
	declare @CargoiQNFDAirlines table(
	       CarrierCode varchar(3),
		   nfdFlag varchar(2)
	)
	--Query to fetch NFD airlines configured in CiQ
	insert into @CargoiQNFDAirlines
	select distinct Airline CarrierCode,'Y' nfdFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'NFD' 
	
	--Temp table for storing NFD Shipment from StatusUpdateEvent
	declare @StatusEventNFD table(
			CarrierCode varchar(3),
			nfdFlag varchar(2),
	        nfdCount numeric
	)
	--Query to fetch NFD Shipment from StatusUpdateEvent
	insert into @StatusEventNFD
	SELECT nfd.CarrierCode,nfd.nfdFlag,  count(1) nfdCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
		format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
		AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime
		,carrierInfo.nfdFlag  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join 
		(select
					min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
		from
					Shipment_StatusUpdateEvent
		where
					Shipment_StatusUpdateEvent.EventType = 'NFD' and
					--Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
					Shipment_StatusUpdateEvent.EventCompletedOn is not null
		group by
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                         Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
							 Shipment_StatusUpdateEvent.FsuStatusLine is not null
		 left join @CargoiQNFDAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.nfdFlag 
			)nfd
			group by 
				 nfd.CarrierCode,nfd.nfdFlag
	
	--Temp table for storing NFD SLA time from ciqConfiguration
	 declare @NFDSlaTime table( 
	    nfdSlaTime numeric,
		carrierCode varchar(4)
	  )
	--Query to fetch NFD SLA Time from CiQ
	insert into @NFDSlaTime
	 select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
				from
				CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQNFDAirlines carrierInfo
				on ciqConfig.Airline = carrierInfo.CarrierCode  
				and ciqConfig.CiqMessageTypeId = 'NFD' 
				group by ciqConfig.Airline,ciqConfig.SLATime
				order by ciqConfig.SLATime
	
	--Temp table for storing NFDInTime Shipment from StatusUpdateEvent
	declare @StatusEventNFDInTime table(
			CarrierCode varchar(3),
	        nfdCount numeric
	)
	--Query to fetch NFDInTime Shipment from StatusUpdateEvent
	insert into @StatusEventNFDInTime
	SELECT nfdSent.CarrierCode,  count(1) nfdCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
		and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join 
		(select
					min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
		from
					Shipment_StatusUpdateEvent
		where
					Shipment_StatusUpdateEvent.EventType = 'NFD' and
					--Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
					Shipment_StatusUpdateEvent.EventCompletedOn is not null
		group by
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                         Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
							 Shipment_StatusUpdateEvent.FsuStatusLine is not null
		 left join @CargoiQNFDAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
			left join @NFDSlaTime nfdSla
				on nfdSla.carrierCode=  carrierInfo.carrierCode 
	where
	((DATEDIFF(minute,isnull(shipmentInfo.DateATA, shipmentInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	            AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	        <=nfdSla.nfdSlaTime)
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn
			)nfdSent
			group by 
				 nfdSent.CarrierCode
	
	
	--Temp table for storing AWD airlines configured  in CiQ
	declare @CargoiQAWDAirlines table(
	       CarrierCode varchar(3),
		   awdFlag varchar(2)
	)
	--Query to fetch AWD airlines configured in CiQ
	insert into @CargoiQAWDAirlines
	select distinct Airline CarrierCode, 'Y' awdFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'AWD' 
	
	--Temp table for storing AWD Shipment from StatusUpdateEvent
	declare @StatusEventAWD table(
			CarrierCode varchar(3),
			awdFlag varchar(2),
	        awdCount numeric
	)
	--Query to fetch AWD Shipment from StatusUpdateEvent
	insert into @StatusEventAWD
	SELECT awd.CarrierCode,awd.awdFlag, count(1) awdCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime
	,carrierInfo.awdFlag
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			--and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join
	    (select
	                min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	                Shipment_StatusUpdateEvent.ShipmentId
	    from
	                Shipment_StatusUpdateEvent
	    where
	                Shipment_StatusUpdateEvent.EventType = 'AWD' and
	                Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	                Shipment_StatusUpdateEvent.EventCompletedOn is not null
					--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	    group by
	                Shipment_StatusUpdateEvent.ShipmentId
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                        Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
							Shipment_StatusUpdateEvent.FsuStatusLine is not null
		left join @CargoiQAWDAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.awdFlag
			)awd
			group by 
				 awd.CarrierCode,awd.awdFlag
	
	--Temp table for storing AWD SLA time from ciqConfiguration
	 declare @AWDSlaTime table( 
	    awdSlaTime numeric,
		carrierCode varchar(4)
	  )
	--Query to fetch AWD SLA Time from CiQ
	insert into @AWDSlaTime
	 select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
				from
				CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQAWDAirlines carrierInfo
				on ciqConfig.Airline = carrierInfo.CarrierCode  
				and ciqConfig.CiqMessageTypeId = 'AWD' 
				group by ciqConfig.Airline,ciqConfig.SLATime
				order by ciqConfig.SLATime
	
	--Temp table for storing AWDInTime Shipment from StatusUpdateEvent
	declare @StatusEventAWDInTime table(
			CarrierCode varchar(3),
	        awdCount numeric
	)
	--Query to fetch AWDInTime Shipment from StatusUpdateEvent
	insert into @StatusEventAWDInTime
	SELECT awdSent.CarrierCode,  count(1) awdCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			--and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join
	    (select
	                min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	                Shipment_StatusUpdateEvent.ShipmentId
	    from
	                Shipment_StatusUpdateEvent
	    where
	                Shipment_StatusUpdateEvent.EventType = 'AWD' and
	                Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	                Shipment_StatusUpdateEvent.EventCompletedOn is not null
					--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	    group by
	                Shipment_StatusUpdateEvent.ShipmentId
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                        Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
							Shipment_StatusUpdateEvent.FsuStatusLine is not null
		left join @CargoiQAWDAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
			left join @AWDSlaTime awdSla
				on awdSla.carrierCode= carrierInfo.carrierCode 
	where
	((DATEDIFF(minute,isnull(shipmentInfo.DateATA, shipmentInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	            AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	        <= awdSla.awdSlaTime)
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn
			)awdSent
			group by 
				 awdSent.CarrierCode
	
	--Temp table for storing DLV airlines configured  in CiQ
	declare @CargoiQDLVAirlines table(
	       CarrierCode varchar(3),
		   dlvFlag varchar(2)
	)
	--Query to fetch DLV airlines configured in CiQ
	insert into @CargoiQDLVAirlines
	select distinct Airline CarrierCode,'Y' dlvFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DLV' 
	
	--Temp table for storing DLV Shipment from StatusUpdateEvent
	declare @StatusEventDLV table(
			CarrierCode varchar(3),
			dlvFlag varchar(2),
	        dlvCount numeric
	)
	--Query to fetch DLV Shipment from StatusUpdateEvent
	insert into @StatusEventDLV
	SELECT dlv.CarrierCode,dlv.dlvFlag, count(1) dlvCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
		format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
		AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime
		,carrierInfo.dlvFlag  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
		inner join
	    (select
					min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.DeliveryId
		from
					Shipment_StatusUpdateEvent
		where
					Shipment_StatusUpdateEvent.EventType = 'DLV' and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
					Shipment_StatusUpdateEvent.EventCompletedOn is not null and
					Shipment_StatusUpdateEvent.IsOutgoing = 1 
		group by
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.DeliveryId
	    )GroupedShipment_StatusUpdateEventInfo
	        on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
				Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
				Shipment_StatusUpdateEvent.FsuStatusLine is not null
		left join @CargoiQDLVAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.dlvFlag  
			)dlv
			group by 
				 dlv.CarrierCode,dlv.dlvFlag 
	
	--Temp table for storing FWB Shipment for Import
	declare @ImportFWB table(
			CarrierCode varchar(3),
			--shipmentNumber varchar(14),		--#Praveen
	        fwbImpCount numeric
	)
	--Query to fetch AWD Shipment from StatusUpdateEvent
	insert into @ImportFWB
	SELECT fwbImport.CarrierCode,--fwbImport.ShipmentNumber,  
	count(1) fwbImpCount from
	(SELECT
	        importShipment.ShipmentId,--importShipment.ShipmentNumber,
			importShipment.CarrierCode
	        from
	              @ImportManifestShipment importShipment inner join
	              Shipment_FreightWayBill
	          on importShipment.ShipmentNumber = Shipment_FreightWayBill.AwbNumber and
	        importShipment.ShipmentDate = Shipment_FreightWayBill.AwbDate
	   and
		 convert(datetime, CONVERT(datetimeoffset, isnull(Shipment_FreightWayBill.MessageProcessedDate, Shipment_FreightWayBill.MessageProcessedDate))  
	      AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))     
	         < isnull(importShipment.DateATA, importShipment.DateSTA)
			 group by importShipment.CarrierCode,importShipment.ShipmentId,importShipment.ShipmentNumber)fwbImport
			 group by 
				 fwbImport.CarrierCode--,fwbImport.ShipmentNumber
	
	SELECT --concat('IE',DENSE_RANK() OVER (order by q2.Carrier)) AS Grp, q1.Carrier, q1.* 
		--q2.IEGroup AS Grp, q1.* 
	
		q1.C2K_Identifier, q1.GHA, q1.Month, #{tenantAirport} Station,
		q2.IEGroup AS CarrierGroup, q1.Carrier,
		q1.ExportShipment, q1.ExportManifested, q1.FWBReceived, q1.FWBReceivedBeforeRCS, 
		q1.RCSSent, q1.FFMSent, q1.DEPSent, q1.DEPSentInTime, 
		q1.ImportShipment, q1.ImportManifested, q1.FWBReceivedBeforeATA, q1.FFMReceivedBeforeATA,
		q1.RCFSent, q1.RCFSentInTime, q1.AWDSent, q1.AWDSentInTime,
		q1.NFDSent, q1.NFDSentInTime, q1.DLVSent, q1.DLVSentInTime
	
	from 
	(
	SELECT
	C2K_Identifier,
	GHA,Station,Carrier, 
	[Month] Month,sum(ExportShipment) ExportShipment, 
	sum(ExportManifested) ExportManifested,sum(FWBReceived) FWBReceived, sum(FWBReceivedBeforeRCS) FWBReceivedBeforeRCS,
	case when  RCSCarrierFlag='Y' then isNull(sum(RCSSent),0) else null end RCSSent,sum(FFMSent) FFMSent,
	case when  DEPCarrierFlag='Y' then isNull(sum(DEPSent),0) else null end DEPSent,
	case when  DEPCarrierFlag='Y' then isNull(sum(DEPSentInTime),0) else null end DEPSentInTime,
	sum(ImportShipment)ImportShipment,sum(ImportManifested)ImportManifested,sum(FWBReceivedBeforeATA)FWBReceivedBeforeATA,
	sum(FFMReceivedBeforeATA) FFMReceivedBeforeATA,
	case when RCFCarrierFlag='Y' then isNull(sum(RCFSent),0) else null end RCFSent,
	case when RCFCarrierFlag='Y' then isNull(sum(RCFSentInTime),0) else null end RCFSentInTime,
	case when AWDCarrierFlag='Y' then isNull(sum(AWDSent),0) else null end AWDSent,
	case when AWDCarrierFlag='Y' then isNull(sum(AWDSentInTime),0) else null end AWDSentInTime,
	case when NFDCarrierFlag='Y' then isNull(sum(NFDSent),0) else null end NFDSent,
	case when NFDCarrierFlag='Y' then isNull(sum(NFDSentInTime),0) else null end NFDSentInTime,
	case when DLVCarrierFlag='Y' then isNull(sum(DLVSent),0) else null end DLVSent,
	case when DLVCarrierFlag='Y' then isNull(sum(DLVSent),0) else null end DLVSentInTime,
	sum(FFMSentInTime) FFMSentInTime
	FROM (
	SELECT
	     cargoIQCarrier.C2K_Identifier,
	     'SAT' GHA,
	       #{tenantAirport} Station,
	     cargoIQCarrier.Airline,
	     cargoIQCarrier.Carrier,
	     cargoIQCarrier.ShipmentMonth ,
	     cast(cargoIQCarrier.ShipmentYear as varchar)+'-'+ RIGHT('0' + cast(cargoIQCarrier.ShipmentMonth as varchar),2) Month,
	
	(SELECT
	        count(distinct expShpInfo.ShipmentId) from @ExportShipmentInfo expShpInfo
	              where
	              expShpInfo.CarrierCode = cargoIQCarrier.Carrier
	)ExportShipment,
	(SELECT
	        count(expShpManInfo.ShipmentId) from @ExportShipmentManifestInfo expShpManInfo
	              where
	              expShpManInfo.CarrierCode = cargoIQCarrier.Carrier
	)ExportManifested,
	(select fwbRecvd.fwbCount from @ExportFwb fwbRecvd where 
	 fwbRecvd.CarrierCode=cargoIQCarrier.Carrier
	)FWBReceived,
	
	(select fwbRecvdRcs.fwbRecvdCount from @ExportFwbRecvdb4RCS fwbRecvdRcs where 
	 fwbRecvdRcs.CarrierCode=cargoIQCarrier.Carrier
	)FWBReceivedBeforeRCS,
	
	----This is to check whether the carrier is configured for RCS message in CiQ configuration or NOT
	(select  rcsCount.rcsFlag from @StatusEventRCS rcsCount where 
	 rcsCount.CarrierCode=cargoIQCarrier.Carrier
	)RCSCarrierFlag,
	
	(select  rcsCount.rcsCount from @StatusEventRCS rcsCount where 
	 rcsCount.CarrierCode=cargoIQCarrier.Carrier
	)RCSSent,
	(SELECT
	    count(expShpManInfo.ShipmentId) from @ExportShipmentManifestInfo expShpManInfo
	            where
	            expShpManInfo.CarrierCode = cargoIQCarrier.Carrier
	)FFMSent, 
	(SELECT
	    count(expShpManInfo.ShipmentId) from @ExportShipmentManifestInfo expShpManInfo
	            where
	            expShpManInfo.CarrierCode = cargoIQCarrier.Carrier
	)FFMSentInTime, 
	(select depCount.depFlag from @StatusEventDEP depCount where 
	 depCount.CarrierCode=cargoIQCarrier.Carrier
	)DEPCarrierFlag,
	(select depCount.depCount from @StatusEventDEP depCount where 
	 depCount.CarrierCode=cargoIQCarrier.Carrier
	)DEPSent,
	(select depSentCount.depCount from @StatusEventDEPInTime depSentCount where 
	 depSentCount.CarrierCode=cargoIQCarrier.Carrier
	)DEPSentInTime,
	(SELECT
	        count(distinct impShpInfo.ShipmentId) from @ImportShipment impShpInfo
	              where
	              impShpInfo.CarrierCode = cargoIQCarrier.Carrier
	)ImportShipment,
	(SELECT
	        count(impManifestShpInfo.ShipmentId) from @ImportManifestShipment impManifestShpInfo
	              where
	              impManifestShpInfo.CarrierCode = cargoIQCarrier.Carrier
	)ImportManifested,
	(SELECT
	       impFwb.fwbImpCount from @ImportFWB impFwb
	              where
	              impFwb.CarrierCode = cargoIQCarrier.Carrier
	)FWBReceivedBeforeATA,
	(SELECT
	        count(impManifestShpInfo.ShipmentId) from @ImportManifestShipment impManifestShpInfo
	              where
	              impManifestShpInfo.CarrierCode = cargoIQCarrier.Carrier
	)FFMReceivedBeforeATA,
	(select rcfCount.rcfFlag from @StatusEventRCF rcfCount where 
	 rcfCount.CarrierCode=cargoIQCarrier.Carrier
	)RCFCarrierFlag,
	(select rcfCount.rcfCount from @StatusEventRCF rcfCount where 
	 rcfCount.CarrierCode=cargoIQCarrier.Carrier
	)RCFSent,
	(select rcfCountInTime.rcfCount from @StatusEventRCFInTime rcfCountInTime where 
	 rcfCountInTime.CarrierCode=cargoIQCarrier.Carrier
	)RCFSentInTime,
	(select nfdCount.nfdFlag from @StatusEventNFD nfdCount where 
	 nfdCount.CarrierCode=cargoIQCarrier.Carrier
	)NFDCarrierFlag,
	(select nfdCount.nfdCount from @StatusEventNFD nfdCount where 
	 nfdCount.CarrierCode=cargoIQCarrier.Carrier
	)NFDSent,
	(select nfdCount.nfdCount from @StatusEventNFDInTime nfdCount where 
	 nfdCount.CarrierCode=cargoIQCarrier.Carrier
	)NFDSentInTime,
	(select awdCount.awdFlag from @StatusEventAWD awdCount where 
	 awdCount.CarrierCode=cargoIQCarrier.Carrier
	)AWDCarrierFlag,
	(select awdCount.awdCount from @StatusEventAWD awdCount where 
	 awdCount.CarrierCode=cargoIQCarrier.Carrier
	)AWDSent,
	(select awdCount.awdCount from @StatusEventAWDInTime awdCount where 
	 awdCount.CarrierCode=cargoIQCarrier.Carrier
	)AWDSentInTime,
	(select dlvCount.dlvFlag from @StatusEventDLV dlvCount where 
	 dlvCount.CarrierCode=cargoIQCarrier.Carrier
	)DLVCarrierFlag,
	(select dlvCount.dlvCount from @StatusEventDLV dlvCount where 
	 dlvCount.CarrierCode=cargoIQCarrier.Carrier
	)DLVSent
	 
	FROM
	        @CargoiQCarrierInfo cargoIQCarrier
	   ) OuterMostQuery
	       
	Group by C2K_Identifier,Carrier,[Month],GHA,Station,ExportShipment,
	ExportManifested,FWBReceived, FWBReceivedBeforeRCS, RCSSent,
	  DEPSent,DEPSentInTime,ImportShipment,ImportManifested,FWBReceivedBeforeATA,RCFSent,RCFSentInTime,NFDSent,NFDSentInTime,AWDSent,AWDSentInTime,DLVSent,
	  RCSCarrierFlag,DEPCarrierFlag,RCFCarrierFlag,NFDCarrierFlag,AWDCarrierFlag,DLVCarrierFlag,FFMSentInTime
	) as q1
	inner join 
	(
		select ciqTemplate.C2KIdentifier,GHA, 
		CASE WHEN C2KIdentifier='A' THEN --
		concat('IE',dense_Rank() OVER(ORDER BY C2KIdentifier, (IIF(IMP_AWD IS NULL, 0 , 1) + IIF(EXP_DEP IS NULL, 0 , 1) + IIF(IMP_DLV IS NULL, 0 , 1) +
		IIF(IMP_NFD IS NULL, 0 , 1) + IIF(IMP_RCF IS NULL, 0 , 1) + IIF(EXP_RCS IS NULL, 0 , 1)) desc, concat(IMP_RCF, IMP_AWD, IMP_NFD, IMP_DLV, EXP_RCS, EXP_DEP) asc)) ELSE 'AA' --
		END
		AS IEGroup,
	
		(IIF(IMP_AWD IS NULL, 0 , 1) + IIF(EXP_DEP IS NULL, 0 , 1) + IIF(IMP_DLV IS NULL, 0 , 1) +
		IIF(IMP_NFD IS NULL, 0 , 1) + IIF(IMP_RCF IS NULL, 0 , 1) + IIF(EXP_RCS IS NULL, 0 , 1)) counts,
	
			--dense_Rank() OVER(ORDER BY C2KIdentifier,STRING_AGG(airline,',') desc) as rowno,
			dense_Rank() OVER(ORDER BY C2KIdentifier, (IIF(IMP_AWD IS NULL, 0 , 1) + IIF(EXP_DEP IS NULL, 0 , 1) + IIF(IMP_DLV IS NULL, 0 , 1) +
			IIF(IMP_NFD IS NULL, 0 , 1) + IIF(IMP_RCF IS NULL, 0 , 1) + IIF(EXP_RCS IS NULL, 0 , 1)) desc,concat(IMP_RCF, IMP_AWD, IMP_NFD, IMP_DLV, EXP_RCS, EXP_DEP)  asc) as rowno, --
	
			concat('"',STRING_AGG(airline,'","'),'"') Carrier,
			IMP_RCF, IMP_AWD, IMP_NFD, IMP_DLV, EXP_RCS, EXP_DEP
			from (select  distinct 
			(select case when cargoIqFlag=1 then 'C' else 'A' end C2KIdentifier from mst_carrier where mst_carrier.carriercode=a.airline)C2KIdentifier,
			'SAT' as GHA,
			a.airline,
			(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='RCF' and FlowType='I' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_RCF,
			(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='AWD' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_AWD, 
			(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='NFD' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_NFD,
			(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='DLV' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_DLV,
			(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='RCS' and CargoiQ_SLAConfiguration.airline=a.airline) EXP_RCS,
			(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='DEP' and FlowType='E' and CargoiQ_SLAConfiguration.airline=a.airline) EXP_DEP 
			from CargoiQ_SLAConfiguration a,mst_carrier b where a.airline=b.carriercode and b.cargoIqFlag=0) ciqTemplate
			group by   
			ciqTemplate.C2KIdentifier, ciqTemplate.IMP_RCF,ciqTemplate.IMP_AWD,ciqTemplate.IMP_NFD,
			ciqTemplate.IMP_DLV,ciqTemplate.EXP_RCS,ciqTemplate.EXP_DEP,ciqTemplate.GHA 
	)q2 on 
	--q1.C2K_Identifier = q2.C2KIdentifier and 
	q1.GHA = q2.GHA  
	where q2.Carrier like concat('%"' , q1.Carrier ,'"%')
	order by rowno asc
		

	]]>
	</select>
	
	<resultMap id="importExportWorkingListMap" 
				type="com.ngen.cosys.report.service.poi.model.CIQImportExportWorkingListReport">
		<result column="C2K_Identifier" property="c2kIdentifier" />
		<result column="GHA" property="gha" />
		<result column="Month" property="month" />
		<result column="Station" property="station" />
		<result column="GRP" property="airline" />
		<result column="ExportShipment" property="exportAWBMWBs" />
		<result column="ExportManifested" property="exportShipmentsManifested" />
		<result column="FWBReceived" property="fwbReceived" />
		<result column="FWBReceivedBeforeRCS" property="fwbReceivedBeforeRCS" />
		<result column="RCSSent" property="rcsSent" />
		<result column="FFMSent" property="ffmSent" />
		<result column="FFMSentInTime" property="ffmSentInTime" />
		<result column="DEPSent" property="depSent" />
		<result column="DEPSentInTime" property="depSentInTime" />
		<result column="ImportShipment" property="importAWBMWBs" />
		<result column="ImportManifested" property="importShipmentsManifested" />
		<result column="FWBReceivedBeforeATA" property="fwbReceivedBeforeATA" />
		<result column="FFMReceivedBeforeATA" property="ffmReceivedBeforeATA" />
		<result column="RCFSent" property="rcfSent" />
		<result column="RCFSentInTime" property="rcfSentInTime" />
		<result column="AWDSent" property="awdSent" />
		<result column="AWDSentInTime" property="awdSentInTime" />
		<result column="NFDSent" property="nfdMessagesSent" />
		<result column="NFDSentInTime" property="nfdSentInTime" />
		<result column="DLVSent" property="dlvEvent" />
		<result column="DLVSentInTime" property="dlvSentInTime" />
	</resultMap>
	
	<!-- Import Export Working List Report-->
	<select id="sqlSelectImportExportWorkingListData" resultMap="importExportWorkingListMap" 
			parameterType="com.ngen.cosys.report.model.ExcelReportRequest" >
	<![CDATA[

	--Temp table for cargo iq carrier info
	declare @CargoiQCarrierInfo table(
	       C2K_Identifier varchar(1),
	       GroundHandlerCode varchar(10),
	       Carrier varchar(3),
	       ShipmentYear numeric,
	       ShipmentMonth numeric,
	       Airline varchar(10),
	       FromPeriod datetime,
	       ToPeriod datetime
	)
	--insert the cargo iq carrier info to temp table
	;insert into @CargoiQCarrierInfo
	select 
	       case when Mst_Carrier.CargoIqFlag = 1 then  'C' else  'N' end C2K_Identifier,
	       'SAT' GroundHandlerCode, 
	       Mst_Carrier.CarrierCode as Carrier,
	       datepart(yyyy,cast(#{parameters.fromDate} as datetime)) as ShipmentYear,
	       datepart(mm,cast(#{parameters.fromDate} as datetime)) as ShipmentMonth,
	       (select case when  cargoiqflag  =1 then Mst_Carrier.CarrierCode else 'IE'  end ciqMember)Airline ,
	       cast(#{parameters.fromDate} as datetime) FromPeriod,
	       cast(#{parameters.toDate} as datetime) ToPeriod
	from Mst_Carrier 
	       where  
	              Mst_Carrier.GroundHandlerCode = 'SATS' and 
	              Mst_Carrier.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration,Mst_Carrier 
	        where  CargoiQ_SLAConfiguration.airline=Mst_Carrier.carrierCode) 
	              ;
	--Temp table for storing export flight information
	declare @ExportOperativeFlights table(
	       Flight_ID     numeric,      
	       CarrierCode varchar(3),
	       FlightNumber varchar(5),
	       FlightKey varchar(8),
	       DateSTD       datetime,
	       DateATD       datetime,
	       FlightType varchar(1),
	       FlightBoardPoint varchar(3),
	       FlightOffPoint varchar(3)
	)
	--Query to fetch export flight information based on cargo iq configuration
	; insert into @ExportOperativeFlights
	select
	       Flt_OperativeFlight.Flight_ID,     
	       Flt_OperativeFlight.CarrierCode,
	       Flt_OperativeFlight.FlightNumber,
	       Flt_OperativeFlight.FlightKey,
	       Flt_OperativeFlight_Legs.DateSTD,
	       Flt_OperativeFlight_Legs.DateATD,
	       Flt_OperativeFlight.FlightType,
	       Flt_OperativeFlight_Legs.FlightBoardPoint,
	       Flt_OperativeFlight_Legs.FlightOffPoint
	from
		    @CargoiQCarrierInfo CargoiQCarrierInfo 
		   inner join
	       Flt_OperativeFlight_Legs on              
	       Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} and
	       Flt_OperativeFlight_Legs.DateSTD between 
		   CargoiQCarrierInfo.FromPeriod  and CargoiQCarrierInfo.ToPeriod 	   
		   inner join
	       Flt_OperativeFlight on 
			Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID  
	         and CargoiQCarrierInfo.Carrier = Flt_OperativeFlight.CarrierCode 
			 and FlightOriginDate  between 
		   CargoiQCarrierInfo.FromPeriod-1  and CargoiQCarrierInfo.ToPeriod+1 
	
	--Temp table for storing import flight information
	declare @ImportOperativeFlights table(
	       Flight_ID     numeric,      
	       CarrierCode varchar(3),
	       FlightNumber varchar(5), 
	       FlightKey varchar(8),
	       DateSTA       datetime,
	       DateATA       datetime,
	       FlightType varchar(1),
	       FlightBoardPoint varchar(3),
	       FlightOffPoint varchar(3)
	)
	--Query to fetch export flight information based on cargo iq configuration
	; insert into @ImportOperativeFlights
	select
	       Flt_OperativeFlight.Flight_ID,     
	       Flt_OperativeFlight.CarrierCode,
	       Flt_OperativeFlight.FlightNumber,
	       Flt_OperativeFlight.FlightKey,
	       Flt_OperativeFlight_Legs.DateSTA,
	       Flt_OperativeFlight_Legs.DateATA,
	       Flt_OperativeFlight.FlightType,
	       Flt_OperativeFlight_Legs.FlightBoardPoint,
	       Flt_OperativeFlight_Legs.FlightOffPoint
	from
	       @CargoiQCarrierInfo CargoiQCarrierInfo 
		   inner join
	       Flt_OperativeFlight_Legs on              
	       Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} and
	       Flt_OperativeFlight_Legs.DateSTA  between 
		   CargoiQCarrierInfo.FromPeriod  and CargoiQCarrierInfo.ToPeriod 	   
		   inner join
	       Flt_OperativeFlight on 
			Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID  
	         and CargoiQCarrierInfo.Carrier = Flt_OperativeFlight.CarrierCode 
			 and FlightOriginDate  between 
		   CargoiQCarrierInfo.FromPeriod-3  and CargoiQCarrierInfo.ToPeriod 	  
		
	
	--Temp table for storing export shipment information
	declare @ExportShipmentInfo table(
	       ShipmentId    numeric,      
	       CarrierCode varchar(3)
	)
	--Query to fetch export shipment information based on cargo iq configuration
	insert into @ExportShipmentInfo
	SELECT
	        distinct Shipment_Master.ShipmentId,--Shipment_Master.shipmentnumber,
	              exportFlight.CarrierCode
	        from
	          Shipment_Master inner join
	          Exp_ManifestShipmentInfo
	            on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId inner join
	          Exp_Manifest  on Exp_ManifestShipmentInfo.ManifestId = Exp_Manifest.ManifestId inner join
	         @ExportOperativeFlights exportFlight on exportFlight.Flight_ID=Exp_Manifest.flightid    
	        and
	          Shipment_Master.Origin in ( #{tenantAirport}, #{tenantCity}) and
	          Shipment_Master.ShipmentType in ('AWB') and
	          Shipment_Master.CancelledOn is null
	
	
	--Temp table for storing export shipment manifest information
	declare @ExportShipmentManifestInfo table(
	       ShipmentId    numeric,      
	       CarrierCode varchar(3),
	       Flight_ID numeric,
		   Flightkey varchar(10),		--#Praveen
		   DateATD datetime,
		   DateSTD datetime,
		   ShipmentNumber varchar(14),
		   ShipmentDate datetime,
		   FlightOffPoint varchar(4)
	)
	--Query to fetch export shipment manifest information based on cargo iq configuration
	insert into @ExportShipmentManifestInfo
	  select  Exp_ManifestShipmentInfo.ShipmentId, 
				exportFlight.CarrierCode,Exp_Manifest.FlightId,exportFlight.Flightkey, exportFlight.DateATD,exportFlight.DateSTD,
				Shipment_Master.ShipmentNumber,Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint
	        from
	          Shipment_Master inner join
	          Exp_ManifestShipmentInfo
	            on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId inner join
	          Exp_Manifest
	            on Exp_ManifestShipmentInfo.ManifestId = Exp_Manifest.ManifestId inner join
	           @ExportOperativeFlights exportFlight on exportFlight.Flight_ID=Exp_Manifest.flightid     
	           inner join Exp_flightevents on Exp_flightevents.flightid =   exportFlight.Flight_ID and Exp_flightevents.ManifestCompletedAt is not null      
	        and
	          Shipment_Master.Origin in ( #{tenantAirport}, #{tenantCity}) and
	          Shipment_Master.ShipmentType in ('AWB') and 
	          Shipment_Master.CancelledOn is null 
	       group by 
				Exp_ManifestShipmentInfo.ShipmentId,
				exportFlight.CarrierCode,  exportFlight.Flightkey,      
	           Exp_Manifest.FlightId,exportFlight.DateATD,exportFlight.DateSTD,Shipment_Master.ShipmentNumber,Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint  
	
	----Temp table for storing export FWB information
	declare @ExportFwb table(
	    CarrierCode varchar(4),
	    fwbCount numeric 
	)
	----Query to fetch export shipment FWB
	insert into @ExportFwb		   
	 SELECT fwb.CarrierCode , --fwb.ShipmentNumber, 
			count(1)fwbCount from 
	  (select distinct exportManifest.ShipmentId, exportManifest.carrierCode,ShipmentNumber
	        from @ExportShipmentManifestInfo exportManifest
	        where exists(
	        select 1  from
	        Shipment_FreightWayBill where
	        Shipment_FreightWayBill.AwbNumber = exportManifest.ShipmentNumber and
	        Shipment_FreightWayBill.AwbDate = exportManifest.ShipmentDate
			))fwb
			group by fwb.CarrierCode--, fwb.ShipmentNumber  
	
	----Temp table for storing export FWB information
	declare @ExportFwbRecvdb4RCS table(
	    CarrierCode varchar(4),
	    fwbRecvdCount numeric 
	)
	----Query to fetch export shipment FWB
	insert into @ExportFwbRecvdb4RCS	
	 SELECT FwbRecvd.CarrierCode, count(1)fwbRecvdCount from 
	  (SELECT
	        distinct exportManifest.ShipmentId,exportManifest.CarrierCode
	        from
	        @ExportShipmentManifestInfo exportManifest
	        inner join Shipment_FreightWayBill
	                      on exportManifest.ShipmentNumber = Shipment_FreightWayBill.AwbNumber and
	        exportManifest.ShipmentDate = Shipment_FreightWayBill.AwbDate inner join
	        Shipment_StatusUpdateEvent
	                      on exportManifest.Shipmentid = Shipment_StatusUpdateEvent.Shipmentid and Shipment_StatusUpdateEvent.EventType = 'RCS'
	      where
	        Shipment_StatusUpdateEvent.EventType = 'RCS' and
	        isnull(Shipment_FreightWayBill.MessageProcessedDate, Shipment_FreightWayBill.CreatedDateTime) <
	        convert(datetime, CONVERT(datetimeoffset, isnull(Shipment_StatusUpdateEvent.EventInitiatedOn, Shipment_StatusUpdateEvent.EventInitiatedOn))  
			AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))FwbRecvd
			group by FwbRecvd.CarrierCode      
	
	
	--Temp table for storing RCS airlines configured  in CiQ
	declare @CargoiQRCSAirlines table(
	       CarrierCode varchar(3),
		   rcsFlag varchar(1)
	)
	--Query to fetch RCS airlines configured in CiQ
	insert into @CargoiQRCSAirlines
	select distinct Airline CarrierCode, 'Y' rcsFlag  from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCS'
	
	--Temp table for storing RCS Shipment from StatusUpdateEvent
	declare @StatusEventRCS table(
	  	CarrierCode varchar(3),
		--shipmentnumber varchar(14),			--#praveen
		rcsFlag varchar(1),
		rcsCount numeric
	)
	
	--Query to fetch RCS Shipment from StatusUpdateEvent
	insert into @StatusEventRCS
	select
	        shipmentInfo.CarrierCode,--GroupedShipment_StatusUpdateEventInfo.ShipmentNumber, 
			carrierInfoRCS.rcsFlag,
			count(1) rcsCount
	    FROM
			@ExportShipmentInfo shipmentInfo  		
			inner join Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			inner join 
			(select
	                    min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	                    Shipment_StatusUpdateEvent.ShipmentId, Shipment_StatusUpdateEvent.ShipmentNumber
	        from
	                    Shipment_StatusUpdateEvent
	        where
	                    Shipment_StatusUpdateEvent.EventType = 'RCS' and
	                    Shipment_StatusUpdateEvent.IsOutgoing = 1 and
						--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	                    Shipment_StatusUpdateEvent.EventCompletedOn is not null
						--and  Shipment_StatusUpdateEvent.ShipmentNumber = '20580649085'
						
						and exists (select 1 from Exp_eAcceptanceServiceInformation 
							where ServiceNumber = Shipment_StatusUpdateEvent.AcceptanceServiceNumber
								and Status != 'REJECTED') -- change: added rejected
	        group by
	                    Shipment_StatusUpdateEvent.ShipmentId, Shipment_StatusUpdateEvent.ShipmentNumber
	        )GroupedShipment_StatusUpdateEventInfo
	            on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
					Shipment_StatusUpdateEvent.FsuStatusLine is not null
			left join @CargoiQRCSAirlines carrierInfoRCS on carrierInfoRCS.CarrierCode = shipmentInfo.CarrierCode
			group by 
			shipmentInfo.CarrierCode,carrierInfoRCS.rcsFlag--, GroupedShipment_StatusUpdateEventInfo.ShipmentNumber
	
	
	-----------------------------DEP----------------------------------
	
	--Temp table for storing DEP shipment manifest  
	declare @DEPShipmentManifestInfo table(
	       ShipmentId    numeric,      
	       CarrierCode varchar(3),
	       Flight_ID numeric,
		   DateATD datetime,
		   DateSTD datetime,
		   ShipmentNumber varchar(14),
		   ShipmentDate datetime,
		   FlightOffPoint varchar(4)
	)
	--Query to fetch DEP shipment manifest information 
	insert into @DEPShipmentManifestInfo
	  select  Shipment_FreightOut.ShipmentId, 
				exportFlight.CarrierCode,Shipment_FreightOut.FlightId,exportFlight.DateATD,exportFlight.DateSTD,
				Shipment_Master.ShipmentNumber,Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint
	        from
			 @ExportOperativeFlights exportFlight 
			  inner join Shipment_FreightOut 		  
				on exportFlight.Flight_ID=Shipment_FreightOut.flightid 
	           inner join  Shipment_Master 
	            on Shipment_Master.ShipmentId = Shipment_FreightOut.ShipmentId  
	          and
	          Shipment_Master.Origin in ( #{tenantAirport}, #{tenantCity}) and
	          Shipment_Master.ShipmentType in ('AWB') and 
	          Shipment_Master.CancelledOn is null 
	       group by 
				Shipment_FreightOut.ShipmentId,
				exportFlight.CarrierCode,        
	           Shipment_FreightOut.FlightId,exportFlight.DateATD,exportFlight.DateSTD,Shipment_Master.ShipmentNumber,Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint  
	
	--Temp table for storing DEP airlines configured  in CiQ
	declare @CargoiQDEPAirlines table(
	       CarrierCode varchar(3),
		   depFlag varchar(2)
	)
	--Query to fetch DEP airlines configured in CiQ
	insert into @CargoiQDEPAirlines
	select distinct Airline CarrierCode, 'Y' depFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' and CargoiQ_SLAConfiguration.FlowType='E'
	
	--Temp table for storing DEP Shipment from StatusUpdateEvent
	declare @StatusEventDEP table(
			CarrierCode varchar(3),
			depFlag varchar(2),
	        depCount numeric
	)
	--Query to fetch DEP Shipment from StatusUpdateEvent
	insert into @StatusEventDEP
	SELECT
	     shipmentInfo.CarrierCode,
		 carrierInfo.depFlag,	
		 count(1) depCount
	    FROM
	    @DEPShipmentManifestInfo shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId
		inner join
	    (select
	                min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	                Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.Outgoingflightid
	    from
	                Shipment_StatusUpdateEvent
	    where
	                Shipment_StatusUpdateEvent.EventType = 'DEP' and
	                Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	                Shipment_StatusUpdateEvent.EventCompletedOn is not null
					--and  Shipment_StatusUpdateEvent.ShipmentNumber = '53905801445'
	    group by
	                Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.Outgoingflightid
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                        Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
							Shipment_StatusUpdateEvent.FsuStatusLine is not null
		left join @CargoiQDEPAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
			group by 
				 shipmentInfo.CarrierCode, carrierInfo.depFlag
	
	--Temp table for storing DEP SLA time from ciqConfiguration
	 declare @DEPSlaTime table( 
	    depSlaTime numeric,
		carrierCode varchar(4),
		Destination varchar(5)
	  )
	--Query to fetch DEP SLA Time from CiQ
	insert into @DEPSlaTime
	 select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode,ciqConfig.Destination
				from
				CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQDEPAirlines carrierInfo
				on ciqConfig.Airline = carrierInfo.CarrierCode 
				and (ciqConfig.FlowType = 'E' OR ciqConfig.FlowType is null) 
				and ciqConfig.CiqMessageTypeId = 'DEP' 
				group by ciqConfig.Airline,ciqConfig.SLATime,ciqConfig.Destination
				order by ciqConfig.SLATime
	
	--Temp table for storing DEP Shipment from StatusUpdateEvent
	declare @StatusEventDEPInTime table(
			CarrierCode varchar(3),
	        depCount numeric
	)
	--Query to fetch DEP Shipment from StatusUpdateEvent
	insert into @StatusEventDEPInTime
	SELECT
	     shipmentInfo.CarrierCode,	
		 count(1) depCount 
		FROM
	    @DEPShipmentManifestInfo shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId	
		inner join
	    (select
	                min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	                Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.Outgoingflightid
	    from
	                Shipment_StatusUpdateEvent
	    where
	                Shipment_StatusUpdateEvent.EventType = 'DEP' and
	                Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	                Shipment_StatusUpdateEvent.EventCompletedOn is not null
					--and  Shipment_StatusUpdateEvent.ShipmentNumber = '53905801445'
	    group by
	                Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.Outgoingflightid
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                        Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
							Shipment_StatusUpdateEvent.FsuStatusLine is not null
		left join @CargoiQDEPAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
	
			left join @DEPSlaTime depSla
					on depSla.carrierCode=  carrierInfo.carrierCode
					and (shipmentInfo.FlightOffPoint = depSla.Destination)  
			left join @DEPSlaTime depSlaOffPointisNull
							  on depSlaOffPointisNull.carrierCode=  carrierInfo.carrierCode  
										   and (shipmentInfo.FlightOffPoint<>depSla.Destination)
			left join @DEPSlaTime depSlaDestisNull
							  on depSlaDestisNull.carrierCode=  carrierInfo.carrierCode  
										   and (depSlaDestisNull.destination is null)
			where 
			(((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime, 
			   CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
							  AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))) 
					   <= depSla.depSlaTime) OR
			((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime, 
			   CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
							  AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))) 
					   <= depSlaOffPointisNull.depSlaTime) OR 
			((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime, 
			   CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
							  AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))) 
					   <= depSlaDestisNull.depSlaTime))
				group by 
					 shipmentInfo.CarrierCode  
				
	
	--Temp table for storing Import Shipment
	declare @ImportShipment table(
			 ShipmentId numeric, 
			-- shipmentnumber varchar(14),		--# praveen
			 CarrierCode varchar(5)
	)
	--Query to fetch Import Shipment
	insert into @ImportShipment
	 SELECT
	         distinct Shipment_Master.ShipmentId,--Shipment_Master.ShipmentNumber,
			 flightInfo.CarrierCode 
	        from
	        Shipment_Master inner join
	        Imp_ShipmentVerification
	           on Shipment_Master.ShipmentId=Imp_ShipmentVerification.ShipmentId
	             inner join  @ImportOperativeFlights flightInfo
	            on Imp_ShipmentVerification.FlightId = flightInfo.Flight_ID and
	            Imp_ShipmentVerification.breakdownpieces is not null 
				and exists (select 1 from Imp_ArrivalManifestShipmentInfo
								inner join
								Imp_ArrivalManifestULD
								   on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId inner join
								Imp_ArrivalManifestBySegment
								   on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
								Imp_ArrivalManifestByFlight
								   on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId=Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId 
								   where Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Imp_ArrivalManifestShipmentInfo.ShipmentDate = Shipment_Master.ShipmentDate 
								and Imp_ShipmentVerification.FlightId = Imp_ArrivalManifestByFlight.flightid )
	        and
	            Shipment_Master.Destination in ( #{tenantAirport}, #{tenantCity}) and
	            Shipment_Master.ShipmentType in ('AWB') and
	            Shipment_Master.CancelledOn is null
	
	--Temp table for storing Import Manifest Shipment
	declare @ImportManifestShipment table(
			 ShipmentId numeric,
			 CarrierCode varchar(5),
			 Flight_ID numeric,
			 ShipmentNumber varchar(15),
			-- FlightKey varchar(15),		--# Praveen
			 DateSTA datetime,
			 DateATA datetime,
			 ShipmentDate datetime
	)
	--Query to fetch Import Shipment
	insert into @ImportManifestShipment
	SELECT Shipment_Master.ShipmentId,
	 importFlight.CarrierCode,
	 Imp_ArrivalManifestByFlight.FlightId Flight_ID, Imp_ArrivalManifestShipmentInfo.ShipmentNumber,--importFlight.FlightKey,
	 importFlight.DateSTA,importFlight.DateATA,Shipment_Master.ShipmentDate
	 from
	        Shipment_Master inner join
	        Imp_ArrivalManifestShipmentInfo
	           on Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Shipment_Master.ShipmentNumber and
	        Imp_ArrivalManifestShipmentInfo.ShipmentDate = Shipment_Master.ShipmentDate inner join
	        Imp_ArrivalManifestULD
	           on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId inner join
	        Imp_ArrivalManifestBySegment
	           on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
	        Imp_ArrivalManifestByFlight
	           on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId=Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId
	        inner join @ImportOperativeFlights importFlight on Imp_ArrivalManifestByFlight.FlightId=importFlight.flight_id 
	              Inner Join Imp_Shipmentverification on Imp_Shipmentverification.shipmentId=Shipment_Master.ShipmentId 
	              and (Imp_Shipmentverification.breakdownpieces is not null  )
	        and
	            Shipment_Master.Destination  in ( #{tenantAirport}, #{tenantCity}) and
	            Shipment_Master.ShipmentType in ('AWB') and
	            Shipment_Master.CancelledOn is null 
			group by 
				 Shipment_Master.ShipmentId,importFlight.CarrierCode,--importFlight.FlightKey,
				 Imp_ArrivalManifestByFlight.FlightId,Imp_ArrivalManifestShipmentInfo.ShipmentNumber,
				 importFlight.DateSTA,importFlight.DateATA,Shipment_Master.ShipmentDate  
	
	
	--Temp table for storing RCF airlines configured  in CiQ
	declare @CargoiQRCFAirlines table(
	       CarrierCode varchar(3),
		   rcfFlag varchar(2)
	)
	--Query to fetch RCF airlines configured in CiQ
	insert into @CargoiQRCFAirlines
	select distinct Airline CarrierCode, 'Y' rcfFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCF' and CargoiQ_SLAConfiguration.FlowType='I'
	
	--Temp table for storing RCF Shipment from StatusUpdateEvent
	declare @StatusEventRCF table(
			CarrierCode varchar(3),
			rcfFlag varchar(2),
	        rcfCount numeric
	)
	--Query to fetch RCF Shipment from StatusUpdateEvent
	insert into @StatusEventRCF
	SELECT rcf.CarrierCode,rcf.rcfFlag, count(1) rcfCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime,
		carrierInfo.rcfFlag  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join 
		(select
					min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
		from
					Shipment_StatusUpdateEvent
		where
					Shipment_StatusUpdateEvent.EventType = 'RCF' and
					--Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
					Shipment_StatusUpdateEvent.EventCompletedOn is not null
		group by
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                         Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
							 Shipment_StatusUpdateEvent.FsuStatusLine is not null
		 left join @CargoiQRCFAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
		
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.rcfFlag
			)rcf
			group by 
				 rcf.CarrierCode,rcf.rcfFlag
	
	--Temp table for storing RCF SLA time from ciqConfiguration
	 declare @RCFSlaTime table( 
	    rcfSlaTime numeric,
		carrierCode varchar(4)
	  )
	--Query to fetch DEP SLA Time from CiQ
	insert into @RCFSlaTime
	 select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
				from
				CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQRCFAirlines carrierInfo
				on ciqConfig.Airline = carrierInfo.CarrierCode 
				and (ciqConfig.FlowType = 'I' OR ciqConfig.FlowType is null) 
				and ciqConfig.CiqMessageTypeId = 'RCF' 
				group by ciqConfig.Airline,ciqConfig.SLATime
				order by ciqConfig.SLATime
	
	--Temp table for storing RCFInTime Shipment from StatusUpdateEvent
	declare @StatusEventRCFInTime table(
			CarrierCode varchar(3),
	        rcfCount numeric
	)
	--Query to fetch RCFInTime Shipment from StatusUpdateEvent
	insert into @StatusEventRCFInTime
	SELECT rcf.CarrierCode,  count(1) rcfCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
		format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
		AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join 
		(select
					min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
		from
					Shipment_StatusUpdateEvent
		where
					Shipment_StatusUpdateEvent.EventType = 'RCF' and
					--Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
					Shipment_StatusUpdateEvent.EventCompletedOn is not null
		group by
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                         Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
							 Shipment_StatusUpdateEvent.FsuStatusLine is not null
		 left join @CargoiQRCFAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
		
			left join @RCFSlaTime rcfSla
				on rcfSla.carrierCode=  carrierInfo.carrierCode 
	where
	((DATEDIFF(minute,isnull(shipmentInfo.DateATA, shipmentInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	            AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	        <=rcfSla.rcfSlaTime) 
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn
			)rcf
			group by 
				 rcf.CarrierCode
	
	
	--Temp table for storing RCF airlines configured  in CiQ
	declare @CargoiQNFDAirlines table(
	       CarrierCode varchar(3),
		   nfdFlag varchar(2)
	)
	--Query to fetch NFD airlines configured in CiQ
	insert into @CargoiQNFDAirlines
	select distinct Airline CarrierCode,'Y' nfdFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'NFD' 
	
	--Temp table for storing NFD Shipment from StatusUpdateEvent
	declare @StatusEventNFD table(
			CarrierCode varchar(3),
			nfdFlag varchar(2),
	        nfdCount numeric
	)
	--Query to fetch NFD Shipment from StatusUpdateEvent
	insert into @StatusEventNFD
	SELECT nfd.CarrierCode,nfd.nfdFlag,  count(1) nfdCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
		format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
		AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime
		,carrierInfo.nfdFlag  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join 
		(select
					min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
		from
					Shipment_StatusUpdateEvent
		where
					Shipment_StatusUpdateEvent.EventType = 'NFD' and
					--Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
					Shipment_StatusUpdateEvent.EventCompletedOn is not null
		group by
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                         Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
							 Shipment_StatusUpdateEvent.FsuStatusLine is not null
		 left join @CargoiQNFDAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.nfdFlag 
			)nfd
			group by 
				 nfd.CarrierCode,nfd.nfdFlag
	
	--Temp table for storing NFD SLA time from ciqConfiguration
	 declare @NFDSlaTime table( 
	    nfdSlaTime numeric,
		carrierCode varchar(4)
	  )
	--Query to fetch NFD SLA Time from CiQ
	insert into @NFDSlaTime
	 select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
				from
				CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQNFDAirlines carrierInfo
				on ciqConfig.Airline = carrierInfo.CarrierCode  
				and ciqConfig.CiqMessageTypeId = 'NFD' 
				group by ciqConfig.Airline,ciqConfig.SLATime
				order by ciqConfig.SLATime
	
	--Temp table for storing NFDInTime Shipment from StatusUpdateEvent
	declare @StatusEventNFDInTime table(
			CarrierCode varchar(3),
	        nfdCount numeric
	)
	--Query to fetch NFDInTime Shipment from StatusUpdateEvent
	insert into @StatusEventNFDInTime
	SELECT nfdSent.CarrierCode,  count(1) nfdCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
		and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join 
		(select
					min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
		from
					Shipment_StatusUpdateEvent
		where
					Shipment_StatusUpdateEvent.EventType = 'NFD' and
					--Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
					Shipment_StatusUpdateEvent.EventCompletedOn is not null
		group by
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.IncomingFlightId,
					Shipment_StatusUpdateEvent.Pieces,
					Shipment_StatusUpdateEvent.Weight
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                         Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
							 Shipment_StatusUpdateEvent.FsuStatusLine is not null
		 left join @CargoiQNFDAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
			left join @NFDSlaTime nfdSla
				on nfdSla.carrierCode=  carrierInfo.carrierCode 
	where
	((DATEDIFF(minute,isnull(shipmentInfo.DateATA, shipmentInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	            AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	        <=nfdSla.nfdSlaTime)
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn
			)nfdSent
			group by 
				 nfdSent.CarrierCode
	
	
	--Temp table for storing AWD airlines configured  in CiQ
	declare @CargoiQAWDAirlines table(
	       CarrierCode varchar(3),
		   awdFlag varchar(2)
	)
	--Query to fetch AWD airlines configured in CiQ
	insert into @CargoiQAWDAirlines
	select distinct Airline CarrierCode, 'Y' awdFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'AWD' 
	
	--Temp table for storing AWD Shipment from StatusUpdateEvent
	declare @StatusEventAWD table(
			CarrierCode varchar(3),
			awdFlag varchar(2),
	        awdCount numeric
	)
	--Query to fetch AWD Shipment from StatusUpdateEvent
	insert into @StatusEventAWD
	SELECT awd.CarrierCode,awd.awdFlag, count(1) awdCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime
	,carrierInfo.awdFlag
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			--and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join
	    (select
	                min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	                Shipment_StatusUpdateEvent.ShipmentId
	    from
	                Shipment_StatusUpdateEvent
	    where
	                Shipment_StatusUpdateEvent.EventType = 'AWD' and
	                Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	                Shipment_StatusUpdateEvent.EventCompletedOn is not null
					--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	    group by
	                Shipment_StatusUpdateEvent.ShipmentId
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                        Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
							Shipment_StatusUpdateEvent.FsuStatusLine is not null
		left join @CargoiQAWDAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.awdFlag
			)awd
			group by 
				 awd.CarrierCode,awd.awdFlag
	
	--Temp table for storing AWD SLA time from ciqConfiguration
	 declare @AWDSlaTime table( 
	    awdSlaTime numeric,
		carrierCode varchar(4)
	  )
	--Query to fetch AWD SLA Time from CiQ
	insert into @AWDSlaTime
	 select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
				from
				CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQAWDAirlines carrierInfo
				on ciqConfig.Airline = carrierInfo.CarrierCode  
				and ciqConfig.CiqMessageTypeId = 'AWD' 
				group by ciqConfig.Airline,ciqConfig.SLATime
				order by ciqConfig.SLATime
	
	--Temp table for storing AWDInTime Shipment from StatusUpdateEvent
	declare @StatusEventAWDInTime table(
			CarrierCode varchar(3),
	        awdCount numeric
	)
	--Query to fetch AWDInTime Shipment from StatusUpdateEvent
	insert into @StatusEventAWDInTime
	SELECT awdSent.CarrierCode,  count(1) awdCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
			--and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
		inner join
	    (select
	                min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	                Shipment_StatusUpdateEvent.ShipmentId
	    from
	                Shipment_StatusUpdateEvent
	    where
	                Shipment_StatusUpdateEvent.EventType = 'AWD' and
	                Shipment_StatusUpdateEvent.IsOutgoing = 1 and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	                Shipment_StatusUpdateEvent.EventCompletedOn is not null
					--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	    group by
	                Shipment_StatusUpdateEvent.ShipmentId
	    )GroupedShipment_StatusUpdateEventInfo
	                    on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	                        Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
							Shipment_StatusUpdateEvent.FsuStatusLine is not null
		left join @CargoiQAWDAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
			left join @AWDSlaTime awdSla
				on awdSla.carrierCode= carrierInfo.carrierCode 
	where
	((DATEDIFF(minute,isnull(shipmentInfo.DateATA, shipmentInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
	            AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	        <= awdSla.awdSlaTime)
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn
			)awdSent
			group by 
				 awdSent.CarrierCode
	
	--Temp table for storing DLV airlines configured  in CiQ
	declare @CargoiQDLVAirlines table(
	       CarrierCode varchar(3),
		   dlvFlag varchar(2)
	)
	--Query to fetch DLV airlines configured in CiQ
	insert into @CargoiQDLVAirlines
	select distinct Airline CarrierCode,'Y' dlvFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DLV' 
	
	--Temp table for storing DLV Shipment from StatusUpdateEvent
	declare @StatusEventDLV table(
			CarrierCode varchar(3),
			dlvFlag varchar(2),
	        dlvCount numeric
	)
	--Query to fetch DLV Shipment from StatusUpdateEvent
	insert into @StatusEventDLV
	SELECT dlv.CarrierCode,dlv.dlvFlag, count(1) dlvCount from
	  (SELECT distinct
	     shipmentInfo.CarrierCode,	
	 	 shipmentInfo.ShipmentId,
		 Shipment_StatusUpdateEvent.Pieces ,
	     Shipment_StatusUpdateEvent.Weight ,
		format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)  
		AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime
		,carrierInfo.dlvFlag  
	    FROM
	    @ImportManifestShipment shipmentInfo  inner join 
	    Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
		inner join
	    (select
					min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.DeliveryId
		from
					Shipment_StatusUpdateEvent
		where
					Shipment_StatusUpdateEvent.EventType = 'DLV' and
					--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
					Shipment_StatusUpdateEvent.EventCompletedOn is not null and
					Shipment_StatusUpdateEvent.IsOutgoing = 1 
		group by
					Shipment_StatusUpdateEvent.ShipmentId,
					Shipment_StatusUpdateEvent.DeliveryId
	    )GroupedShipment_StatusUpdateEventInfo
	        on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
				Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and 
				Shipment_StatusUpdateEvent.FsuStatusLine is not null
		left join @CargoiQDLVAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
		 group by 
			shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	        Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.dlvFlag  
			)dlv
			group by 
				 dlv.CarrierCode,dlv.dlvFlag 
	
	--Temp table for storing FWB Shipment for Import
	declare @ImportFWB table(
			CarrierCode varchar(3),
			--shipmentNumber varchar(14),		--#Praveen
	        fwbImpCount numeric
	)
	--Query to fetch AWD Shipment from StatusUpdateEvent
	insert into @ImportFWB
	SELECT fwbImport.CarrierCode,--fwbImport.ShipmentNumber,  
	count(1) fwbImpCount from
	(SELECT
	        importShipment.ShipmentId,--importShipment.ShipmentNumber,
			importShipment.CarrierCode
	        from
	              @ImportManifestShipment importShipment inner join
	              Shipment_FreightWayBill
	          on importShipment.ShipmentNumber = Shipment_FreightWayBill.AwbNumber and
	        importShipment.ShipmentDate = Shipment_FreightWayBill.AwbDate
	   and
		 convert(datetime, CONVERT(datetimeoffset, isnull(Shipment_FreightWayBill.MessageProcessedDate, Shipment_FreightWayBill.MessageProcessedDate))  
	      AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))     
	         < isnull(importShipment.DateATA, importShipment.DateSTA)
			 group by importShipment.CarrierCode,importShipment.ShipmentId,importShipment.ShipmentNumber)fwbImport
			 group by 
				 fwbImport.CarrierCode--,fwbImport.ShipmentNumber
	
				 
	select C2K_Identifier,
	GHA,Month,Station,GRP,
	sum(ExportShipment) ExportShipment,sum(ExportManifested) ExportManifested,
	sum(FWBReceived) FWBReceived, sum(FWBReceivedBeforeRCS) FWBReceivedBeforeRCS, sum(RCSSent) RCSSent, 
	case when sum(RCSSent)>0 then (sum(ExportShipment)-sum(RCSSent)) else '0' end ManRcsDiff,
	sum(FFMSent) FFMSent,
	sum(FFMSentInTime) FFMSentInTime, sum(DEPSent) DEPSent, sum(DEPSentInTime) DEPSentInTime, 
	case when sum(DEPSent)>0 then (sum(ExportManifested)-sum(DEPSent)) else '0' end ManDepDiff, 
	case when sum(DEPSent)>0 then (sum(DEPSent)-sum(DEPSentInTime)) else '0' end  DepSendDiff, 
	sum(ImportShipment) ImportShipment,
	sum(ImportManifested) ImportManifested,sum(FWBReceivedBeforeATA) FWBReceivedBeforeATA, sum(FFMReceivedBeforeATA) FFMReceivedBeforeATA, 
	sum(RCFSent) RCFSent, sum(RCFSentInTime) RCFSentInTime,
	case when sum(RCFSent)>0 then (sum(ImportManifested)-sum(RCFSent)) else '0' end ManRcfDiff,
	case when sum(RCFSent)>0 then (sum(RCFSent)-sum(RCFSentInTime)) else '0' end RcfSendDiff, 
	sum(AWDSent) AWDSent, sum(AWDSentInTime) AWDSentInTime,
	case when sum(AWDSent)>0 then (sum(ImportShipment)-sum(AWDSent)) else '0' end ShpAwdDiff, 
	case when sum(AWDSent)>0 then (sum(AWDSent)-sum(AWDSentInTime)) else '0' end AwdSendDiff, 
	sum(NFDSent) NFDSent,sum(NFDSentInTime) NFDSentInTime,
	case when sum(NFDSent)>0 then (sum(ImportManifested)-sum(NFDSent)) else '0' end ManNfdDiff,
	case when sum(NFDSent)>0 then (sum(NFDSent)-sum(NFDSentInTime)) else '0' end NfdSendDiff,  
	sum(DLVSent) DLVSent, sum(DLVSentInTime) DLVSentInTime,
	(sum(DLVSent)-sum(DLVSentInTime))DLVSendDiff
	from (
	SELECT 
	--CASE WHEN c2K_IDENTIFIER = 'N' THEN 
	--(concat('IE',DENSE_RANK() OVER (order by CASE WHEN c2K_IDENTIFIER = 'N' THEN q2.Carrier ELSE q1.Carrier END)))
	CASE WHEN c2K_IDENTIFIER = 'N' THEN  q2.IEGroup
	ELSE q1.Carrier END AS Grp,q1.*
	from 
	(
	SELECT
	C2K_Identifier,
	GHA,Station,Carrier, 
	[Month] Month,sum(ExportShipment) ExportShipment,sum(ExportManifested) ExportManifested,
	sum(FWBReceived) FWBReceived, sum(FWBReceivedBeforeRCS) FWBReceivedBeforeRCS, 
	case when  RCSCarrierFlag='Y' then isNull(sum(RCSSent),0) else null end RCSSent, sum(FFMSent) FFMSent,
	case when  DEPCarrierFlag='Y' then isNull(sum(DEPSent),0) else null end DEPSent, 
	case when  DEPCarrierFlag='Y' then isNull(sum(DEPSentInTime),0) else null end DEPSentInTime, sum(ImportShipment) ImportShipment, sum(ImportManifested) ImportManifested,
	sum(FWBReceivedBeforeATA) FWBReceivedBeforeATA, sum(FFMReceivedBeforeATA) FFMReceivedBeforeATA, 
	case when RCFCarrierFlag='Y' then isNull(sum(RCFSent),0) else null end RCFSent, 
	case when RCFCarrierFlag='Y' then isNull(sum(RCFSentInTime),0) else null end RCFSentInTime, 
	case when AWDCarrierFlag='Y' then isNull(sum(AWDSent),0) else null end AWDSent, 
	case when AWDCarrierFlag='Y' then isNull(sum(AWDSentInTime),0) else null end AWDSentInTime, 
	case when NFDCarrierFlag='Y' then isNull(sum(NFDSent),0) else null end NFDSent,
	case when NFDCarrierFlag='Y' then isNull(sum(NFDSentInTime),0) else null end NFDSentInTime, 
	case when DLVCarrierFlag='Y' then isNull(sum(DLVSent),0) else null end DLVSent, 
	case when DLVCarrierFlag='Y' then isNull(sum(DLVSent),0) else null end DLVSentInTime,  sum(FFMSentInTime) FFMSentInTime
	FROM (
	SELECT
	     cargoIQCarrier.C2K_Identifier,
	     'SAT' GHA,
	       #{tenantAirport} Station,
	     cargoIQCarrier.Airline,
	     cargoIQCarrier.Carrier,
	     cargoIQCarrier.ShipmentMonth ,
	     cast(cargoIQCarrier.ShipmentYear as varchar)+'-'+ RIGHT('0' + cast(cargoIQCarrier.ShipmentMonth as varchar),2) Month,
	
	(SELECT
	        count(distinct expShpInfo.ShipmentId) from @ExportShipmentInfo expShpInfo
	              where
	              expShpInfo.CarrierCode = cargoIQCarrier.Carrier
	)ExportShipment,
	(SELECT
	        count(expShpManInfo.ShipmentId) from @ExportShipmentManifestInfo expShpManInfo
	              where
	              expShpManInfo.CarrierCode = cargoIQCarrier.Carrier
	)ExportManifested,
	(select fwbRecvd.fwbCount from @ExportFwb fwbRecvd where 
	 fwbRecvd.CarrierCode=cargoIQCarrier.Carrier
	)FWBReceived,
	
	(select fwbRecvdRcs.fwbRecvdCount from @ExportFwbRecvdb4RCS fwbRecvdRcs where 
	 fwbRecvdRcs.CarrierCode=cargoIQCarrier.Carrier
	)FWBReceivedBeforeRCS,
	
	------This is to check whether the carrier is configured for RCS message in CiQ configuration or NOT
	(select  rcsCount.rcsFlag from @StatusEventRCS rcsCount where 
	 rcsCount.CarrierCode=cargoIQCarrier.Carrier
	)RCSCarrierFlag,
	
	(select  rcsCount.rcsCount from @StatusEventRCS rcsCount where 
	 rcsCount.CarrierCode=cargoIQCarrier.Carrier
	)RCSSent,
	(SELECT
	    count(expShpManInfo.ShipmentId) from @ExportShipmentManifestInfo expShpManInfo
	            where
	            expShpManInfo.CarrierCode = cargoIQCarrier.Carrier
	)FFMSent, 
	(SELECT
	    count(expShpManInfo.ShipmentId) from @ExportShipmentManifestInfo expShpManInfo
	            where
	            expShpManInfo.CarrierCode = cargoIQCarrier.Carrier
	)FFMSentInTime, 
	(select depCount.depFlag from @StatusEventDEP depCount where 
	 depCount.CarrierCode=cargoIQCarrier.Carrier
	)DEPCarrierFlag,
	(select depCount.depCount from @StatusEventDEP depCount where 
	 depCount.CarrierCode=cargoIQCarrier.Carrier
	)DEPSent,
	(select depSentCount.depCount from @StatusEventDEPInTime depSentCount where 
	 depSentCount.CarrierCode=cargoIQCarrier.Carrier
	)DEPSentInTime,
	(SELECT
	        count(distinct impShpInfo.ShipmentId) from @ImportShipment impShpInfo
	              where
	              impShpInfo.CarrierCode = cargoIQCarrier.Carrier
	)ImportShipment,
	(SELECT
	        count(impManifestShpInfo.ShipmentId) from @ImportManifestShipment impManifestShpInfo
	              where
	              impManifestShpInfo.CarrierCode = cargoIQCarrier.Carrier
	)ImportManifested,
	(SELECT
	       impFwb.fwbImpCount from @ImportFWB impFwb
	              where
	              impFwb.CarrierCode = cargoIQCarrier.Carrier
	)FWBReceivedBeforeATA,
	(SELECT
	        count(impManifestShpInfo.ShipmentId) from @ImportManifestShipment impManifestShpInfo
	              where
	              impManifestShpInfo.CarrierCode = cargoIQCarrier.Carrier
	)FFMReceivedBeforeATA,
	(select rcfCount.rcfFlag from @StatusEventRCF rcfCount where 
	 rcfCount.CarrierCode=cargoIQCarrier.Carrier
	)RCFCarrierFlag,
	(select rcfCount.rcfCount from @StatusEventRCF rcfCount where 
	 rcfCount.CarrierCode=cargoIQCarrier.Carrier
	)RCFSent,
	(select rcfCountInTime.rcfCount from @StatusEventRCFInTime rcfCountInTime where 
	 rcfCountInTime.CarrierCode=cargoIQCarrier.Carrier
	)RCFSentInTime,
	(select nfdCount.nfdFlag from @StatusEventNFD nfdCount where 
	 nfdCount.CarrierCode=cargoIQCarrier.Carrier
	)NFDCarrierFlag,
	(select nfdCount.nfdCount from @StatusEventNFD nfdCount where 
	 nfdCount.CarrierCode=cargoIQCarrier.Carrier
	)NFDSent,
	(select nfdCount.nfdCount from @StatusEventNFDInTime nfdCount where 
	 nfdCount.CarrierCode=cargoIQCarrier.Carrier
	)NFDSentInTime,
	(select awdCount.awdFlag from @StatusEventAWD awdCount where 
	 awdCount.CarrierCode=cargoIQCarrier.Carrier
	)AWDCarrierFlag,
	(select awdCount.awdCount from @StatusEventAWD awdCount where 
	 awdCount.CarrierCode=cargoIQCarrier.Carrier
	)AWDSent,
	(select awdCount.awdCount from @StatusEventAWDInTime awdCount where 
	 awdCount.CarrierCode=cargoIQCarrier.Carrier
	)AWDSentInTime,
	(select dlvCount.dlvFlag from @StatusEventDLV dlvCount where 
	 dlvCount.CarrierCode=cargoIQCarrier.Carrier
	)DLVCarrierFlag,
	(select dlvCount.dlvCount from @StatusEventDLV dlvCount where 
	 dlvCount.CarrierCode=cargoIQCarrier.Carrier
	)DLVSent
	 
	
	FROM
	        @CargoiQCarrierInfo cargoIQCarrier
	   ) OuterMostQuery
	       
	Group by C2K_Identifier,Carrier,[Month],GHA,Station,ExportShipment,ExportManifested,
	FWBReceived, FWBReceivedBeforeRCS, RCSSent,
	  DEPSent,DEPSentInTime,ImportShipment,ImportManifested,FWBReceivedBeforeATA,RCFSent,RCFSentInTime,NFDSent,NFDSentInTime,AWDSent,AWDSentInTime,DLVSent,
	  RCSCarrierFlag,DEPCarrierFlag,RCFCarrierFlag,NFDCarrierFlag,AWDCarrierFlag,DLVCarrierFlag,FFMSentInTime
	) as q1
	inner join 
	(
		select ciqTemplate.C2KIdentifier,   GHA,  
		CASE WHEN C2KIdentifier='A' THEN --
		concat('IE',dense_Rank() OVER(ORDER BY C2KIdentifier, (IIF(IMP_AWD IS NULL, 0 , 1) + IIF(EXP_DEP IS NULL, 0 , 1) + IIF(IMP_DLV IS NULL, 0 , 1) +
		IIF(IMP_NFD IS NULL, 0 , 1) + IIF(IMP_RCF IS NULL, 0 , 1) + IIF(EXP_RCS IS NULL, 0 , 1)) desc, concat(IMP_RCF, IMP_AWD, IMP_NFD, IMP_DLV, EXP_RCS, EXP_DEP) asc)) ELSE 'AA' --
		END
		AS IEGroup,
	
		(IIF(IMP_AWD IS NULL, 0 , 1) + IIF(EXP_DEP IS NULL, 0 , 1) + IIF(IMP_DLV IS NULL, 0 , 1) +
		IIF(IMP_NFD IS NULL, 0 , 1) + IIF(IMP_RCF IS NULL, 0 , 1) + IIF(EXP_RCS IS NULL, 0 , 1)) counts,
	
		--dense_Rank() OVER(ORDER BY C2KIdentifier,STRING_AGG(airline,',') desc) as rowno,
		dense_Rank() OVER(ORDER BY C2KIdentifier, (IIF(IMP_AWD IS NULL, 0 , 1) + IIF(EXP_DEP IS NULL, 0 , 1) + IIF(IMP_DLV IS NULL, 0 , 1) +
		IIF(IMP_NFD IS NULL, 0 , 1) + IIF(IMP_RCF IS NULL, 0 , 1) + IIF(EXP_RCS IS NULL, 0 , 1)) desc,concat(IMP_RCF, IMP_AWD, IMP_NFD, IMP_DLV, EXP_RCS, EXP_DEP)  asc) as rowno, --
	
		concat('"',STRING_AGG(airline,'","'),'"') Carrier,
		IMP_RCF, IMP_AWD, IMP_NFD, IMP_DLV, EXP_RCS, EXP_DEP
		from (select  distinct 
		(select case when cargoIqFlag=1 then 'C' else 'A' end C2KIdentifier from mst_carrier where mst_carrier.carriercode=a.airline)C2KIdentifier,
		'SAT' as GHA,
		a.airline,
		(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='RCF' and FlowType='I' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_RCF,
		(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='AWD' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_AWD, 
		(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='NFD' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_NFD,
		(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='DLV' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_DLV,
		(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='RCS' and CargoiQ_SLAConfiguration.airline=a.airline) EXP_RCS,
		(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='DEP' and FlowType='E' and CargoiQ_SLAConfiguration.airline=a.airline) EXP_DEP 
		from CargoiQ_SLAConfiguration a,mst_carrier b where a.airline=b.carriercode 
		) ciqTemplate
		group by  
		ciqTemplate.C2KIdentifier, ciqTemplate.IMP_RCF,ciqTemplate.IMP_AWD,ciqTemplate.IMP_NFD,
		ciqTemplate.IMP_DLV,ciqTemplate.EXP_RCS,ciqTemplate.EXP_DEP,ciqTemplate.GHA
	)q2 on 
	--q1.C2K_Identifier = q2.C2KIdentifier and 
	q1.GHA = q2.GHA 
	where q2.Carrier like concat('%"' , q1.Carrier ,'"%')
	) sumouter 
	group by grp,C2K_Identifier,
	GHA,Month,Station
	order by C2K_Identifier desc

	
	]]>
	</select>
	
	<resultMap id="transferTransitReferenceMap" 
				type="com.ngen.cosys.report.service.poi.model.CIQTransferTransitReport">
		<result column="CarrierGroup" property="group" />
		<result column="Carrier" property="airline" />
		<result column="ExportTransferShipmentsManifested" property="exportTransferShipmentsManifested" />
		<result column="RCTSent" property="exportRCTSent" />
		<result column="ExportTransferFFMSent" property="exportTransferFFMSent" />
		<result column="ExportTransferFFMSentInTime" property="exportTransferFFMSentInTime" />
		<result column="ExportTransferDEPSent" property="exportTransferDEPSent" />
		<result column="ExportTransferDEPSentInTime" property="exportTransferDEPSentInTime" />
		<result column="ImportTransferShipments" property="importTransferAWBMWBs" />
		<result column="ImportTransferShipmentsManifested" property="importTransferShipmentsManifested" />
		<result column="ImportTransferFWBReceived" property="importTransferFWBReceived" />
		<result column="ImportTransferFFMReceivedBeforeATA" property="importTransferFFMReceivedBeforeATA" />
		<result column="ImportTransferRCFSent" property="importTransferRCFSent" />
		<result column="ImportTransferRCFSentInTime" property="importTransferRCFInTime" />
		<result column="ImportTransferTFDSent" property="tfdEventCompleted" />
		<result column="ImportTransferTFDSentInTime" property="tfdMessageInTime" />
		<!-- 
		<result column="ImportTransitShipments" property="importTransitAWBMWBs" />
		<result column="ImportTransitShipments" property="importTransitShipments" />
		<result column="FWBReceived" property="fwbReceived" />
		<result column="FFMReceivedBeforeATA" property="ffmReceivedBeforeATA" />
		<result column="TransitRCFSent" property="transitRCFSent" />
		<result column="TransitRCFSentInTime" property="transitRCFSentInTime" />
		<result column="TransitFFMSent" property="transitFFMSent" />
		<result column="TransitFFMSentInTime" property="transitFFMSentInTime" />
		<result column="TransitDEPSent" property="transitDEPSent" />
		<result column="TransitDEPSentInTime" property="transitDEPSentInTime" />
		-->
	</resultMap>
	
	<select id="sqlSelectTransferTransitReferenceData" resultMap="transferTransitReferenceMap"
			parameterType="com.ngen.cosys.report.model.ExcelReportRequest" >
		<![CDATA[
			With CargoiQCarrierInfo AS(
				select
					case
						when Mst_Carrier.CargoIqFlag = 1 then
							'C'
						else
							'N'
						end C2KIdentifier,
					Mst_Carrier.GroundHandlerCode,
					Mst_CarrierGroup.CarrierGroupCode as CarrierGroup,
					Mst_Carrier.CarrierCode as Carrier,
					datepart(yy, cast(#{parameters.fromDate} as datetime)) as ShipmentYear,
					datepart(mm, cast(#{parameters.fromDate} as datetime)) as ShipmentMonth,
					cast(#{parameters.fromDate} as datetime) FromPeriod,
					cast(#{parameters.toDate} as datetime) ToPeriod
				from
					Mst_Carrier left join
					Mst_AssociateCarrierWithGroup 
						on Mst_Carrier.CarrierCode = Mst_AssociateCarrierWithGroup.CarrierCode left join
					Mst_CarrierGroup
						on Mst_AssociateCarrierWithGroup.Mst_CarrierGroup_ID = Mst_CarrierGroup.Mst_CarrierGroup_ID
				where
					Mst_Carrier.GroundHandlerCode = 'SATS'
			)
			select
				CargoiQCarrierInfo.C2KIdentifier,
				CargoiQCarrierInfo.GroundHandlerCode,
				CargoiQCarrierInfo.CarrierGroup,
				CargoiQCarrierInfo.Carrier,
				cast(CargoiQCarrierInfo.ShipmentYear as varchar) 
					+ '-' + replicate('0', 2 - cast(CargoiQCarrierInfo.ShipmentMonth as varchar)) + '' 
						+ cast(CargoiQCarrierInfo.ShipmentMonth as varchar) ReportingMonth,
				(select
						count(ShipmentCount) 
					from(select					
							count(Shipment_Master.ShipmentId) ShipmentCount
						from
							Shipment_Master inner join
							Exp_ManifestShipmentInfo
								on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId inner join
							Exp_Manifest
								on Exp_ManifestShipmentInfo.ManifestId = Exp_Manifest.ManifestId inner join
							Transhipment_TransferManifestByAWBInfo
								on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
									Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
							Transhipment_TransferManifestByAWB
								on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
						where
							cast(Shipment_Master.DocumentReceivedOn as datetime) 
									between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
							Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
							Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
							Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
							Transhipment_TransferManifestByAWB.CarrierCodeTo = CargoiQCarrierInfo.Carrier and
							Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
							Shipment_Master.CancelledOn is null
						group by
							Exp_Manifest.FlightId,
							Exp_ManifestShipmentInfo.ShipmentId) ManifestInfo) ExportTransferShipmentsManifested,
				(select
						count(Shipment_Master.ShipmentId)
					from
						Shipment_Master inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeTo = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null and exists(
							select
								1
							from
								Shipment_StatusUpdateEvent
							where
								Shipment_StatusUpdateEvent.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Shipment_StatusUpdateEvent.ShipmentDate = Shipment_Master.ShipmentDate and
								Shipment_StatusUpdateEvent.EventType = 'RCT')) RCTSent,
				(select
						count(ShipmentCount) 
					from(select					
							count(Shipment_Master.ShipmentId) ShipmentCount
						from
							Shipment_Master inner join
							Exp_ManifestShipmentInfo
								on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId inner join
							Exp_Manifest
								on Exp_ManifestShipmentInfo.ManifestId = Exp_Manifest.ManifestId inner join
							Transhipment_TransferManifestByAWBInfo
								on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
									Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
							Transhipment_TransferManifestByAWB
								on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
						where
							cast(Shipment_Master.DocumentReceivedOn as datetime) 
									between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
							Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
							Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
							Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
							Transhipment_TransferManifestByAWB.CarrierCodeTo = CargoiQCarrierInfo.Carrier and
							Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
							Shipment_Master.CancelledOn is null
						group by
							Exp_Manifest.FlightId,
							Exp_ManifestShipmentInfo.ShipmentId) ManifestInfo) ExportTransferFFMSent,
				(select
						count(ShipmentCount) 
					from(select					
							count(Shipment_Master.ShipmentId) ShipmentCount
						from
							Shipment_Master inner join
							Exp_ManifestShipmentInfo
								on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId inner join
							Exp_Manifest
								on Exp_ManifestShipmentInfo.ManifestId = Exp_Manifest.ManifestId inner join
							Transhipment_TransferManifestByAWBInfo
								on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
									Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
							Transhipment_TransferManifestByAWB
								on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId 
						where
							cast(Shipment_Master.DocumentReceivedOn as datetime) 
									between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
							Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
							Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
							Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
							Transhipment_TransferManifestByAWB.CarrierCodeTo = CargoiQCarrierInfo.Carrier and
							Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
							Shipment_Master.CancelledOn is null and exists(
								select
									1
								from
									Flt_OperativeFlight inner join
									Flt_OperativeFlight_Legs
										on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
											Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} inner join
									Exp_FlightEvents
										on Flt_OperativeFlight.Flight_ID = Exp_FlightEvents.FlightId join
									CargoiQ_SLAConfiguration
											on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
												(CargoiQ_SLAConfiguration.FlowType = 'E' OR CargoiQ_SLAConfiguration.FlowType is null) and
												CargoiQ_SLAConfiguration.CiqMessageTypeId = 'FFM' and
												(CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
												(CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)
								where
									Flt_OperativeFlight.Flight_ID = Exp_Manifest.FlightId
								group by
									CargoiQ_SLAConfiguration.SLATime,
									Flt_OperativeFlight_Legs.DateATD,
									Exp_FlightEvents.FlightDepartedOn
								having
									Exp_FlightEvents.FlightDepartedOn <= dateadd(minute, CargoiQ_SLAConfiguration.SLATime, Flt_OperativeFlight_Legs.DateATD))
						group by
							Exp_Manifest.FlightId,
							Exp_ManifestShipmentInfo.ShipmentId) ManifestInfo) ExportTransferFFMSentInTime,
				(select
						count(Shipment_Master.ShipmentId)
					from
						Shipment_Master inner join
						Shipment_StatusUpdateEvent
							on Shipment_StatusUpdateEvent.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Shipment_StatusUpdateEvent.ShipmentDate = Shipment_Master.ShipmentDate inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeTo = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null and
						Shipment_StatusUpdateEvent.EventType = 'DEP') ExportTransferDEPSent,
				(select
						count(Shipment_Master.ShipmentId)
					from
						Shipment_Master inner join
						Shipment_StatusUpdateEvent
							on Shipment_StatusUpdateEvent.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Shipment_StatusUpdateEvent.ShipmentDate = Shipment_Master.ShipmentDate inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeTo = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null and
						Shipment_StatusUpdateEvent.EventType = 'DEP' and exists(
							select
								1
							from
								Flt_OperativeFlight inner join
								Flt_OperativeFlight_Legs
									on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
										Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} left join
								CargoiQ_SLAConfiguration
									on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
										(CargoiQ_SLAConfiguration.FlowType = 'E' OR CargoiQ_SLAConfiguration.FlowType is null) and
										CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' and
										(CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
										(CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)
							where
								Flt_OperativeFlight.Flight_ID = Shipment_StatusUpdateEvent.OutgoingFlightId
							group by
								CargoiQ_SLAConfiguration.SLATime,
								Flt_OperativeFlight_Legs.DateATD
							having
								Shipment_StatusUpdateEvent.EventInitiatedOn <= dateadd(minute, isnull(CargoiQ_SLAConfiguration.SLATime,0), Flt_OperativeFlight_Legs.DateATD))) ExportTransferDEPSentInTime,
				(select					
						count(Shipment_Master.ShipmentId) ShipmentCount
					from
						Shipment_Master inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeFrom = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null) ImportTransferShipments,
				(select					
						count(Shipment_Master.ShipmentId) ShipmentCount
					from
						Shipment_Master inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeFrom = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null and exists(
							select
								1
							from
								Imp_ArrivalManifestShipmentInfo
							where
								Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Imp_ArrivalManifestShipmentInfo.ShipmentDate = Shipment_Master.ShipmentDate)) ImportTransferShipmentsManifested,
				(select					
						count(Shipment_Master.ShipmentId) ShipmentCount
					from
						Shipment_Master inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeFrom = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null and exists(
							select
								1
							from
								Shipment_FreightWayBill
							where
								Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
								Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate)) ImportTransferFWBReceived,
				(select					
						count(Shipment_Master.ShipmentId) ShipmentCount
					from
						Shipment_Master inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeFrom = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null and exists(
							select
								1
							from
								Imp_FreightFlightManifestByShipment inner join
								Imp_FreightFlightManifestULD
									on Imp_FreightFlightManifestByShipment.ImpFreightFlightManifestULDId = Imp_FreightFlightManifestULD.ImpFreightFlightManifestULDId inner join
								Imp_FreightFlightManifestBySegment
									on Imp_FreightFlightManifestULD.ImpFreightFlightManifestBySegmentId = Imp_FreightFlightManifestBySegment.ImpFreightFlightManifestBySegmentId inner join
								Imp_FreightFlightManifestByFlight
									on Imp_FreightFlightManifestBySegment.ImpFreightFlightManifestByFlightId = Imp_FreightFlightManifestByFlight.ImpFreightFlightManifestByFlightId inner join
								Flt_OperativeFlight
									on Imp_FreightFlightManifestByFlight.FlightId = Flt_OperativeFlight.Flight_ID inner join
								Flt_OperativeFlight_Legs
									on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
										Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} left join
								CargoiQ_SLAConfiguration
									on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
										(CargoiQ_SLAConfiguration.FlowType = 'I' OR CargoiQ_SLAConfiguration.FlowType is null) and
										CargoiQ_SLAConfiguration.CiqMessageTypeId = 'FFM' and
										(CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
										(CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)		
							where
								Imp_FreightFlightManifestBySegment.MessageStatus = 'PROCESSED' and					 
								Imp_FreightFlightManifestByShipment.AwbNumber = Shipment_Master.ShipmentNumber and
								Imp_FreightFlightManifestByShipment.AwbDate = Shipment_Master.ShipmentDate	
							group by
								CargoiQ_SLAConfiguration.SLATime,
								Flt_OperativeFlight_Legs.DateATA,
								Imp_FreightFlightManifestBySegment.MessageProcessedDate
							having
								Imp_FreightFlightManifestBySegment.MessageProcessedDate <= dateadd(minute, -isnull(CargoiQ_SLAConfiguration.SLATime, 0), Flt_OperativeFlight_Legs.DateATA))) ImportTransferFFMReceivedBeforeATA,
				(select
						count(Shipment_Master.ShipmentId)
					from
						Shipment_Master inner join
						Shipment_StatusUpdateEvent
							on Shipment_StatusUpdateEvent.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Shipment_StatusUpdateEvent.ShipmentDate = Shipment_Master.ShipmentDate inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeFrom = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null and
						Shipment_StatusUpdateEvent.EventType = 'RCF') ImportTransferRCFSent,
				(select
						count(Shipment_Master.ShipmentId)
					from
						Shipment_Master  inner join
						Shipment_StatusUpdateEvent
							on Shipment_StatusUpdateEvent.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Shipment_StatusUpdateEvent.ShipmentDate = Shipment_Master.ShipmentDate inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeFrom = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null and
						Shipment_StatusUpdateEvent.EventType = 'RCF' and exists(
							select
								1
							from
								Imp_ShipmentVerification inner join
								Flt_OperativeFlight
									on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID inner join
								Flt_OperativeFlight_Legs
									on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
										Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} left join
								CargoiQ_SLAConfiguration
									on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
										(CargoiQ_SLAConfiguration.FlowType = 'I' OR CargoiQ_SLAConfiguration.FlowType is null) and
										CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCF' and
										(CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
										(CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)	
							where
								Imp_ShipmentVerification.ShipmentId = Shipment_Master.ShipmentId		
							group by
								CargoiQ_SLAConfiguration.SLATime,
								Flt_OperativeFlight_Legs.DateATA
							having
								Shipment_StatusUpdateEvent.EventInitiatedOn <= dateadd(minute, isnull(CargoiQ_SLAConfiguration.SLATime,0), Flt_OperativeFlight_Legs.DateATA))) ImportTransferRCFSentInTime,
				(select
						count(Shipment_Master.ShipmentId)
					from
						Shipment_Master inner join
						Shipment_StatusUpdateEvent
							on Shipment_StatusUpdateEvent.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Shipment_StatusUpdateEvent.ShipmentDate = Shipment_Master.ShipmentDate inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeFrom = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null and
						Shipment_StatusUpdateEvent.EventType = 'TFD') ImportTransferTFDSent,
				(select
						count(Shipment_Master.ShipmentId)
					from
						Shipment_Master  inner join
						Shipment_StatusUpdateEvent
							on Shipment_StatusUpdateEvent.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Shipment_StatusUpdateEvent.ShipmentDate = Shipment_Master.ShipmentDate inner join
						Transhipment_TransferManifestByAWBInfo
							on Shipment_Master.ShipmentNumber = Transhipment_TransferManifestByAWBInfo.ShipmentNumber and
								Shipment_Master.ShipmentDate = Transhipment_TransferManifestByAWBInfo.ShipmentDate inner join
						Transhipment_TransferManifestByAWB
							on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
					where
						cast(Shipment_Master.DocumentReceivedOn as datetime) 
								between cast(CargoiQCarrierInfo.FromPeriod as datetime) and cast(CargoiQCarrierInfo.ToPeriod as datetime) and
						Shipment_Master.Origin not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.Destination not in ( #{tenantAirport}, #{tenantCity}) and
						Shipment_Master.ShipmentType in ('AWB', 'CBV') and			
						Transhipment_TransferManifestByAWB.CarrierCodeFrom = CargoiQCarrierInfo.Carrier and
						Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo and
						Shipment_Master.CancelledOn is null and
						Shipment_StatusUpdateEvent.EventType = 'TFD' and exists(
							select
								1
							from
								Imp_ShipmentVerification inner join
								Flt_OperativeFlight
									on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID inner join
								Flt_OperativeFlight_Legs
									on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
										Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} left join
								CargoiQ_SLAConfiguration
									on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
										(CargoiQ_SLAConfiguration.FlowType = 'I' OR CargoiQ_SLAConfiguration.FlowType is null) and
										CargoiQ_SLAConfiguration.CiqMessageTypeId = 'TFD' and
										(CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
										(CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)
							where
								Imp_ShipmentVerification.ShipmentId = Shipment_Master.ShipmentId 			
							group by
								CargoiQ_SLAConfiguration.SLATime,
								Flt_OperativeFlight_Legs.DateATA
							having
								Shipment_StatusUpdateEvent.EventInitiatedOn <= dateadd(minute, isnull(CargoiQ_SLAConfiguration.SLATime, 0), Flt_OperativeFlight_Legs.DateATA))) ImportTransferTFDSentInTime	
			from
				CargoiQCarrierInfo
			where
				CargoiQCarrierInfo.Carrier in ('BR', 'TG', 'CK', 'MU', 'VJ', 'RX', 'LO', 'FJ', '9W')
			order by
				CargoiQCarrierInfo.CarrierGroup, CargoiQCarrierInfo.Carrier
		]]>
	</select>
	
	<resultMap id="transferTransitReferenceWorkingListMap" 
				type="com.ngen.cosys.report.service.poi.model.CIQTransferTransitReferenceWorkingListReport">
		<result column="C2K_Identifier" property="c2kIdentifier" />
		<result column="GHA" property="gha" />
		<result column="Month" property="month" />
		<result column="Station" property="station" />
		<result column="CarrierGroup" property="group" />
		<result column="Carrier" property="airline" />
		<result column="ExportTransferShipmentsManifested" property="exportTransferShipmentsManifested" />
		<result column="RCTSent" property="rctSent" />
		<result column="ExportTransferFFMSent" property="exportTransferFFMSent" />
		<result column="ExportTransferFFMSentInTime" property="exportTransferFFMSentInTime" />
		<result column="ExportTransferDEPSent" property="exportTransferDEPSent" />
		<result column="ExportTransferDEPSentInTime" property="exportTransferDEPSentInTime" />
		<result column="ImportTransferShipments" property="importTransferAWBMWBs" />
		<result column="ImportTransferShipmentsManifested" property="importTransferShipmentsManifested" />
		<result column="ImportTransferFWBReceived" property="importTransferFWBReceived" />
		<result column="ImportTransferFFMReceivedBeforeATA" property="importTransferFFMReceivedBeforeATA" />
		<result column="ImportTransferRCFSent" property="importTransferRCFSent" />
		<result column="ImportTransferRCFSentInTime" property="importTransferRCFInTime" />
		<result column="ImportTransferTFDSent" property="tfdEventCompleted" />
		<result column="ImportTransferTFDSentInTime" property="tfdMessageInTime" />
		<result column="ImportTransitAWB" property="importTransitAWBMWBs" />
		<result column="ImportTransitAWB" property="importTransitShipments" />
		<result column="FWBReceived" property="fwbReceived" />
		<result column="FFMReceivedBeforeATA" property="ffmReceivedBeforeATA" />
		<result column="TransitRCFSent" property="transitRCFSent" />
		<result column="TransitRCFSentInTime" property="transitRCFSentInTime" />
		<result column="TransitFFMSent" property="transitFFMSent" />
		<result column="TransitFFMSentInTime" property="transitFFMSentInTime" />
		<result column="TransitDEPSent" property="transitDEPSent" />
		<result column="TransitDEPSentInTime" property="transitDEPSentInTime" />
	</resultMap>
	
	<!-- Transfer Transit Reference Working List Report -->
	<select id="sqlSelectTransferTransitReferenceWorkingListData" resultMap="transferTransitReferenceWorkingListMap"
			parameterType="com.ngen.cosys.report.model.ExcelReportRequest" >
	<![CDATA[
	--Temp table for cargo iq carrier info
	declare @CargoiQCarrierInfo table(
	C2K_Identifier varchar(1),
	GroundHandlerCode varchar(10),
	Carrier varchar(3),
	ShipmentYear numeric,
	ShipmentMonth numeric,
	Airline varchar(10),
	FromPeriod datetime,
	ToPeriod datetime
	)
	--insert the cargo iq carrier info to temp table
	;insert into @CargoiQCarrierInfo
	select
	case when Mst_Carrier.CargoIqFlag = 1 then  'C' else  'N' end C2K_Identifier,
	'SAT' GroundHandlerCode,
	Mst_Carrier.CarrierCode as Carrier,
	datepart(yyyy,cast(#{parameters.fromDate} as datetime)) as ShipmentYear,
	datepart(mm,cast(#{parameters.fromDate} as datetime)) as ShipmentMonth,
	(select case when  cargoiqflag  =1 then Mst_Carrier.CarrierCode else 'T'  end ciqMember)Airline ,
	cast(#{parameters.fromDate} as datetime) FromPeriod,
	cast(#{parameters.toDate} as datetime) ToPeriod
	from Mst_Carrier
	where
	Mst_Carrier.GroundHandlerCode = 'SATS' and
	Mst_Carrier.CargoIqFlag = 0  and
	Mst_Carrier.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration,Mst_Carrier
	where  CargoiQ_SLAConfiguration.airline=Mst_Carrier.carrierCode and Mst_Carrier.CargoIqFlag=0)
	--Temp table for storing export flight information
	declare @ExportOperativeFlights table(
	Flight_ID numeric,
	CarrierCode varchar(3),
	FlightNumber varchar(5),
	FlightKey varchar(8),
	DateSTD datetime,
	DateATD datetime,
	FlightType varchar(1),
	FlightBoardPoint varchar(3),
	FlightOffPoint varchar(3),
	FlightOriginDate datetime
	)
	--Query to fetch export flight information based on cargo iq configuration
	insert into @ExportOperativeFlights
	select
	Flt_OperativeFlight.Flight_ID,
	Flt_OperativeFlight.CarrierCode,
	Flt_OperativeFlight.FlightNumber,
	Flt_OperativeFlight.FlightKey,
	Flt_OperativeFlight_Legs.DateSTD,
	Flt_OperativeFlight_Legs.DateATD,
	Flt_OperativeFlight.FlightType,
	Flt_OperativeFlight_Legs.FlightBoardPoint,
	Flt_OperativeFlight_Legs.FlightOffPoint,
	Flt_OperativeFlight.FlightOriginDate
	from
	@CargoiQCarrierInfo CargoiQCarrierInfo
	inner join
	Flt_OperativeFlight_Legs on
	Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} and
	Flt_OperativeFlight_Legs.DateSTD between
	CargoiQCarrierInfo.FromPeriod  and CargoiQCarrierInfo.ToPeriod
	inner join
	Flt_OperativeFlight on
	Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID
	and CargoiQCarrierInfo.Carrier = Flt_OperativeFlight.CarrierCode
	and FlightOriginDate  between
	CargoiQCarrierInfo.FromPeriod-1  and CargoiQCarrierInfo.ToPeriod+1
	--Temp table for storing import flight information
	declare @ImportOperativeFlights table(
	Flight_ID     numeric,
	CarrierCode varchar(3),
	FlightNumber varchar(5),
	FlightKey varchar(8),
	DateSTA       datetime,
	DateATA       datetime,
	FlightType varchar(1),
	FlightBoardPoint varchar(3),
	FlightOffPoint varchar(3),
	FlightOriginDate datetime
	)
	--Query to fetch Import flight information based on cargo iq configuration
	; insert into @ImportOperativeFlights
	select
	Flt_OperativeFlight.Flight_ID,
	Flt_OperativeFlight.CarrierCode,
	Flt_OperativeFlight.FlightNumber,
	Flt_OperativeFlight.FlightKey,
	Flt_OperativeFlight_Legs.DateSTA,
	Flt_OperativeFlight_Legs.DateATA,
	Flt_OperativeFlight.FlightType,
	Flt_OperativeFlight_Legs.FlightBoardPoint,
	Flt_OperativeFlight_Legs.FlightOffPoint,
	Flt_OperativeFlight.FlightOriginDate
	from
	@CargoiQCarrierInfo CargoiQCarrierInfo
	inner join
	Flt_OperativeFlight_Legs on
	Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} and
	Flt_OperativeFlight_Legs.DateSTA  between
	CargoiQCarrierInfo.FromPeriod  and CargoiQCarrierInfo.ToPeriod
	inner join
	Flt_OperativeFlight on
	Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID
	and CargoiQCarrierInfo.Carrier = Flt_OperativeFlight.CarrierCode
	and FlightOriginDate  between
	CargoiQCarrierInfo.FromPeriod-3  and CargoiQCarrierInfo.ToPeriod
	--Temp table for storing export Transfer shipment manifest information
	declare @TransferExportShipmentManifestInfo table(
	ShipmentId    numeric,
	CarrierCode varchar(3),
	Flight_ID numeric,
	DateATD datetime,
	DateSTD datetime,
	ShipmentNumber varchar(14),
	ShipmentDate datetime,
	FlightOffPoint varchar(4),
	FlightNumber varchar(10),
	FlightOriginDate datetime,
	Inc_carrier varchar(3)
	)
	--Query to fetch export Transfer shipment manifest information based on cargo iq configuration
	insert into @TransferExportShipmentManifestInfo
	select  Shipment_freightOut.ShipmentId,
	exportFlight.CarrierCode,
	Shipment_freightOut.FlightId,
	exportFlight.DateATD,
	exportFlight.DateSTD,
	Shipment_Master.ShipmentNumber,
	Shipment_Master.ShipmentDate,
	exportFlight.FlightOffPoint,
	exportFlight.FlightNumber,
	exportFlight.FlightOriginDate,
	flt.CarrierCode
	from
	@ExportOperativeFlights exportFlight
	inner join Exp_flightevents on Exp_flightevents.flightid =   exportFlight.Flight_ID and Exp_flightevents.ManifestCompletedAt is not null
	inner join
	Shipment_freightOut
	on Shipment_freightOut.flightid=exportFlight.Flight_ID
	inner join Shipment_Master
	on Shipment_Master.ShipmentId=Shipment_freightOut.ShipmentId  and
	Shipment_Master.Origin not in ('SIN','SIN') and Shipment_Master.Destination not in ('SIN','SIN')
	and Shipment_Master.ShipmentType in ('AWB') and  Shipment_Master.CancelledOn is null
	inner join  Flt_OperativeFlight flt
	on flt.Flight_ID= Shipment_FreightOut.InboundFlightId
	left join
	Exp_ManifestShipmentInfo on Exp_ManifestShipmentInfo.ShipmentId=Shipment_freightOut.ShipmentId
	left join
	Exp_Manifest on Exp_Manifest.ManifestId=Exp_ManifestShipmentInfo.ManifestId
	and Exp_Manifest.FlightId=Shipment_freightOut.FlightId
	WHERE
	(exportFlight.CarrierCode<>flt.CarrierCode
	OR
	(Shipment_freightOut.FlightId=Exp_Manifest.FlightId and Exp_ManifestShipmentInfo.ShipmentId=Shipment_freightOut.ShipmentId
	and Shipment_FreightOut.InboundFlightId is null))
	group by
	Shipment_freightOut.ShipmentId,
	exportFlight.CarrierCode,
	Shipment_freightOut.FlightId,exportFlight.DateATD,exportFlight.DateSTD,Shipment_Master.ShipmentNumber,
	Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint,exportFlight.FlightNumber,exportFlight.FlightOriginDate ,
	flt.CarrierCode
	union
	SELECT  distinct
	Shipment_master.Shipmentid,
	exportFlight.CarrierCode,
	exportFlight.Flight_Id,
	exportFlight.DateATD,
	exportFlight.DateSTD,
	Shipment_master.ShipmentNumber,
	Shipment_master.ShipmentDate,
	exportFlight.FlightOffPoint,
	exportFlight.FlightNumber,
	exportFlight.FlightOriginDate,
	Exp_eAcceptanceServiceInformation.incomingcarrier CarrierCode
	from
	@ExportOperativeFlights exportFlight
	inner join Exp_flightevents on Exp_flightevents.flightid =   exportFlight.Flight_ID and Exp_flightevents.ManifestCompletedAt is not null
	inner join Shipment_freightOut
	on exportFlight.flight_id=Shipment_freightOut.FlightId
	inner join Shipment_master
	on Shipment_freightOut.shipmentId=Shipment_master.shipmentId
	inner join Exp_eAcceptanceDocumentInformation
	on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	inner join Exp_eAcceptanceServiceInformation
	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=Exp_eAcceptanceServiceInformation.ServiceInformationId
	and acceptanceType in ('TERMINAL_TO_TERMINAL')--,'TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')
	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED'   --praveen
	OPTION ( FORCE ORDER )
	--Temp table for storing RCT shipment information
	declare @TransferRCTShipmentInfo table(
	ShipmentId numeric,
	ShipmentNumber varchar(14),
	ShipmentDate datetime,
	CarrierCode varchar(3),
	Flight_ID numeric,
	FlightType varchar(4),
	DateATD datetime,
	DateSTD datetime,
	TRMNumber varchar(20)
	)
	--Query to fetch RCT shipment information based on cargo iq configuration
	insert into @TransferRCTShipmentInfo
	SELECT  distinct
	Shipment_master.ShipmentId,
	Shipment_master.ShipmentNumber,
	Shipment_master.ShipmentDate,
	exportFlight.CarrierCode,
	exportFlight.Flight_ID,
	exportFlight.FlightType,
	exportFlight.DateATD,
	exportFlight.DateSTD,
	Transhipment_TransferManifestByAWB.TRMNumber
	FROM
	@ExportOperativeFlights exportFlight
	Inner Join Shipment_freightOut
	on exportFlight.flight_id=Shipment_freightOut.FlightId
	inner join Shipment_master
	on 	Shipment_freightOut.shipmentId=Shipment_master.shipmentId
	inner join Transhipment_TransferManifestByAWBInfo
	on Transhipment_TransferManifestByAWBInfo.shipmentNumber=Shipment_master.shipmentNumber
	inner join Transhipment_TransferManifestByAWB
	on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
	WHERE
	Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo
	and Transhipment_TransferManifestByAWB.CancellationReason is null
	--and Shipment_master.ShipmentNumber='61873917642'
	--and exportFlight.CarrierCode='sq'
	UNION   ALL
	SELECT  distinct
	Shipment_master.Shipmentid,
	Shipment_master.ShipmentNumber,
	Shipment_master.ShipmentDate,
	exportFlight.CarrierCode,
	exportFlight.Flight_Id,
	exportFlight.FlightType,
	exportFlight.DateATD,
	exportFlight.DateSTD,
	CONVERT(varchar,Exp_eAcceptanceServiceInformation.TRMNumber)TRMNumber
	from
	@ExportOperativeFlights exportFlight
	inner join Shipment_freightOut
	on exportFlight.flight_id=Shipment_freightOut.FlightId
	inner join Shipment_master
	on Shipment_freightOut.shipmentId=Shipment_master.shipmentId
	inner join Exp_eAcceptanceDocumentInformation
	on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	inner join Exp_eAcceptanceServiceInformation
	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=Exp_eAcceptanceServiceInformation.ServiceInformationId
	and acceptanceType in ('TERMINAL_TO_TERMINAL')--,'TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')
	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED'   --praveen
	--and Shipment_master.ShipmentNumber='61873917642'
	--and exportFlight.CarrierCode='sq'
	--Temp table for storing RCT airlines configured  in CiQ
	declare @CargoiQRCTAirlines table(
	CarrierCode varchar(3),
	rctFlag varchar(2)
	)
	--Query to fetch RCT airlines configured in CiQ
	insert into @CargoiQRCTAirlines
	select distinct Airline CarrierCode, 'Y' rctFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCT'
	--Temp table for storing RCT Shipment from StatusUpdateEvent
	declare @StatusEventRCT table(
	CarrierCode varchar(3),
	rctFlag varchar(2),
	rctCount numeric
	)
	--Query to fetch RCT Shipment from StatusUpdateEvent
	insert into @StatusEventRCT
	SELECT rct.CarrierCode,rct.rctFlag,  count(1) rctCount from
	(SELECT distinct
	transferShipmentInfo.CarrierCode,
	transferShipmentInfo.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight ,
	--Shipment_StatusUpdateEvent.TRMNumber,
	Shipment_StatusUpdateEvent.FsuStatusLine,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime
	, CargoiQRCTAirlines.rctFlag
	FROM
	@TransferRCTShipmentInfo transferShipmentInfo
	inner join Shipment_StatusUpdateEvent on transferShipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight
	--,Shipment_StatusUpdateEvent.TRMNumber
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'RCT' and
	--Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP'
	--Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight
	--,Shipment_StatusUpdateEvent.TRMNumber
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId
	and Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQRCTAirlines CargoiQRCTAirlines on CargoiQRCTAirlines.CarrierCode = transferShipmentInfo.CarrierCode
	group by
	transferShipmentInfo.CarrierCode,transferShipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,CargoiQRCTAirlines.rctFlag,Shipment_StatusUpdateEvent.FsuStatusLine,
	Shipment_StatusUpdateEvent.TRMNumber
	)rct
	group by
	rct.CarrierCode,rct.rctFlag
	--Temp table for storing Transfer FFM count from StatusUpdateEvent
	declare @StatusEventTransferFFM table(
	CarrierCode varchar(3),
	ffmCount numeric
	)
	--Query to fetch Transfer FFM from Interface_OutgoingMessageLog
	insert into @StatusEventTransferFFM
	SELECT trfFfm.CarrierCode, count(1) ffmCount from
	(SELECT distinct
	transferShipmentInfo.CarrierCode,
	transferShipmentInfo.ShipmentId
	FROM
	@TransferExportShipmentManifestInfo transferShipmentInfo
	inner join Interface_OutgoingMessageLog
	on Interface_OutgoingMessageLog.FlightNumber=transferShipmentInfo.FlightNumber
	and Interface_OutgoingMessageLog.FlightOriginDate=transferShipmentInfo.FlightOriginDate
	and Interface_OutgoingMessageLog.CarrierCode=transferShipmentInfo.CarrierCode  and
	Interface_OutgoingMessageLog.MessageType = 'FFM' and Interface_OutgoingMessageLog.Status<>'ERROR'  and
	Interface_OutgoingMessageLog.Message is not null
	group by
	transferShipmentInfo.CarrierCode,transferShipmentInfo.ShipmentId
	)trfFfm
	group by
	trfFfm.CarrierCode
	--Temp table for storing DEP Transfer airlines configured  in CiQ
	declare @CargoiQTransferDEPAirlines table(
	CarrierCode varchar(3),
	trfDepFlag varchar(2)
	)
	--Query to fetch DEP Transfer airlines configured in CiQ
	insert into @CargoiQTransferDEPAirlines
	select distinct Airline CarrierCode, 'Y' trfDepFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' and  CargoiQ_SLAConfiguration.FlowType='E'
	--Temp table for storing DEP Transfer Shipment from StatusUpdateEvent
	declare @StatusEventTransferDEP table(
	CarrierCode varchar(3),
	trfDepFlag varchar(2),
	depCount numeric
	)
	--Query to fetch DEP Transfer Shipment from StatusUpdateEvent
	insert into @StatusEventTransferDEP
	SELECT
	shipmentInfo.CarrierCode,
	trfDepCarrierInfo.trfDepFlag,
	count(1) depCount
	FROM
	@TransferExportShipmentManifestInfo shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.Outgoingflightid,
	Shipment_StatusUpdateEvent.ShipmentId
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'DEP' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId
	and Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQTransferDEPAirlines trfDepCarrierInfo
	on trfDepCarrierInfo.CarrierCode = shipmentInfo.CarrierCode
	group by
	shipmentInfo.CarrierCode, trfDepCarrierInfo.trfDepFlag
	--Temp table for storing DEP SLA time from ciqConfiguration
	declare @DEPTransferSlaTime table(
	depSlaTime numeric,
	carrierCode varchar(4),
	Destination varchar(5)
	)
	--Query to fetch DEP SLA Time from CiQ
	insert into @DEPTransferSlaTime
	select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode,ciqConfig.Destination
	from
	CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQTransferDEPAirlines trfDepCarrierInfo
	on ciqConfig.Airline = trfDepCarrierInfo.CarrierCode
	and (ciqConfig.FlowType = 'E' OR ciqConfig.FlowType is null)
	and ciqConfig.CiqMessageTypeId = 'DEP'
	group by ciqConfig.Airline,ciqConfig.SLATime,ciqConfig.Destination
	order by ciqConfig.SLATime
	--Temp table for storing DEPInTime Transfer Shipment from StatusUpdateEvent
	declare @StatusEventTransferDEPInTime table(
	CarrierCode varchar(3),
	depCount numeric
	)
	--Query to fetch DEPInTime Transfer Shipment from StatusUpdateEvent
	insert into @StatusEventTransferDEPInTime
	SELECT
	shipmentInfo.CarrierCode,
	count(1) depCount
	FROM
	@TransferExportShipmentManifestInfo shipmentInfo
	inner join Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.Outgoingflightid,
	Shipment_StatusUpdateEvent.ShipmentId
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'DEP' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId
	and Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @DEPTransferSlaTime depSla
	on depSla.carrierCode=  shipmentInfo.carrierCode
	and (shipmentInfo.FlightOffPoint = depSla.Destination)
	left join @DEPTransferSlaTime depSlaOffPointisNull
	on depSlaOffPointisNull.carrierCode=  shipmentInfo.carrierCode
	and (shipmentInfo.FlightOffPoint<>depSla.Destination)
	left join @DEPTransferSlaTime depSlaDestisNull
	on depSlaDestisNull.carrierCode=  shipmentInfo.carrierCode
	and (depSlaDestisNull.destination is null)
	where
	(((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSla.depSlaTime) OR
	((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSlaOffPointisNull.depSlaTime) OR
	((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSlaDestisNull.depSlaTime))
	group by
	shipmentInfo.CarrierCode
	--Temp table for storing Import Transfer Shipment from Shipment_Freightout
	declare @StatusEventTransferImportShp table(
	ShipmentId numeric,
	CarrierCode varchar(3),
	DateSTA datetime
	)
	--Query to fetch Import Transfer Shipment from StatusUpdateEvent
	insert into @StatusEventTransferImportShp
	select
	distinct  shipment_freightOut.ShipmentId,
	impFlights.CarrierCode,
	impFlights.DateSTA
	from
	@ImportOperativeFlights impFlights
	inner join shipment_freightOut
	on impFlights.flight_id=shipment_freightOut.InboundFlightId
	inner join Shipment_Master on
	Shipment_Master.shipmentId=shipment_freightOut.shipmentId and Shipment_Master.Origin not in ('SIN','SIN') and Shipment_Master.Destination not in ('SIN','SIN') and
	Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	left join
	Transhipment_TransferManifestByAWBInfo on Transhipment_TransferManifestByAWBInfo.InboundFlightId=shipment_freightOut.InboundFlightId
	and Transhipment_TransferManifestByAWBInfo.InboundFlightHandler='DNATA'
	WHERE
	Shipment_FreightOut.InboundFlightId is not null
	and (impFlights.CarrierCode<>(select CarrierCode from Flt_OperativeFlight where flight_id=Shipment_FreightOut.FlightId)
	OR
	(shipment_freightOut.FlightId=shipment_freightOut.InboundFlightId and
	Transhipment_TransferManifestByAWBInfo.InboundFlightId=shipment_freightOut.InboundFlightId and
	Transhipment_TransferManifestByAWBInfo.InboundFlightHandler='DNATA'))
	--Temp table for storing Import Manifest Transfer Shipment from Shipment_Freightout
	declare @StatusEventTransferImportManShp table(
	ShipmentId numeric,
	OutboundFlightId numeric,
	InboundFlightId numeric,
	CarrierCode varchar(3),
	DateSTA datetime,
	DateATA datetime
	)
	--Query to fetch Import Manifest Transfer Shipment from StatusUpdateEvent
	insert into @StatusEventTransferImportManShp
	select
	shipment_freightOut.ShipmentId,
	shipment_freightOut.FlightId OutboundFlightId,
	shipment_freightOut.InboundFlightId,
	impFlights.CarrierCode,
	impFlights.DateSTA,
	impFlights.DateATA
	from
	@ImportOperativeFlights impFlights
	inner join shipment_freightOut
	on impFlights.flight_id=shipment_freightOut.InboundFlightId
	inner join Shipment_Master on
	Shipment_Master.shipmentId=shipment_freightOut.shipmentId and Shipment_Master.Origin not in ('SIN','SIN') and Shipment_Master.Destination not in ('SIN','SIN') and
	Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	left join
	Transhipment_TransferManifestByAWBInfo on Transhipment_TransferManifestByAWBInfo.InboundFlightId=shipment_freightOut.InboundFlightId
	and Transhipment_TransferManifestByAWBInfo.InboundFlightHandler='DNATA'
	WHERE
	Shipment_FreightOut.InboundFlightId is not null
	and (impFlights.CarrierCode<>(select CarrierCode from Flt_OperativeFlight where flight_id=Shipment_FreightOut.FlightId)
	OR
	(shipment_freightOut.FlightId=shipment_freightOut.InboundFlightId and
	Transhipment_TransferManifestByAWBInfo.InboundFlightId=shipment_freightOut.InboundFlightId and
	Transhipment_TransferManifestByAWBInfo.InboundFlightHandler='DNATA'))
	--Temp table for storing Import Transfer/Transit Shipment
	declare @TransferTransitImportShipment table(
	ShipmentId numeric,
	ShipmentNumber varchar(20),
	ShipmentDate datetime,
	CarrierCode varchar(3),
	outCarrier varchar(3),		--Praveen
	Incarrier varchar(3),		--Praveen
	--	DateSTA datetime,
	TransferType varchar(10)
	)
	--Query to fetch Import Transfer /Transfer Shipment
	--$
	insert into @TransferTransitImportShipment
	SELECT distinct
	ImportShipments.ShipmentId,
	ImportShipments.ShipmentNumber,
	ImportShipments.ShipmentDate,
	ImportShipments.CarrierCode,
	OutboundFlight.carrierCode OutCar,
	ImportShipments.carriercode inCar,
	case when isNull(OutboundFlight.carrierCode,'NONE')=(ImportShipments.carriercode)  --Praveen
	then 'TRANSIT'
	when isNull(OutboundFlight.carrierCode,'NONE')<>(ImportShipments.carriercode)
	then 'TRANSFER'
	else 'TRANSIT' end TransferType	--Sync with summary report 5th Feb
	FROM
	(
	select distinct
	Shipment_master.ShipmentId,
	Shipment_master.ShipmentNumber,
	Shipment_Master.ShipmentDate,
	importFlight.CarrierCode CarrierCode,
	importFlight.Flight_Id,
	importFlight.FlightKey,
	importFlight.FlightType,
	importFlight.DateATA,
	importFlight.DateSTA
	from
	@ImportOperativeFlights importFlight
	inner join Imp_ShipmentVerification
	on importFlight.flight_id=Imp_ShipmentVerification.flightid
	inner join Shipment_master
	on Shipment_master.shipmentId=Imp_ShipmentVerification.shipmentId
	and Shipment_Master.Origin not in ('SIN','SIN') and Shipment_Master.Destination not in ('SIN','SIN')
	and Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	UNION
	SELECT  distinct
	Shipment_master.ShipmentId,
	Shipment_master.ShipmentNumber,
	Shipment_Master.ShipmentDate,
	importFlight.CarrierCode CarrierCode,
	importFlight.Flight_Id,
	importFlight.FlightKey,
	importFlight.FlightType,
	importFlight.DateATA,
	importFlight.DateSTA
	from
	/*@ImportOperativeFlights importFlight
	inner join Exp_eAcceptanceDocumentInformation
	on importFlight.flightKey=Exp_eAcceptanceDocumentInformation.FirstBookedFlight
	and importFlight.FlightOriginDate=Exp_eAcceptanceDocumentInformation.FirstBookedFlightDate
	inner join Exp_eAcceptanceServiceInformation
	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=Exp_eAcceptanceServiceInformation.ServiceInformationId
	and acceptanceType in ('TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')
	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED' --praveen*/
	@ImportOperativeFlights importFlight
	inner join Exp_eAcceptanceServiceInformation  ser
	on importFlight.flightKey=ser.IncomingFlight				--changed by Praveen from doc.firstbooked flight to Ser.incoming flight.
	and importFlight.FlightOriginDate=ser.IncomingFlightDate
	and ser.acceptanceType in ('TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')--,'TERMINAL_TO_TERMINAL')
	inner join Exp_eAcceptanceDocumentInformation
	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=ser.ServiceInformationId
	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED' --praveen
	inner join Shipment_master
	on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	and Shipment_Master.Origin not in ('SIN','SIN') and Shipment_Master.Destination not in ('SIN','SIN')
	and Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	)ImportShipments
	LEFT JOIN
	(  select min(carriercode) carriercode, shipmentid
	from
	(select  case when shipment_freightout.FlightId= shipment_freightout.InboundFlightId
	and shipment_freightout.TRMNumber is not null
	then
	'XX'
	else
	carrierCode
	end carrierCode, shipment_freightout.shipmentid
	from shipment_freightout
	inner join Flt_OperativeFlight on
	shipment_freightout.FlightId=Flt_OperativeFlight.flight_Id
	--and shipment_freightout.FlightId <> shipment_freightout.InboundFlightId
	--	and shipment_freightout.ShipmentId='4865709'	--#
	union				--Added by Praveen 7Dec2021
	select carrierCode, shipment_inventory.Shipment_Id
	from shipment_inventory
	--and shipment_freightout.FlightId <> shipment_freightout.InboundFlightId
	inner join Flt_OperativeFlight on
	shipment_inventory.Flight_Id=Flt_OperativeFlight.flight_Id
	) out1
	group by  out1.shipmentid
	--select distinct min(carrierCode)  carrierCode, shipment_freightout.shipmentid
	--from shipment_freightout
	--inner join Flt_OperativeFlight on
	--		shipment_freightout.FlightId=Flt_OperativeFlight.flight_Id
	--group by  shipment_freightout.shipmentid
	)OutboundFlight on OutboundFlight.shipmentid=ImportShipments.shipmentid
	--and ImportShipments.ShipmentId='4865709'
	OPTION ( FORCE ORDER )
	--select * from @TransferTransitImportShipment where outCarrier is null -- 'XX'
	--Temp table for storing Import Manifest Transfer Transit Shipment
	declare @TransferTransitImportManifestShipment table(
	ShipmentId numeric,
	ShipmentNumber varchar(20),
	CarrierCode varchar(3),
	Flight_ID numeric,
	DateSTA datetime,
	DateATA datetime,
	TransferType varchar(10)
	)
	--Query to fetch Import Manifest Transfer Transit Shipment
	insert into @TransferTransitImportManifestShipment
	SELECT distinct
	ImportShipments.ShipmentId,
	ImportShipments.ShipmentNumber,
	ImportShipments.CarrierCode,
	ImportShipments.Flight_ID,
	ImportShipments.DateSTA,
	ImportShipments.DateATA,
	case when isNull(OutboundFlight.carrierCode,'NONE')=(ImportShipments.carriercode)  --Praveen
	then 'TRANSIT'
	when isNull(OutboundFlight.carrierCode,'NONE')<>(ImportShipments.carriercode)
	then 'TRANSFER'
	else 'TRANSIT' end TransferType  --sync with summary report 5Feb
	FROM
	(
	select distinct
	Shipment_master.ShipmentId,
	Shipment_master.ShipmentNumber,
	Shipment_Master.ShipmentDate,
	importFlight.CarrierCode CarrierCode,
	importFlight.Flight_Id,
	importFlight.FlightKey,
	importFlight.FlightType,
	importFlight.DateATA,
	importFlight.DateSTA
	from
	@ImportOperativeFlights importFlight
	inner join Imp_ShipmentVerification
	on importFlight.flight_id=Imp_ShipmentVerification.flightid
	inner join Shipment_master
	on Shipment_master.shipmentId=Imp_ShipmentVerification.shipmentId
	and Shipment_Master.Origin not in ('SIN','SIN') and Shipment_Master.Destination not in ('SIN','SIN')
	and Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	--and Shipment_Master.ShipmentId='4665737' --#
	UNION
	SELECT  distinct
	Shipment_master.ShipmentId,
	Shipment_master.ShipmentNumber,
	Shipment_Master.ShipmentDate,
	importFlight.CarrierCode CarrierCode,
	importFlight.Flight_Id,
	importFlight.FlightKey,
	importFlight.FlightType,
	importFlight.DateATA,
	importFlight.DateSTA
	from
	--@ImportOperativeFlights importFlight
	--inner join Exp_eAcceptanceDocumentInformation
	--	on importFlight.flightKey=Exp_eAcceptanceDocumentInformation.FirstBookedFlight
	--	and importFlight.FlightOriginDate=Exp_eAcceptanceDocumentInformation.FirstBookedFlightDate
	--inner join Exp_eAcceptanceServiceInformation
	--	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=Exp_eAcceptanceServiceInformation.ServiceInformationId
	--	and acceptanceType in ('TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')
	--	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED' --praveen ext
	--inner join Shipment_master
	--              on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	--		and Shipment_Master.Origin not in ('SIN','SIN') and Shipment_Master.Destination not in ('SIN','SIN')
	--		and Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	@ImportOperativeFlights importFlight
	inner join Exp_eAcceptanceServiceInformation  ser
	on importFlight.flightKey=ser.IncomingFlight				--changed by Praveen from doc.firstbooked flight to Ser.incoming flight.
	and importFlight.FlightOriginDate=ser.IncomingFlightDate
	and ser.acceptanceType in ('TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')--,'TERMINAL_TO_TERMINAL')
	inner join Exp_eAcceptanceDocumentInformation
	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=ser.ServiceInformationId
	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED' --praveen
	inner join Shipment_master
	on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	and Shipment_Master.Origin not in ('SIN','SIN') and Shipment_Master.Destination not in ('SIN','SIN')
	and Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	--and Shipment_Master.ShipmentId='4665737' --#
	)ImportShipments
	LEFT JOIN
	(
	select min(carriercode) carriercode, shipmentid
	from
	(select  case when shipment_freightout.FlightId= shipment_freightout.InboundFlightId and shipment_freightout.TRMNumber is not null then
	'XX'
	else
	carrierCode
	end carrierCode, shipment_freightout.shipmentid
	from shipment_freightout
	inner join Flt_OperativeFlight on
	shipment_freightout.FlightId=Flt_OperativeFlight.flight_Id
	--and shipment_freightout.FlightId <> shipment_freightout.InboundFlightId
	--	and shipment_freightout.ShipmentId='4665737'		--#
	union				--Added by Praveen 7Dec2021
	select carrierCode, shipment_inventory.Shipment_Id
	from shipment_inventory
	--and shipment_freightout.FlightId <> shipment_freightout.InboundFlightId
	inner join Flt_OperativeFlight on
	shipment_inventory.Flight_Id=Flt_OperativeFlight.flight_Id
	) out1
	group by  out1.shipmentid
	-- select distinct
	--min(carrierCode) carrierCode, shipment_freightout.shipmentid
	-- from shipment_freightout
	--	inner join Flt_OperativeFlight on
	--			shipment_freightout.FlightId=Flt_OperativeFlight.flight_Id
	--	group by  shipment_freightout.shipmentid
	)OutboundFlight on OutboundFlight.shipmentid=ImportShipments.shipmentid
	OPTION ( FORCE ORDER )
	--Temp table for storing Transfer RCF airlines configured  in CiQ
	declare @CargoiQTransferRCFAirlines table(
	CarrierCode varchar(3),
	rcfFlag varchar(2)
	)
	--Query to fetch Transfer RCF airlines configured in CiQ
	insert into @CargoiQTransferRCFAirlines
	select distinct Airline CarrierCode, 'Y' rcfFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCF' and CargoiQ_SLAConfiguration.FlowType='I'
	--Temp table for storing Transfer RCF Shipment from StatusUpdateEvent
	declare @StatusEventTransferRCF table(
	CarrierCode varchar(3),
	rcfFlag varchar(2),
	rcfCount numeric
	)
	--Query to fetch Transfer RCF Shipment from StatusUpdateEvent
	insert into @StatusEventTransferRCF
	SELECT rcf.CarrierCode,rcf.rcfFlag, count(1) rcfCount from
	(SELECT distinct
	shipmentInfo.CarrierCode,
	shipmentInfo.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime,
	rcfCarrierInfo.rcfFlag
	FROM
	@TransferTransitImportManifestShipment shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.TransferType='TRANSFER'
	and shipmentInfo.Flight_Id=Shipment_StatusUpdateEvent.IncomingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'RCF' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQTransferRCFAirlines rcfCarrierInfo on rcfCarrierInfo.CarrierCode = shipmentInfo.CarrierCode
	--inner join @TransferRcfChannel rcfChannel
	--	on shipmentInfo.CarrierCode=rcfChannel.carrierCode and rcfChannel.channel=Shipment_StatusUpdateEvent.CreatedUserCode
	--inner join Interface_OutgoingMessageLog on
	--Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId=Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId
	--AND Interface_OutgoingMessageLog.Message is not null
	group by
	shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,rcfCarrierInfo.rcfFlag
	)rcf
	group by
	rcf.CarrierCode,rcf.rcfFlag
	--Temp table for storing Transfer RCF SLA time from ciqConfiguration
	declare @TransferRCFSlaTime table(
	rcfSlaTime numeric,
	carrierCode varchar(4)
	)
	--Query to fetch Transfer RCF SLA Time from CiQ
	insert into @TransferRCFSlaTime
	select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
	from
	CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQTransferRCFAirlines rcfCarrierInfo
	on ciqConfig.Airline = rcfCarrierInfo.CarrierCode
	and (ciqConfig.FlowType = 'I' OR ciqConfig.FlowType is null)
	and ciqConfig.CiqMessageTypeId = 'RCF'
	group by ciqConfig.Airline,ciqConfig.SLATime
	order by ciqConfig.SLATime
	--Temp table for storing RCFInTime Shipment from StatusUpdateEvent
	declare @TransferRCFInTime table(
	CarrierCode varchar(3),
	rcfCount numeric
	)
	--Query to fetch RCFInTime Shipment from StatusUpdateEvent
	insert into @TransferRCFInTime
	SELECT rcfSLA.CarrierCode, count(1) rcfCount from
	(SELECT distinct
	shipmentInfo.CarrierCode,
	shipmentInfo.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime
	FROM
	@TransferTransitImportManifestShipment shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.TransferType='TRANSFER'
	and shipmentInfo.Flight_Id=Shipment_StatusUpdateEvent.IncomingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'RCF' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQTransferRCFAirlines rcfCarrierInfo on rcfCarrierInfo.CarrierCode = shipmentInfo.CarrierCode
	left join @TransferRCFSlaTime rcfSla
	on rcfSla.carrierCode=  shipmentInfo.carrierCode
	where
	((DATEDIFF(minute,isnull(shipmentInfo.DateATA, shipmentInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<=rcfSla.rcfSlaTime)
	group by
	shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn
	)rcfSLA
	group by
	rcfSLA.CarrierCode
	--Temp table for storing Transfer TFD airlines configured  in CiQ
	declare @CargoiQTFDAirlines table(
	CarrierCode varchar(3),
	tfdFlag varchar(2)
	)
	--Query to fetch Transfer TFD airlines configured in CiQ
	insert into @CargoiQTFDAirlines
	select distinct Airline CarrierCode, 'Y' tfdFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'TFD'
	--Temp TFD Shipments
	declare @TFDShipment table(
	ShipmentId numeric,
	CarrierCode varchar(3),
	TRMNumber varchar(25),
	DateATA datetime,
	DateSTA datetime,
	Flight_ID numeric
	)
	--Query to fetch TFD Shipments
	insert into @TFDShipment
	SELECT distinct
	Shipment_Master.Shipmentid,
	importFlight.CarrierCode,
	Transhipment_TransferManifestByAWB.TRMNumber,
	importFlight.DateATA,
	importFlight.DateSTA,
	importFlight.Flight_ID
	FROM
	Transhipment_TransferManifestByAWBInfo
	INNER JOIN
	Transhipment_TransferManifestByAWB
	on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
	INNER JOIN @ImportOperativeFlights importFlight
	on importFlight.Flight_ID=Transhipment_TransferManifestByAWBInfo.InboundFlightId
	INNER JOIN Shipment_Master
	on Shipment_Master.ShipmentNumber=Transhipment_TransferManifestByAWBInfo.ShipmentNumber
	--Temp table for storing Transfer TFD Shipment from StatusUpdateEvent
	declare @StatusEventTransferTFD table(
	CarrierCode varchar(3),
	tfdFlag varchar(2),
	tfdCount numeric
	)
	--Query to fetch Transfer TFD Shipment from StatusUpdateEvent
	insert into @StatusEventTransferTFD
	SELECT tfd.CarrierCode,tfd.tfdFlag,
	count(1) tfdCount from
	(SELECT distinct
	tfdShipment.shipmentid,
	UPPER(format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))ActualEventTime,
	tfdShipment.CarrierCode,tfdCarrierInfo.tfdFlag
	FROM
	@TFDShipment tfdShipment
	INNER JOIN Shipment_StatusUpdateEvent
	on Shipment_StatusUpdateEvent.ShipmentId=tfdShipment.ShipmentId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'TFD' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP'
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQTFDAirlines tfdCarrierInfo on tfdCarrierInfo.CarrierCode = tfdShipment.CarrierCode
	)tfd
	group by tfd.CarrierCode,tfd.tfdFlag
	--Temp table for storing TFD SLA time from ciqConfiguration
	declare @TFDSlaTime table(
	tfdSlaTime numeric,
	carrierCode varchar(4)
	)
	--Query to fetch TFD SLA Time from CiQ
	insert into @TFDSlaTime
	select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
	from
	CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQTFDAirlines tfdCarrierInfo
	on ciqConfig.Airline = tfdCarrierInfo.CarrierCode
	and (ciqConfig.FlowType = 'T' OR ciqConfig.FlowType is null)
	and ciqConfig.CiqMessageTypeId = 'TFD'
	group by ciqConfig.Airline,ciqConfig.SLATime
	order by ciqConfig.SLATime
	--Temp table for storing Transfer TFD Shipment from StatusUpdateEvent
	declare @TFDSlaTimeShp table(
	CarrierCode varchar(3),
	tfdCount numeric
	)
	--Query to fetch Transfer TFD Shipment from StatusUpdateEvent
	insert into @TFDSlaTimeShp
	SELECT tfd.CarrierCode,
	count(1) tfdCount from
	(SELECT distinct
	tfdShipment.shipmentid,
	UPPER(format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))ActualEventTime,
	tfdShipment.CarrierCode
	FROM
	@TFDShipment tfdShipment
	INNER JOIN Shipment_StatusUpdateEvent
	on Shipment_StatusUpdateEvent.ShipmentId=tfdShipment.ShipmentId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'TFD' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP'
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @TFDSlaTime tfdSla
	on tfdSla.carrierCode= tfdShipment.carrierCode
	WHERE
	(DATEDIFF(minute,isnull(tfdShipment.DateATA, tfdShipment.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<=tfdSla.tfdSlaTime
	)tfd
	group by tfd.CarrierCode
	--------------------------------TRANSIT----------------------------------------
	--Temp Import Transit FWB Received Shipments
	declare @TransitFWBReceived table(
	CarrierCode varchar(3),
	fwbRecCount numeric
	)
	--Query to fetch Import Transit FWB Received  Shipments
	insert into @TransitFWBReceived
	select fwb.CarrierCode, count(1) as fwbRecCount from (SELECT distinct
	FWBInfo.ShipmentId,
	--FWBInfo.Flight_ID,
	FWBInfo.CarrierCode
	from @TransferTransitImportShipment FWBInfo where FWBInfo.TransferType='TRANSIT' and exists (select 1 from
	Shipment_FreightWayBill where
	FWBInfo.ShipmentNumber = Shipment_FreightWayBill.AwbNumber and
	FWBInfo.ShipmentDate = Shipment_FreightWayBill.AwbDate))fwb
	group by fwb.CarrierCode
	--Temp Import Transfer FWB Received Shipments
	declare @TransferFWBReceived table(
	CarrierCode varchar(3),
	fwbRecCount numeric
	)
	--Query to fetch Import Transfer FWB Received  Shipments
	insert into @TransferFWBReceived
	select fwb.CarrierCode, count(1) as fwbRecCount from (SELECT distinct
	FWBInfo.ShipmentId,
	--FWBInfo.Flight_ID,
	FWBInfo.CarrierCode
	from @TransferTransitImportShipment FWBInfo where FWBInfo.TransferType='TRANSFER' and exists (select 1 from
	Shipment_FreightWayBill where
	FWBInfo.ShipmentNumber = Shipment_FreightWayBill.AwbNumber and
	FWBInfo.ShipmentDate = Shipment_FreightWayBill.AwbDate))fwb
	group by fwb.CarrierCode
	--Temp Import Transit FFM Received Shipments
	declare @TransitFFMReceived table(
	CarrierCode varchar(3),
	ffmRecCount numeric
	)
	--Query to fetch Import Transit FFM Received  Shipments
	insert into @TransitFFMReceived
	select fwb.CarrierCode, count(1) as ffmRecCount from (SELECT distinct
	FWBInfo.ShipmentId,
	FWBInfo.Flight_ID,
	FWBInfo.CarrierCode
	from @TransferTransitImportManifestShipment FWBInfo where exists(
	select 1 from
	@ImportOperativeFlights importFlights
	inner join Imp_FreightFlightManifestByFlight
	on Imp_FreightFlightManifestByFlight.FlightId = importFlights.Flight_ID
	inner join Imp_FreightFlightManifestBySegment
	on Imp_FreightFlightManifestBySegment.ImpFreightFlightManifestByFlightId = Imp_FreightFlightManifestByFlight.ImpFreightFlightManifestByFlightId
	inner join Imp_FreightFlightManifestULD
	on Imp_FreightFlightManifestULD.ImpFreightFlightManifestBySegmentId = Imp_FreightFlightManifestBySegment.ImpFreightFlightManifestBySegmentId
	inner join Imp_FreightFlightManifestByShipment
	on Imp_FreightFlightManifestByShipment.ImpFreightFlightManifestULDId = Imp_FreightFlightManifestULD.ImpFreightFlightManifestULDId
	and
	Imp_FreightFlightManifestBySegment.MessageStatus = 'PROCESSED' and   FWBInfo.TransferType='TRANSIT' and
	Imp_FreightFlightManifestByShipment.AwbNumber = FWBInfo.ShipmentNumber and
	importFlights.Flight_ID=FWBInfo.Flight_Id where
	convert(datetime, CONVERT(datetimeoffset, isnull(Imp_FreightFlightManifestBySegment.MessageProcessedDate, Imp_FreightFlightManifestBySegment.MessageProcessedDate))
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))
	<=isnull(importFlights.DateATA, importFlights.DateSTA)
	group by
	importFlights.DateATA,
	Imp_FreightFlightManifestBySegment.MessageProcessedDate))fwb
	group by fwb.CarrierCode
	--Temp table for storing Transit RCF airlines configured  in CiQ
	declare @CargoiQTransitRCFAirlines table(
	CarrierCode varchar(3),
	rcfFlag varchar(2)
	)
	--Query to fetch Transit RCF airlines configured in CiQ
	insert into @CargoiQTransitRCFAirlines
	select distinct Airline CarrierCode, 'Y' rcfFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCF' and CargoiQ_SLAConfiguration.FlowType='I'
	--Temp table for storing Transit RCF Shipment from StatusUpdateEvent
	declare @StatusTransitRCF table(
	CarrierCode varchar(3),
	rcfFlag varchar(2),
	rcfCount numeric
	)
	--Query to fetch Transit RCF Shipment from StatusUpdateEvent
	insert into @StatusTransitRCF
	SELECT transitRcf.CarrierCode,transitRcf.rcfFlag, count(1) rcfCount from
	(SELECT distinct
	shipmentInfo.CarrierCode,
	shipmentInfo.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime,
	carrierInfo.rcfFlag
	FROM
	@TransferTransitImportManifestShipment shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.TransferType='TRANSIT'
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'RCF' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join  @CargoiQTransitRCFAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
	group by
	shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.rcfFlag
	)transitRcf
	group by
	transitRcf.CarrierCode,transitRcf.rcfFlag
	--Temp table for storing Transit RCF SLA time from ciqConfiguration
	declare @TransitRCFSlaTime table(
	rcfSlaTime numeric,
	carrierCode varchar(4)
	)
	--Query to fetch Transit RCF SLA Time from CiQ
	insert into @TransitRCFSlaTime
	select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
	from
	CargoiQ_SLAConfiguration ciqConfig inner join @TransferTransitImportManifestShipment rcfChannel
	on ciqConfig.Airline = rcfChannel.CarrierCode
	and rcfChannel.TransferType='TRANSIT'
	and (ciqConfig.FlowType = 'I' OR ciqConfig.FlowType is null)
	and ciqConfig.CiqMessageTypeId = 'RCF'
	group by ciqConfig.Airline,ciqConfig.SLATime
	order by ciqConfig.SLATime
	--Temp table for storing Transit RCF SLA Shipment from StatusUpdateEvent
	declare @StatusTransitRCFInTime table(
	CarrierCode varchar(3),
	rcfFlag varchar(2),
	rcfCount numeric
	)
	--Query to fetch Transit RCF SLA Shipment from StatusUpdateEvent
	insert into @StatusTransitRCFInTime
	SELECT transitRcf.CarrierCode,transitRcf.rcfFlag, count(1) rcfCount from
	(SELECT distinct
	shipmentInfo.CarrierCode,
	shipmentInfo.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime,
	carrierInfo.rcfFlag
	FROM
	@TransferTransitImportManifestShipment shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.TransferType='TRANSIT'
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'RCF' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join  @CargoiQTransitRCFAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
	left join @TransitRCFSlaTime rcfSla
	on rcfSla.carrierCode=  shipmentInfo.carrierCode
	where
	((DATEDIFF(minute,isnull(shipmentInfo.DateATA, shipmentInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<=rcfSla.rcfSlaTime)
	group by
	shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.rcfFlag
	)transitRcf
	group by
	transitRcf.CarrierCode,transitRcf.rcfFlag
	--Temp table for storing export Transit shipment manifest information
	declare @TransitExportShipmentManifestInfo table(
	ShipmentId    numeric,
	CarrierCode varchar(3),
	Flight_ID numeric,
	DateATD datetime,
	DateSTD datetime,
	ShipmentNumber varchar(14),
	ShipmentDate datetime,
	FlightOffPoint varchar(4),
	FlightNumber varchar(10),
	FlightOriginDate datetime,
	TransferType varchar(10)									--praveen
	)
	--Query to fetch export Transit shipment manifest information based on cargo iq configuration
	insert into @TransitExportShipmentManifestInfo
	select  expFreightOut.ShipmentId,
	exportFlight.CarrierCode,expFreightOut.FlightId,
	exportFlight.DateATD,exportFlight.DateSTD,
	Shipment_Master.ShipmentNumber,		Shipment_Master.ShipmentDate,
	exportFlight.FlightOffPoint, exportFlight.FlightNumber, exportFlight.FlightOriginDate,
	case when (exportFlight.carrierCode)=isnull(impFlight.carriercode,EXP_ACCEptance.IncomingCarrier)					--praveen
	then 'TRANSIT'
	when (exportFlight.carrierCode)<>isnull(impFlight.carriercode,EXP_ACCEptance.IncomingCarrier)
	then 'TRANSFER'
	--else 'TRANS'					--Praveen
	end TransferType
	from
	@ExportOperativeFlights exportFlight
	inner join
	Shipment_freightOut expFreightOut
	on exportFlight.Flight_ID=expFreightOut.flightid
	inner join Shipment_Master
	on Shipment_Master.ShipmentId=expFreightOut.ShipmentId  and
	Shipment_Master.Origin not in ('SIN','SIN') and Shipment_Master.Destination not in ('SIN','SIN')
	and Shipment_Master.ShipmentType in ('AWB') and  Shipment_Master.CancelledOn is null
	inner join @TransferTransitImportManifestShipment TransferTransitImportManifestShipment --Praveen 09Nov
	on Shipment_Master.shipmentid = TransferTransitImportManifestShipment.shipmentid
	left join Shipment_freightOut importFlightOut
	on expFreightOut.shipmentId=importFlightOut.shipmentId
	left join Flt_OperativeFlight impFlight
	on impFlight.Flight_ID=importFlightOut.InboundFlightId
	left join (select shipmentNumber, IncomingCarrier from Exp_eAcceptanceDocumentInformation doc, Exp_eAcceptanceServiceInformation ser  --praveen
	where doc.ServiceInformationId= ser.ServiceInformationId
	and ser.AcceptanceType not in ('TERMINAL_TO_TERMINAL')
	and doc.status <>'REJECTED'
	)EXP_ACCEptance
	on EXP_ACCEptance.shipmentNumber=Shipment_master.shipmentNumber
	--left join Exp_eAcceptanceDocumentInformation	--praveen
	--	on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	--	and Exp_eAcceptanceDocumentInformation.status <>'REJECTED'
	--	left join Exp_eAcceptanceServiceInformation
	--	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=Exp_eAcceptanceServiceInformation.ServiceInformationId
	--	and Exp_eAcceptanceServiceInformation.status <>'REJECTED' --and Exp_eAcceptanceServiceInformation.AcceptanceType not in ('TERMINAL_TO_TERMINAL')
	where
	exportFlight.CarrierCode=impFlight.CarrierCode OR  importFlightOut.InboundFlightId is null
	group by expFreightOut.ShipmentId,
	exportFlight.CarrierCode,expFreightOut.FlightId,exportFlight.DateATD,exportFlight.DateSTD,
	Shipment_Master.ShipmentNumber,Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint,exportFlight.FlightNumber,
	exportFlight.FlightOriginDate,impFlight.carriercode,EXP_ACCEptance.IncomingCarrier
	OPTION ( FORCE ORDER )
	--Temp table for storing DEP Transit airlines configured  in CiQ
	declare @CargoiQTransitDEPAirlines table(
	CarrierCode varchar(3),
	trfDepFlag varchar(2)
	)
	--Query to fetch DEP Transit airlines configured in CiQ
	insert into @CargoiQTransitDEPAirlines
	select distinct Airline CarrierCode, 'Y' trfDepFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' and  CargoiQ_SLAConfiguration.FlowType='E'
	--Temp table for storing DEP Transit Shipment from StatusUpdateEvent
	declare @StatusEventTransitDEP table(
	CarrierCode varchar(3),
	trfDepFlag varchar(2),
	depCount numeric
	)
	--Query to fetch DEP Transit Shipment from StatusUpdateEvent
	insert into @StatusEventTransitDEP
	SELECT
	shipmentInfo.CarrierCode,
	transitDepCarrierInfo.trfDepFlag,
	count(1) depCount
	FROM
	@TransitExportShipmentManifestInfo shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.Transfertype = 'TRANSIT'	--Praveen
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'DEP' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '53905801445'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQTransitDEPAirlines transitDepCarrierInfo on transitDepCarrierInfo.CarrierCode = shipmentInfo.CarrierCode
	group by
	shipmentInfo.CarrierCode, transitDepCarrierInfo.trfDepFlag
	--Temp table for storing DEP Transit SLA time from ciqConfiguration
	declare @TransitDEPSlaTime table(
	depSlaTime numeric,
	carrierCode varchar(4),
	Destination varchar(5)
	)
	--Query to fetch DEP Transit SLA Time from CiQ
	insert into @TransitDEPSlaTime
	select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode,ciqConfig.Destination
	from
	CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQTransitDEPAirlines transitDepCarrierInfo
	on ciqConfig.Airline = transitDepCarrierInfo.CarrierCode
	and (ciqConfig.FlowType = 'E' OR ciqConfig.FlowType is null)
	and ciqConfig.CiqMessageTypeId = 'DEP'
	group by ciqConfig.Airline,ciqConfig.SLATime,ciqConfig.Destination
	order by ciqConfig.SLATime
	--Temp table for storing DEP SLA Transit Shipment from StatusUpdateEvent
	declare @StatusEventTransitDEPSLA table(
	CarrierCode varchar(3),
	depCount numeric
	)
	--Query to fetch DEP SLA Transit Shipment from StatusUpdateEvent
	insert into @StatusEventTransitDEPSLA
	SELECT
	shipmentInfo.CarrierCode,
	count(1) depCount
	FROM
	@TransitExportShipmentManifestInfo shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.Transfertype = 'TRANSIT'	--PRaveen
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'DEP' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '53905801445'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @TransitDEPSlaTime depSla
	on depSla.carrierCode=  shipmentInfo.carrierCode
	and (shipmentInfo.FlightOffPoint = depSla.Destination)
	left join @TransitDEPSlaTime depSlaOffPointisNull
	on depSlaOffPointisNull.carrierCode=  shipmentInfo.carrierCode
	and (shipmentInfo.FlightOffPoint<>depSla.Destination)
	left join @TransitDEPSlaTime depSlaDestisNull
	on depSlaDestisNull.carrierCode=  shipmentInfo.carrierCode
	and (depSlaDestisNull.destination is null)
	where
	(((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSla.depSlaTime) OR
	((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSlaOffPointisNull.depSlaTime) OR
	((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSlaDestisNull.depSlaTime))
	group by
	shipmentInfo.CarrierCode
	SELECT --concat('T',DENSE_RANK() OVER (order by q2.Carrier)) AS Grp, q1.Carrier, q1.*
	--q2.IEGroup AS Grp, q1.*
	q1.C2K_Identifier, q1.GHA, q1.Month, Station,
	q2.IEGroup AS CarrierGroup, q1.Carrier,
	q1.ExportTransferShipmentsManifested, q1.RCTSent, q1.ExportTransferFFMSent, q1.ExportTransferFFMSentInTime,
	q1.ExportTransferDEPSent, q1.ExportTransferDEPSentInTime, q1.ImportTransferShipments,
	q1.ImportTransferShipmentsManifested, q1.ImportTransferFWBReceived, q1.ImportTransferFFMReceivedBeforeATA,
	q1.ImportTransferRCFSent, q1.ImportTransferRCFSentInTime, q1.ImportTransferTFDSent,
	q1.ImportTransferTFDSentInTime, q1.ImportTransitAWB, q1.ImportTransitShipmentMovements, q1.FWBReceived, q1.FFMReceivedBeforeATA,
	q1.TransitRCFSent, q1.TransitRCFSentInTime, q1.TransitFFMSent, q1.TransitFFMSentInTime, q1.TransitDEPSent,
	q1.TransitDEPSentInTime
	from
	(
	SELECT
	C2K_Identifier,[Month],Station,GHA,
	Carrier,
	sum(ExportTransferShipmentsManifested) ExportTransferShipmentsManifested,
	case when RCTCarrierFlag='Y' then  isNull(sum(RCTSent),0) else null end RCTSent,
	isNull(sum(ExportTransferShipmentsManifested),0) as ExportTransferFFMSent,
	isNull(sum(ExportTransferShipmentsManifested),0) as ExportTransferFFMSentInTime,
	case when TransferDEPCarrierFlag='Y' then isNull(sum(ExportTransferDEPSent),0) else null end ExportTransferDEPSent,
	case when TransferDEPCarrierFlag='Y' then isNull(sum(ExportTransferDEPSentInTime),0) else null end ExportTransferDEPSentInTime,isNull(sum(ImportTransferShipments),0)ImportTransferShipments,
	isNull(sum(ImportTransferShipmentsManifested),0) ImportTransferShipmentsManifested,
	isNull(sum(ImportTransferFWBReceived),0) as ImportTransferFWBReceived,
	isNull(sum(FWBReceived),0) as FWBReceived,
	isNull(sum(ImportTransferShipmentsManifested),0) as ImportTransferFFMReceivedBeforeATA,
	case when TransferRCFCarrierFlag='Y' then isNull(sum(ImportTransferRCFSent),0) else null end ImportTransferRCFSent,
	case when TransferRCFCarrierFlag='Y' then isNull(sum(ImportTransferRCFSentInTime),0) else null end ImportTransferRCFSentInTime,
	case when TFDCarrierFlag='Y' then isNull(sum(ImportTransferTFDSent),0) else null end ImportTransferTFDSent,
	case when TFDCarrierFlag='Y' then isNull(sum(ImportTransferTFDSentInTime),0) else null end ImportTransferTFDSentInTime, sum(ImportTransitAWB)ImportTransitAWB
	,sum(ImportTransitShipmentMovements)as ImportTransitShipmentMovements,
	isNull(sum(ImportTransitFWBReceived),0) as ImportTransitFWBReceived,
	isNull(sum(FFMReceivedBeforeATA),0) FFMReceivedBeforeATA,
	case when TransitRCFCarrier='Y' then isNull(sum(TransitRCFSent),0) else null end TransitRCFSent,
	case when TransitRCFCarrier='Y' then isNull(sum(TransitRCFSentInTime),0) else null end TransitRCFSentInTime,
	isNull(TransitFFMSent,0) as TransitFFMSent,isNull(TransitFFMSent,0) as TransitFFMSentInTime,
	case when TransitDEPCarrier='Y' then isNull(sum(TransitDEPSent),0) else null end TransitDEPSent,
	case when TransitDEPCarrier='Y' then isNull(sum(TransitDEPSentInTime),0) else null end TransitDEPSentInTime
	from (
	select
	cargoIQCarrier.C2K_Identifier,
	'SAT' as GHA,
	#{tenantAirport} as Station,
	cargoIQCarrier.Carrier,
	cast(cargoIQCarrier.ShipmentYear as varchar)+'-'+ RIGHT('0' + cast(cargoIQCarrier.ShipmentMonth as varchar),2) Month,
	---------------------------------------TRANSFER-----------------------------------------------------
	(select sum(shp) from (SELECT  count(1) shp  --!
	from @TransferExportShipmentManifestInfo expShpInfo
	where
	expShpInfo.CarrierCode = cargoIQCarrier.Carrier
	group by  flight_id,shipmentid )shp1
	)ExportTransferShipmentsManifested,
	(SELECT
	rctSent.rctFlag from @StatusEventRCT rctSent
	where
	rctSent.CarrierCode = cargoIQCarrier.Carrier
	)RCTCarrierFlag,
	(SELECT
	rctSent.rctCount from @StatusEventRCT rctSent
	where
	rctSent.CarrierCode = cargoIQCarrier.Carrier
	)RCTSent,
	(SELECT
	trfFfm.ffmCount from @StatusEventTransferFFM trfFfm
	where
	trfFfm.CarrierCode = cargoIQCarrier.Carrier
	)ExportTransferFFMSent,
	(select trfDepCount.trfDepFlag from @StatusEventTransferDEP trfDepCount where
	trfDepCount.CarrierCode=cargoIQCarrier.Carrier
	)TransferDEPCarrierFlag,
	(select trfDepCount.depCount from @StatusEventTransferDEP trfDepCount where
	trfDepCount.CarrierCode=cargoIQCarrier.Carrier
	)ExportTransferDEPSent,
	(select trfDepInTime.depCount from @StatusEventTransferDEPInTime trfDepInTime where
	trfDepInTime.CarrierCode=cargoIQCarrier.Carrier
	)ExportTransferDEPSentInTime,
	(select count(trfImport.ShipmentId) from @TransferTransitImportShipment trfImport where
	trfImport.CarrierCode=cargoIQCarrier.Carrier and trfImport.TransferType='TRANSFER'
	)ImportTransferShipments,
	(select count(trfManImport.ShipmentId) from @TransferTransitImportManifestShipment trfManImport where
	trfManImport.CarrierCode=cargoIQCarrier.Carrier and trfManImport.TransferType='TRANSFER'
	)ImportTransferShipmentsManifested,
	(select trfRcfCount.rcfFlag from @StatusEventTransferRCF trfRcfCount where
	trfRcfCount.CarrierCode=cargoIQCarrier.Carrier
	)TransferRCFCarrierFlag,
	(select trfRcfCount.rcfCount from @StatusEventTransferRCF trfRcfCount where
	trfRcfCount.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransferRCFSent,
	(select trfRcfInTime.rcfCount from @TransferRCFInTime trfRcfInTime where
	trfRcfInTime.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransferRCFSentInTime,
	(select fwbRecvd.fwbRecCount from @TransferFWBReceived fwbRecvd where
	fwbRecvd.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransferFWBReceived,
	(select fwbRecvd.fwbRecCount from @TransferFWBReceived fwbRecvd where
	fwbRecvd.CarrierCode=cargoIQCarrier.Carrier
	)FWBReceived,
	(select trfTfdCount.tfdFlag from @StatusEventTransferTFD trfTfdCount where
	trfTfdCount.CarrierCode=cargoIQCarrier.Carrier
	)TFDCarrierFlag,
	(select trfTfdCount.tfdCount from @StatusEventTransferTFD trfTfdCount where
	trfTfdCount.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransferTFDSent,
	(select trfTfdCount.tfdCount from @TFDSlaTimeShp trfTfdCount where
	trfTfdCount.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransferTFDSentInTime,
	(select count(transitImport.ShipmentId) from @TransferTransitImportShipment transitImport where
	transitImport.CarrierCode=cargoIQCarrier.Carrier and transitImport.TransferType='TRANSIT'
	)ImportTransitAWB,
	(select count(transitImportMan.ShipmentId) from @TransferTransitImportManifestShipment  transitImportMan where
	transitImportMan.CarrierCode=cargoIQCarrier.Carrier and transitImportMan.TransferType='TRANSIT'
	)ImportTransitShipmentMovements,
	(select fwbRecvd.fwbRecCount from @TransitFWBReceived fwbRecvd where
	fwbRecvd.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransitFWBReceived,
	(select ffmRecvd.ffmRecCount from @TransitFFMReceived ffmRecvd where
	ffmRecvd.CarrierCode=cargoIQCarrier.Carrier
	)FFMReceivedBeforeATA,
	(select tnstRcfCount.rcfFlag from @StatusTransitRCF tnstRcfCount where
	tnstRcfCount.CarrierCode=cargoIQCarrier.Carrier
	)TransitRCFCarrier,
	(select tnstRcfCount.rcfCount from @StatusTransitRCF tnstRcfCount where
	tnstRcfCount.CarrierCode=cargoIQCarrier.Carrier
	)TransitRCFSent,
	(select tnstRcfCount.rcfCount from @StatusTransitRCFInTime tnstRcfCount where
	tnstRcfCount.CarrierCode=cargoIQCarrier.Carrier
	)TransitRCFSentInTime,
	(select depCount.trfDepFlag from @StatusEventTransitDEP depCount where
	depCount.CarrierCode=cargoIQCarrier.Carrier
	)TransitDEPCarrier,
	(select depCount.depCount from @StatusEventTransitDEP depCount where
	depCount.CarrierCode=cargoIQCarrier.Carrier --and depCount.TransferType = 'TRANSIT'
	)TransitDEPSent,
	(select depCountSla.depCount from @StatusEventTransitDEPSLA depCountSla where
	depCountSla.CarrierCode=cargoIQCarrier.Carrier --and depCount.TransferType = 'TRANSIT'
	)TransitDEPSentInTime,
	(select count(transitShp.ShipmentId) from @TransitExportShipmentManifestInfo transitShp where
	transitShp.CarrierCode=cargoIQCarrier.Carrier and transitShp.TransferType = 'TRANSIT'
	)TransitFFMSent
	FROM
	@CargoiQCarrierInfo cargoIQCarrier
	) OuterMostQuery
	Group by C2K_Identifier,Carrier,[Month],GHA,Station,ExportTransferShipmentsManifested,RCTSent,RCTCarrierFlag,ExportTransferFFMSent,TransferDEPCarrierFlag,
	ExportTransferDEPSent,ExportTransferDEPSentInTime,ImportTransferShipments,ImportTransferShipmentsManifested,ImportTransferRCFSent,TransferRCFCarrierFlag,
	ImportTransferRCFSentInTime,ImportTransferTFDSent,TFDCarrierFlag,ImportTransferTFDSentInTime,ImportTransitAWB,ImportTransitShipmentMovements,ImportTransferFWBReceived,FFMReceivedBeforeATA,
	TransitRCFCarrier,TransitRCFSent,TransitRCFSentInTime,TransitDEPCarrier,TransitDEPSent,TransitDEPSentInTime,TransitFFMSent
	) as q1
	inner join
	(
	select ciqTemplate.C2KIdentifier,   GHA,
	--concat('T',ROW_NUMBER() OVER(ORDER BY STRING_AGG(airline,',') ASC)) AS IEGroup,
	--ROW_NUMBER() OVER(ORDER BY STRING_AGG(airline,',') ASC) as rowno,
	CASE WHEN C2KIdentifier='A' THEN
	concat('T',DEnse_Rank() OVER(ORDER BY C2KIdentifier, (IIF(IMP_RCT IS NULL, 0 , 1) + IIF(EXP_DEP IS NULL, 0 , 1) + IIF(IMP_RCF IS NULL, 0 , 1) +
	IIF(IMP_TFD IS NULL, 0 , 1) +IIF(TRN_RCF IS NULL, 0 , 1)+IIF(TRN_DEP IS NULL, 0 , 1)  ) desc, concat(IMP_RCT, EXP_DEP, IMP_RCF, IMP_TFD,TRN_RCF,TRN_DEP) desc) ) ELSE 'AA'
	END
	AS IEGroup,
	Dense_Rank() OVER(ORDER BY C2KIdentifier, (IIF(IMP_RCT IS NULL, 0 , 1) + IIF(EXP_DEP IS NULL, 0 , 1) + IIF(IMP_RCF IS NULL, 0 , 1) +
	IIF(IMP_TFD IS NULL, 0 , 1) +IIF(TRN_RCF IS NULL, 0 , 1)+IIF(TRN_DEP IS NULL, 0 , 1)) desc, concat(IMP_RCT, EXP_DEP, IMP_RCF, IMP_TFD,TRN_RCF,TRN_DEP) desc) as rowno,
	concat('"',STRING_AGG(airline,'","'),'"') Carrier,
	IMP_RCT, EXP_DEP, IMP_RCF, IMP_TFD,TRN_RCF,TRN_DEP
	from (select  distinct
	(select case when cargoIqFlag=1 then 'C' else 'A' end C2KIdentifier from mst_carrier where mst_carrier.carriercode=a.airline)C2KIdentifier,
	'SAT' as GHA,
	a.airline,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='RCT' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_RCT,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='DEP' and FlowType='E' and CargoiQ_SLAConfiguration.airline=a.airline) EXP_DEP,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='RCF' and FlowType='I' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_RCF,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='TFD' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_TFD,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='RCF' and FlowType='I' and CargoiQ_SLAConfiguration.airline=a.airline) TRN_RCF,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='DEP' and FlowType='E' and CargoiQ_SLAConfiguration.airline=a.airline) TRN_DEP
	from CargoiQ_SLAConfiguration a,mst_carrier b where a.airline=b.carriercode --and b.cargoIqFlag=0
	) ciqTemplate
	group by
	ciqTemplate.C2KIdentifier, ciqTemplate.IMP_RCT,ciqTemplate.EXP_DEP,ciqTemplate.IMP_RCF,
	ciqTemplate.IMP_TFD,TRN_RCF,TRN_DEP,ciqTemplate.GHA
	)q2 on
	--q1.C2K_Identifier = q2.C2KIdentifier and
	q1.GHA = q2.GHA
	where q2.Carrier like concat('%"' , q1.Carrier ,'"%')
	order by rowno asc
 
	]]>
	</select>
	
	<resultMap id="transferTransitWorkingListMap" 
				type="com.ngen.cosys.report.service.poi.model.CIQTransferTransitWorkingListReport">
		<result column="C2K_Identifier" property="c2kIdentifier" />
		<result column="GHA" property="gha" />
		<result column="Month" property="month" />
		<result column="Station" property="station" />
		<result column="GRP" property="airline" />
		<result column="ExportTransferShipmentsManifested" property="exportTransferShipmentsManifested" />
		<result column="RCTSent" property="rctSent" />
		<result column="ExportTransferFFMSent" property="exportTransferFFMSent" />
		<result column="ExportTransferFFMSentInTime" property="exportTransferFFMSentInTime" />
		<result column="ExportTransferDEPSent" property="exportTransferDEPSent" />
		<result column="ExportTransferDEPSentInTime" property="exportTransferDEPSentInTime" />
		<result column="ImportTransferShipments" property="importTransferAWBMWBs" />
		<result column="ImportTransferShipmentsManifested" property="importTransferShipmentsManifested" />
		<result column="ImportTransferFWBReceived" property="importTransferFWBReceived" />
		<result column="ImportTransferFFMReceivedBeforeATA" property="importTransferFFMReceivedBeforeATA" />
		<result column="ImportTransferRCFSent" property="importTransferRCFSent" />
		<result column="ImportTransferRCFSentInTime" property="importTransferRCFSentInTime" />
		<result column="ImportTransferTFDSent" property="tfdEventCompleted" />
		<result column="ImportTransferTFDSentInTime" property="tfdMessageSentInTime" />
		<result column="ImportTransitAWB" property="importTransitAWBMWBs" />
		<result column="ImportTransitAWB" property="importTransitShipmentMovements" />
		<result column="FWBReceived" property="fwbReceived" />
		<result column="FFMReceivedBeforeATA" property="ffmReceivedBeforeATA" />
		<result column="TransitRCFSent" property="transitRCFSent" />
		<result column="TransitRCFSentInTime" property="transitRCFSentInTime" />
		<result column="TransitFFMSent" property="transitFFMSent" />
		<result column="TransitFFMSentInTime" property="transitFFMSentInTime" />
		<result column="TransitDEPSent" property="transitDEPSent" />
		<result column="TransitDEPSentInTime" property="transitDEPSentInTime" />
	</resultMap>
	
	<!-- Transfer Transit Working List Report -->
	<select id="sqlSelectTransferTransitWorkingListData" resultMap="transferTransitWorkingListMap"
			parameterType="com.ngen.cosys.report.model.ExcelReportRequest" >
	<![CDATA[

	--Temp table for cargo iq carrier info
	declare @CargoiQCarrierInfo table(
	C2K_Identifier varchar(1),
	GroundHandlerCode varchar(10),
	Carrier varchar(3),
	ShipmentYear numeric,
	ShipmentMonth numeric,
	Airline varchar(10),
	FromPeriod datetime,
	ToPeriod datetime
	)
	--insert the cargo iq carrier info to temp table
	;insert into @CargoiQCarrierInfo
	select
	case when Mst_Carrier.CargoIqFlag = 1 then  'C' else  'N' end C2K_Identifier,
	'SAT' GroundHandlerCode,
	Mst_Carrier.CarrierCode as Carrier,
	datepart(yyyy,cast(#{parameters.fromDate} as datetime)) as ShipmentYear,
	datepart(mm,cast(#{parameters.fromDate} as datetime)) as ShipmentMonth,
	(select case when  cargoiqflag  =1 then Mst_Carrier.CarrierCode else 'T'  end ciqMember)Airline ,
	cast(#{parameters.fromDate} as datetime) FromPeriod,
	cast(#{parameters.toDate} as datetime) ToPeriod
	from Mst_Carrier
	where
	Mst_Carrier.GroundHandlerCode = 'SATS' and
	--  Mst_Carrier.CarrierCode = 'TR' and
	Mst_Carrier.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration,Mst_Carrier
	where  CargoiQ_SLAConfiguration.airline=Mst_Carrier.carrierCode)
	--Temp table for storing export flight information
	declare @ExportOperativeFlights table(
	Flight_ID numeric,
	CarrierCode varchar(3),
	FlightNumber varchar(5),
	FlightKey varchar(8),
	DateSTD datetime,
	DateATD datetime,
	FlightType varchar(1),
	FlightBoardPoint varchar(3),
	FlightOffPoint varchar(3),
	FlightOriginDate datetime
	)
	--Query to fetch export flight information based on cargo iq configuration
	insert into @ExportOperativeFlights
	select
	Flt_OperativeFlight.Flight_ID,
	Flt_OperativeFlight.CarrierCode,
	Flt_OperativeFlight.FlightNumber,
	Flt_OperativeFlight.FlightKey,
	Flt_OperativeFlight_Legs.DateSTD,
	Flt_OperativeFlight_Legs.DateATD,
	Flt_OperativeFlight.FlightType,
	Flt_OperativeFlight_Legs.FlightBoardPoint,
	Flt_OperativeFlight_Legs.FlightOffPoint,
	Flt_OperativeFlight.FlightOriginDate
	from
	@CargoiQCarrierInfo CargoiQCarrierInfo
	inner join
	Flt_OperativeFlight_Legs on
	Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} and
	Flt_OperativeFlight_Legs.DateSTD between
	CargoiQCarrierInfo.FromPeriod  and CargoiQCarrierInfo.ToPeriod
	inner join
	Flt_OperativeFlight on
	Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID
	and CargoiQCarrierInfo.Carrier = Flt_OperativeFlight.CarrierCode
	and FlightOriginDate  between
	CargoiQCarrierInfo.FromPeriod-1  and CargoiQCarrierInfo.ToPeriod+1
	--Temp table for storing import flight information
	declare @ImportOperativeFlights table(
	Flight_ID     numeric,
	CarrierCode varchar(3),
	FlightNumber varchar(5),
	FlightKey varchar(8),
	DateSTA       datetime,
	DateATA       datetime,
	FlightType varchar(1),
	FlightBoardPoint varchar(3),
	FlightOffPoint varchar(3),
	FlightOriginDate datetime
	)
	--Query to fetch Import flight information based on cargo iq configuration
	; insert into @ImportOperativeFlights
	select
	Flt_OperativeFlight.Flight_ID,
	Flt_OperativeFlight.CarrierCode,
	Flt_OperativeFlight.FlightNumber,
	Flt_OperativeFlight.FlightKey,
	Flt_OperativeFlight_Legs.DateSTA,
	Flt_OperativeFlight_Legs.DateATA,
	Flt_OperativeFlight.FlightType,
	Flt_OperativeFlight_Legs.FlightBoardPoint,
	Flt_OperativeFlight_Legs.FlightOffPoint,
	Flt_OperativeFlight.FlightOriginDate
	from
	@CargoiQCarrierInfo CargoiQCarrierInfo
	inner join
	Flt_OperativeFlight_Legs on
	Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} and
	Flt_OperativeFlight_Legs.DateSTA  between
	CargoiQCarrierInfo.FromPeriod  and CargoiQCarrierInfo.ToPeriod
	inner join
	Flt_OperativeFlight on
	Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID
	and CargoiQCarrierInfo.Carrier = Flt_OperativeFlight.CarrierCode
	and FlightOriginDate  between
	CargoiQCarrierInfo.FromPeriod-3  and CargoiQCarrierInfo.ToPeriod
	--Temp table for storing export Transfer shipment manifest information
	declare @TransferExportShipmentManifestInfo table(
	ShipmentId    numeric,
	CarrierCode varchar(3),
	Flight_ID numeric,
	DateATD datetime,
	DateSTD datetime,
	ShipmentNumber varchar(14),
	ShipmentDate datetime,
	FlightOffPoint varchar(4),
	FlightNumber varchar(10),
	FlightOriginDate datetime,
	Inc_carrier varchar(3)
	)
	--Query to fetch export Transfer shipment manifest information based on cargo iq configuration
	insert into @TransferExportShipmentManifestInfo
	select  Shipment_freightOut.ShipmentId,
	exportFlight.CarrierCode,
	Shipment_freightOut.FlightId,
	exportFlight.DateATD,
	exportFlight.DateSTD,
	Shipment_Master.ShipmentNumber,
	Shipment_Master.ShipmentDate,
	exportFlight.FlightOffPoint,
	exportFlight.FlightNumber,
	exportFlight.FlightOriginDate,
	flt.CarrierCode
	from
	@ExportOperativeFlights exportFlight
	inner join Exp_flightevents on Exp_flightevents.flightid =   exportFlight.Flight_ID and Exp_flightevents.ManifestCompletedAt is not null
	inner join
	Shipment_freightOut
	on Shipment_freightOut.flightid=exportFlight.Flight_ID
	inner join Shipment_Master
	on Shipment_Master.ShipmentId=Shipment_freightOut.ShipmentId  and
	Shipment_Master.Origin not in (#{tenantAirport},#{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport},#{tenantCity})
	and Shipment_Master.ShipmentType in ('AWB') and  Shipment_Master.CancelledOn is null
	inner join  Flt_OperativeFlight flt
	on flt.Flight_ID= Shipment_FreightOut.InboundFlightId
	left join
	Exp_ManifestShipmentInfo on Exp_ManifestShipmentInfo.ShipmentId=Shipment_freightOut.ShipmentId
	left join
	Exp_Manifest on Exp_Manifest.ManifestId=Exp_ManifestShipmentInfo.ManifestId
	and Exp_Manifest.FlightId=Shipment_freightOut.FlightId
	WHERE
	(exportFlight.CarrierCode<>flt.CarrierCode
	OR
	(Shipment_freightOut.FlightId=Exp_Manifest.FlightId and Exp_ManifestShipmentInfo.ShipmentId=Shipment_freightOut.ShipmentId
	and Shipment_FreightOut.InboundFlightId is null))
	group by
	Shipment_freightOut.ShipmentId,
	exportFlight.CarrierCode,
	Shipment_freightOut.FlightId,exportFlight.DateATD,exportFlight.DateSTD,Shipment_Master.ShipmentNumber,
	Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint,exportFlight.FlightNumber,exportFlight.FlightOriginDate ,
	flt.CarrierCode
	union
	SELECT  distinct
	Shipment_master.Shipmentid,
	exportFlight.CarrierCode,
	exportFlight.Flight_Id,
	exportFlight.DateATD,
	exportFlight.DateSTD,
	Shipment_master.ShipmentNumber,
	Shipment_master.ShipmentDate,
	exportFlight.FlightOffPoint,
	exportFlight.FlightNumber,
	exportFlight.FlightOriginDate,
	Exp_eAcceptanceServiceInformation.incomingcarrier CarrierCode
	from
	@ExportOperativeFlights exportFlight
	inner join Exp_flightevents on Exp_flightevents.flightid =   exportFlight.Flight_ID and Exp_flightevents.ManifestCompletedAt is not null
	inner join Shipment_freightOut
	on exportFlight.flight_id=Shipment_freightOut.FlightId
	inner join Shipment_master
	on Shipment_freightOut.shipmentId=Shipment_master.shipmentId
	inner join Exp_eAcceptanceDocumentInformation
	on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	inner join Exp_eAcceptanceServiceInformation
	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=Exp_eAcceptanceServiceInformation.ServiceInformationId
	and acceptanceType in ('TERMINAL_TO_TERMINAL')--,'TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')
	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED'   --praveen
	OPTION ( FORCE ORDER )
	--Temp table for storing RCT shipment information
	declare @TransferRCTShipmentInfo table(
	ShipmentId numeric,
	ShipmentNumber varchar(14),
	ShipmentDate datetime,
	CarrierCode varchar(3),
	Flight_ID numeric,
	FlightType varchar(4),
	DateATD datetime,
	DateSTD datetime,
	TRMNumber varchar(20)
	)
	--Query to fetch RCT shipment information based on cargo iq configuration
	insert into @TransferRCTShipmentInfo
	SELECT  distinct
	Shipment_master.ShipmentId,
	Shipment_master.ShipmentNumber,
	Shipment_master.ShipmentDate,
	exportFlight.CarrierCode,
	exportFlight.Flight_ID,
	exportFlight.FlightType,
	exportFlight.DateATD,
	exportFlight.DateSTD,
	Transhipment_TransferManifestByAWB.TRMNumber
	FROM
	@ExportOperativeFlights exportFlight
	Inner Join Shipment_freightOut
	on exportFlight.flight_id=Shipment_freightOut.FlightId
	inner join Shipment_master
	on 	Shipment_freightOut.shipmentId=Shipment_master.shipmentId
	inner join Transhipment_TransferManifestByAWBInfo
	on Transhipment_TransferManifestByAWBInfo.shipmentNumber=Shipment_master.shipmentNumber
	inner join Transhipment_TransferManifestByAWB
	on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
	WHERE
	Transhipment_TransferManifestByAWB.CarrierCodeFrom <> Transhipment_TransferManifestByAWB.CarrierCodeTo
	and Transhipment_TransferManifestByAWB.CancellationReason is null
	--and Shipment_master.ShipmentNumber='61873917642'
	--and exportFlight.CarrierCode='sq'
	UNION   ALL
	SELECT  distinct
	Shipment_master.Shipmentid,
	Shipment_master.ShipmentNumber,
	Shipment_master.ShipmentDate,
	exportFlight.CarrierCode,
	exportFlight.Flight_Id,
	exportFlight.FlightType,
	exportFlight.DateATD,
	exportFlight.DateSTD,
	CONVERT(varchar,Exp_eAcceptanceServiceInformation.TRMNumber)TRMNumber
	from
	@ExportOperativeFlights exportFlight
	inner join Shipment_freightOut
	on exportFlight.flight_id=Shipment_freightOut.FlightId
	inner join Shipment_master
	on Shipment_freightOut.shipmentId=Shipment_master.shipmentId
	inner join Exp_eAcceptanceDocumentInformation
	on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	inner join Exp_eAcceptanceServiceInformation
	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=Exp_eAcceptanceServiceInformation.ServiceInformationId
	and acceptanceType in ('TERMINAL_TO_TERMINAL')--,'TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')
	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED'   --praveen
	--and Shipment_master.ShipmentNumber='61873917642'
	--and exportFlight.CarrierCode='sq'
	--Temp table for storing RCT airlines configured  in CiQ
	declare @CargoiQRCTAirlines table(
	CarrierCode varchar(3),
	rctFlag varchar(2)
	)
	--Query to fetch RCT airlines configured in CiQ
	insert into @CargoiQRCTAirlines
	select distinct Airline CarrierCode, 'Y' rctFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCT'
	--Temp table for storing RCT Shipment from StatusUpdateEvent
	declare @StatusEventRCT table(
	CarrierCode varchar(3),
	rctFlag varchar(2),
	rctCount numeric
	)
	--Query to fetch RCT Shipment from StatusUpdateEvent
	insert into @StatusEventRCT
	SELECT rct.CarrierCode,rct.rctFlag,  count(1) rctCount from
	(SELECT distinct
	transferShipmentInfo.CarrierCode,
	transferShipmentInfo.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight ,
	--Shipment_StatusUpdateEvent.TRMNumber,
	Shipment_StatusUpdateEvent.FsuStatusLine,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime
	, CargoiQRCTAirlines.rctFlag
	FROM
	@TransferRCTShipmentInfo transferShipmentInfo
	inner join Shipment_StatusUpdateEvent on transferShipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight
	--,Shipment_StatusUpdateEvent.TRMNumber
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'RCT' and
	--Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP'
	--Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight
	--,Shipment_StatusUpdateEvent.TRMNumber
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId
	and Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQRCTAirlines CargoiQRCTAirlines on CargoiQRCTAirlines.CarrierCode = transferShipmentInfo.CarrierCode
	group by
	transferShipmentInfo.CarrierCode,transferShipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,CargoiQRCTAirlines.rctFlag,Shipment_StatusUpdateEvent.FsuStatusLine,
	Shipment_StatusUpdateEvent.TRMNumber
	)rct
	group by
	rct.CarrierCode,rct.rctFlag
	--Temp table for storing Transfer FFM count from StatusUpdateEvent
	declare @StatusEventTransferFFM table(
	CarrierCode varchar(3),
	ffmCount numeric
	)
	--Query to fetch Transfer FFM from Interface_OutgoingMessageLog
	insert into @StatusEventTransferFFM
	SELECT trfFfm.CarrierCode, count(1) ffmCount from
	(SELECT distinct
	transferShipmentInfo.CarrierCode,
	transferShipmentInfo.ShipmentId
	FROM
	@TransferExportShipmentManifestInfo transferShipmentInfo
	inner join Interface_OutgoingMessageLog
	on Interface_OutgoingMessageLog.FlightNumber=transferShipmentInfo.FlightNumber
	and Interface_OutgoingMessageLog.FlightOriginDate=transferShipmentInfo.FlightOriginDate
	and Interface_OutgoingMessageLog.CarrierCode=transferShipmentInfo.CarrierCode  and
	Interface_OutgoingMessageLog.MessageType = 'FFM' and Interface_OutgoingMessageLog.Status<>'ERROR'  and
	Interface_OutgoingMessageLog.Message is not null
	group by
	transferShipmentInfo.CarrierCode,transferShipmentInfo.ShipmentId
	)trfFfm
	group by
	trfFfm.CarrierCode
	--Temp table for storing DEP Transfer airlines configured  in CiQ
	declare @CargoiQTransferDEPAirlines table(
	CarrierCode varchar(3),
	trfDepFlag varchar(2)
	)
	--Query to fetch DEP Transfer airlines configured in CiQ
	insert into @CargoiQTransferDEPAirlines
	select distinct Airline CarrierCode, 'Y' trfDepFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' and  CargoiQ_SLAConfiguration.FlowType='E'
	--Temp table for storing DEP Transfer Shipment from StatusUpdateEvent
	declare @StatusEventTransferDEP table(
	CarrierCode varchar(3),
	trfDepFlag varchar(2),
	depCount numeric
	)
	--Query to fetch DEP Transfer Shipment from StatusUpdateEvent
	insert into @StatusEventTransferDEP
	SELECT
	shipmentInfo.CarrierCode,
	trfDepCarrierInfo.trfDepFlag,
	count(1) depCount
	FROM
	@TransferExportShipmentManifestInfo shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.Outgoingflightid,
	Shipment_StatusUpdateEvent.ShipmentId
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'DEP' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId
	and Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQTransferDEPAirlines trfDepCarrierInfo
	on trfDepCarrierInfo.CarrierCode = shipmentInfo.CarrierCode
	group by
	shipmentInfo.CarrierCode, trfDepCarrierInfo.trfDepFlag
	--Temp table for storing DEP SLA time from ciqConfiguration
	declare @DEPTransferSlaTime table(
	depSlaTime numeric,
	carrierCode varchar(4),
	Destination varchar(5)
	)
	--Query to fetch DEP SLA Time from CiQ
	insert into @DEPTransferSlaTime
	select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode,ciqConfig.Destination
	from
	CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQTransferDEPAirlines trfDepCarrierInfo
	on ciqConfig.Airline = trfDepCarrierInfo.CarrierCode
	and (ciqConfig.FlowType = 'E' OR ciqConfig.FlowType is null)
	and ciqConfig.CiqMessageTypeId = 'DEP'
	group by ciqConfig.Airline,ciqConfig.SLATime,ciqConfig.Destination
	order by ciqConfig.SLATime
	--Temp table for storing DEPInTime Transfer Shipment from StatusUpdateEvent
	declare @StatusEventTransferDEPInTime table(
	CarrierCode varchar(3),
	depCount numeric
	)
	--Query to fetch DEPInTime Transfer Shipment from StatusUpdateEvent
	insert into @StatusEventTransferDEPInTime
	SELECT
	shipmentInfo.CarrierCode,
	count(1) depCount
	FROM
	@TransferExportShipmentManifestInfo shipmentInfo
	inner join Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.Outgoingflightid,
	Shipment_StatusUpdateEvent.ShipmentId
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'DEP' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId
	and Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @DEPTransferSlaTime depSla
	on depSla.carrierCode=  shipmentInfo.carrierCode
	and (shipmentInfo.FlightOffPoint = depSla.Destination)
	left join @DEPTransferSlaTime depSlaOffPointisNull
	on depSlaOffPointisNull.carrierCode=  shipmentInfo.carrierCode
	and (shipmentInfo.FlightOffPoint<>depSla.Destination)
	left join @DEPTransferSlaTime depSlaDestisNull
	on depSlaDestisNull.carrierCode=  shipmentInfo.carrierCode
	and (depSlaDestisNull.destination is null)
	where
	(((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSla.depSlaTime) OR
	((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSlaOffPointisNull.depSlaTime) OR
	((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSlaDestisNull.depSlaTime))
	group by
	shipmentInfo.CarrierCode
	--Temp table for storing Import Transfer Shipment from Shipment_Freightout  (From Reference report 5Feb)
	declare @StatusEventTransferImportShp table(
	ShipmentId numeric,
	CarrierCode varchar(3),
	DateSTA datetime
	)
	--Query to fetch Import Transfer Shipment from StatusUpdateEvent
	insert into @StatusEventTransferImportShp
	select
	distinct  shipment_freightOut.ShipmentId,
	impFlights.CarrierCode,
	impFlights.DateSTA
	from
	@ImportOperativeFlights impFlights
	inner join shipment_freightOut
	on impFlights.flight_id=shipment_freightOut.InboundFlightId
	inner join Shipment_Master on
	Shipment_Master.shipmentId=shipment_freightOut.shipmentId and Shipment_Master.Origin not in (#{tenantAirport},#{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport},#{tenantCity}) and
	Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	left join
	Transhipment_TransferManifestByAWBInfo on Transhipment_TransferManifestByAWBInfo.InboundFlightId=shipment_freightOut.InboundFlightId
	and Transhipment_TransferManifestByAWBInfo.InboundFlightHandler='DNATA'
	WHERE
	Shipment_FreightOut.InboundFlightId is not null
	and (impFlights.CarrierCode<>(select CarrierCode from Flt_OperativeFlight where flight_id=Shipment_FreightOut.FlightId)
	OR
	(shipment_freightOut.FlightId=shipment_freightOut.InboundFlightId and
	Transhipment_TransferManifestByAWBInfo.InboundFlightId=shipment_freightOut.InboundFlightId and
	Transhipment_TransferManifestByAWBInfo.InboundFlightHandler='DNATA'))
	--Temp table for storing Import Manifest Transfer Shipment from Shipment_Freightout
	declare @StatusEventTransferImportManShp table(
	ShipmentId numeric,
	OutboundFlightId numeric,
	InboundFlightId numeric,
	CarrierCode varchar(3),
	DateSTA datetime,
	DateATA datetime
	)
	--Query to fetch Import Manifest Transfer Shipment from StatusUpdateEvent
	insert into @StatusEventTransferImportManShp
	select
	shipment_freightOut.ShipmentId,
	shipment_freightOut.FlightId OutboundFlightId,
	shipment_freightOut.InboundFlightId,
	impFlights.CarrierCode,
	impFlights.DateSTA,
	impFlights.DateATA
	from
	@ImportOperativeFlights impFlights
	inner join shipment_freightOut
	on impFlights.flight_id=shipment_freightOut.InboundFlightId
	inner join Shipment_Master on
	Shipment_Master.shipmentId=shipment_freightOut.shipmentId and Shipment_Master.Origin not in (#{tenantAirport},#{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport},#{tenantCity}) and
	Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	inner join Flt_OperativeFlight expFlight
	on expFlight.Flight_ID=Shipment_FreightOut.FlightId
	left join
	Transhipment_TransferManifestByAWBInfo on Transhipment_TransferManifestByAWBInfo.InboundFlightId=shipment_freightOut.InboundFlightId
	and Transhipment_TransferManifestByAWBInfo.InboundFlightHandler='DNATA'
	WHERE
	(impFlights.CarrierCode<>expFlight.CarrierCode
	OR
	(shipment_freightOut.FlightId=shipment_freightOut.InboundFlightId and
	Transhipment_TransferManifestByAWBInfo.InboundFlightId=shipment_freightOut.InboundFlightId and
	Transhipment_TransferManifestByAWBInfo.InboundFlightHandler='DNATA'))
	--Temp table for storing Import Transfer/Transit Shipment
	declare @TransferTransitImportShipment table(
	ShipmentId numeric,
	ShipmentNumber varchar(20),
	ShipmentDate datetime,
	CarrierCode varchar(3),
	outCarrier varchar(3),		--Praveen
	Incarrier varchar(3),		--Praveen
	--	DateSTA datetime,
	TransferType varchar(10)
	)
	--Query to fetch Import Transfer /Transfer Shipment
	insert into @TransferTransitImportShipment
	SELECT distinct
	ImportShipments.ShipmentId,
	ImportShipments.ShipmentNumber,
	ImportShipments.ShipmentDate,
	ImportShipments.CarrierCode,
	OutboundFlight.carrierCode OutCar,
	ImportShipments.carriercode inCar,
	case when isNull(OutboundFlight.carrierCode,'NONE')=(ImportShipments.carriercode)  --Praveen
	then 'TRANSIT'
	when isNull(OutboundFlight.carrierCode,'NONE')<>(ImportShipments.carriercode)
	then 'TRANSFER'
	else 'TRANSIT' end TransferType
	FROM
	(
	select distinct
	Shipment_master.ShipmentId,
	Shipment_master.ShipmentNumber,
	Shipment_Master.ShipmentDate,
	importFlight.CarrierCode CarrierCode,
	importFlight.Flight_Id,
	importFlight.FlightKey,
	importFlight.FlightType,
	importFlight.DateATA,
	importFlight.DateSTA
	from
	@ImportOperativeFlights importFlight
	inner join Imp_ShipmentVerification
	on importFlight.flight_id=Imp_ShipmentVerification.flightid
	inner join Shipment_master
	on Shipment_master.shipmentId=Imp_ShipmentVerification.shipmentId
	and Shipment_Master.Origin not in (#{tenantAirport},#{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport},#{tenantCity})
	and Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	UNION
	SELECT  distinct
	Shipment_master.ShipmentId,
	Shipment_master.ShipmentNumber,
	Shipment_Master.ShipmentDate,
	importFlight.CarrierCode CarrierCode,
	importFlight.Flight_Id,
	importFlight.FlightKey,
	importFlight.FlightType,
	importFlight.DateATA,
	importFlight.DateSTA
	from
	/*@ImportOperativeFlights importFlight
	inner join Exp_eAcceptanceDocumentInformation
	on importFlight.flightKey=Exp_eAcceptanceDocumentInformation.FirstBookedFlight
	and importFlight.FlightOriginDate=Exp_eAcceptanceDocumentInformation.FirstBookedFlightDate
	inner join Exp_eAcceptanceServiceInformation
	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=Exp_eAcceptanceServiceInformation.ServiceInformationId
	and acceptanceType in ('TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')
	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED' --praveen*/
	@ImportOperativeFlights importFlight
	inner join Exp_eAcceptanceServiceInformation  ser
	on importFlight.flightKey=ser.IncomingFlight				--changed by Praveen from doc.firstbooked flight to Ser.incoming flight.
	and importFlight.FlightOriginDate=ser.IncomingFlightDate
	and ser.acceptanceType in ('TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')--,'TERMINAL_TO_TERMINAL')
	inner join Exp_eAcceptanceDocumentInformation
	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=ser.ServiceInformationId
	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED' --praveen
	inner join Shipment_master
	on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	and Shipment_Master.Origin not in (#{tenantAirport},#{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport},#{tenantCity})
	and Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	)ImportShipments
	LEFT JOIN
	(  select min(carriercode) carriercode, shipmentid
	from
	(select  case when shipment_freightout.FlightId= shipment_freightout.InboundFlightId
	and shipment_freightout.TRMNumber is not null
	then
	'XX'
	else
	carrierCode
	end carrierCode, shipment_freightout.shipmentid
	from shipment_freightout
	inner join Flt_OperativeFlight on
	shipment_freightout.FlightId=Flt_OperativeFlight.flight_Id
	union
	select carrierCode, shipment_inventory.Shipment_Id
	from shipment_inventory
	--and shipment_freightout.FlightId <> shipment_freightout.InboundFlightId
	inner join Flt_OperativeFlight on
	shipment_inventory.Flight_Id=Flt_OperativeFlight.flight_Id
	) out1
	group by  out1.shipmentid
	)OutboundFlight on OutboundFlight.shipmentid=ImportShipments.shipmentid
	--and ImportShipments.ShipmentId='4865709'
	OPTION ( FORCE ORDER )
	--Temp table for storing Import Manifest Transfer Transit Shipment
	declare @TransferTransitImportManifestShipment table(
	ShipmentId numeric,
	ShipmentNumber varchar(20),
	CarrierCode varchar(3),
	Flight_ID numeric,
	DateSTA datetime,
	DateATA datetime,
	TransferType varchar(10)
	)
	--Query to fetch Import Manifest Transfer Transit Shipment
	insert into @TransferTransitImportManifestShipment
	SELECT distinct
	ImportShipments.ShipmentId,
	ImportShipments.ShipmentNumber,
	ImportShipments.CarrierCode,
	ImportShipments.Flight_ID,
	ImportShipments.DateSTA,
	ImportShipments.DateATA,
	case when isNull(OutboundFlight.carrierCode,'NONE')=(ImportShipments.carriercode)  --Praveen
	then 'TRANSIT'
	when isNull(OutboundFlight.carrierCode,'NONE')<>(ImportShipments.carriercode)
	then 'TRANSFER'
	else 'TRANSIT' end TransferType
	FROM
	(
	select distinct
	Shipment_master.ShipmentId,
	Shipment_master.ShipmentNumber,
	Shipment_Master.ShipmentDate,
	importFlight.CarrierCode CarrierCode,
	importFlight.Flight_Id,
	importFlight.FlightKey,
	importFlight.FlightType,
	importFlight.DateATA,
	importFlight.DateSTA
	from
	@ImportOperativeFlights importFlight
	inner join Imp_ShipmentVerification
	on importFlight.flight_id=Imp_ShipmentVerification.flightid
	inner join Shipment_master
	on Shipment_master.shipmentId=Imp_ShipmentVerification.shipmentId
	and Shipment_Master.Origin not in (#{tenantAirport},#{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport},#{tenantCity})
	and Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	UNION
	SELECT  distinct
	Shipment_master.ShipmentId,
	Shipment_master.ShipmentNumber,
	Shipment_Master.ShipmentDate,
	importFlight.CarrierCode CarrierCode,
	importFlight.Flight_Id,
	importFlight.FlightKey,
	importFlight.FlightType,
	importFlight.DateATA,
	importFlight.DateSTA
	from
	@ImportOperativeFlights importFlight
	inner join Exp_eAcceptanceServiceInformation  ser
	on importFlight.flightKey=ser.IncomingFlight				--changed by Praveen from doc.firstbooked flight to Ser.incoming flight.
	and importFlight.FlightOriginDate=ser.IncomingFlightDate
	and ser.acceptanceType in ('TRUCKING_SERVICE_FLIGHT','TRUCKING_SERVICE_SURF')--,'TERMINAL_TO_TERMINAL')
	inner join Exp_eAcceptanceDocumentInformation
	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=ser.ServiceInformationId
	and Exp_eAcceptanceDocumentInformation.Status != 'REJECTED' --praveen
	inner join Shipment_master
	on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	and Shipment_Master.Origin not in (#{tenantAirport},#{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport},#{tenantCity})
	and Shipment_Master.ShipmentType in ('AWB') and Shipment_Master.CancelledOn is null
	--and Shipment_Master.ShipmentId='4665737'
	)ImportShipments
	LEFT JOIN
	(
	select min(carriercode) carriercode, shipmentid
	from
	(select  case when shipment_freightout.FlightId= shipment_freightout.InboundFlightId and shipment_freightout.TRMNumber is not null then
	'XX'
	else
	carrierCode
	end carrierCode, shipment_freightout.shipmentid
	from shipment_freightout
	inner join Flt_OperativeFlight on
	shipment_freightout.FlightId=Flt_OperativeFlight.flight_Id
	--and shipment_freightout.FlightId <> shipment_freightout.InboundFlightId
	--	and shipment_freightout.ShipmentId='4665737'
	union				--Added by Praveen 7Dec2021
	select carrierCode, shipment_inventory.Shipment_Id
	from shipment_inventory
	--and shipment_freightout.FlightId <> shipment_freightout.InboundFlightId
	inner join Flt_OperativeFlight on
	shipment_inventory.Flight_Id=Flt_OperativeFlight.flight_Id
	) out1
	group by  out1.shipmentid
	-- select distinct
	--min(carrierCode) carrierCode, shipment_freightout.shipmentid
	-- from shipment_freightout
	--	inner join Flt_OperativeFlight on
	--			shipment_freightout.FlightId=Flt_OperativeFlight.flight_Id
	--	group by  shipment_freightout.shipmentid
	)OutboundFlight on OutboundFlight.shipmentid=ImportShipments.shipmentid
	OPTION ( FORCE ORDER )
	--Temp table for storing Transfer RCF airlines configured  in CiQ
	declare @CargoiQTransferRCFAirlines table(
	CarrierCode varchar(3),
	rcfFlag varchar(2)
	)
	--Query to fetch Transfer RCF airlines configured in CiQ
	insert into @CargoiQTransferRCFAirlines
	select distinct Airline CarrierCode, 'Y' rcfFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCF' and CargoiQ_SLAConfiguration.FlowType='I'
	--Temp table for storing Transfer RCF Shipment from StatusUpdateEvent
	declare @StatusEventTransferRCF table(
	CarrierCode varchar(3),
	rcfFlag varchar(2),
	rcfCount numeric
	)
	--Query to fetch Transfer RCF Shipment from StatusUpdateEvent
	insert into @StatusEventTransferRCF
	SELECT rcf.CarrierCode,rcf.rcfFlag, count(1) rcfCount from
	(SELECT distinct
	shipmentInfo.CarrierCode,
	shipmentInfo.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime,
	rcfCarrierInfo.rcfFlag
	FROM
	@TransferTransitImportManifestShipment shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.TransferType='TRANSFER'
	and shipmentInfo.Flight_Id=Shipment_StatusUpdateEvent.IncomingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'RCF' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQTransferRCFAirlines rcfCarrierInfo on rcfCarrierInfo.CarrierCode = shipmentInfo.CarrierCode
	group by
	shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,rcfCarrierInfo.rcfFlag
	)rcf
	group by
	rcf.CarrierCode,rcf.rcfFlag
	--Temp table for storing Transfer RCF SLA time from ciqConfiguration
	declare @TransferRCFSlaTime table(
	rcfSlaTime numeric,
	carrierCode varchar(4)
	)
	--Query to fetch Transfer RCF SLA Time from CiQ
	insert into @TransferRCFSlaTime
	select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
	from
	CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQTransferRCFAirlines rcfCarrierInfo
	on ciqConfig.Airline = rcfCarrierInfo.CarrierCode
	and (ciqConfig.FlowType = 'I' OR ciqConfig.FlowType is null)
	and ciqConfig.CiqMessageTypeId = 'RCF'
	group by ciqConfig.Airline,ciqConfig.SLATime
	order by ciqConfig.SLATime
	--Temp table for storing RCFInTime Shipment from StatusUpdateEvent
	declare @TransferRCFInTime table(
	CarrierCode varchar(3),
	rcfCount numeric
	)
	--Query to fetch RCFInTime Shipment from StatusUpdateEvent
	insert into @TransferRCFInTime
	SELECT rcfSLA.CarrierCode, count(1) rcfCount from
	(SELECT distinct
	shipmentInfo.CarrierCode,
	shipmentInfo.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime
	FROM
	@TransferTransitImportManifestShipment shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.TransferType='TRANSFER'
	and shipmentInfo.Flight_Id=Shipment_StatusUpdateEvent.IncomingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'RCF' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQTransferRCFAirlines rcfCarrierInfo on rcfCarrierInfo.CarrierCode = shipmentInfo.CarrierCode
	left join @TransferRCFSlaTime rcfSla
	on rcfSla.carrierCode=  shipmentInfo.carrierCode
	where
	((DATEDIFF(minute,isnull(shipmentInfo.DateATA, shipmentInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<=rcfSla.rcfSlaTime)
	group by
	shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn
	)rcfSLA
	group by
	rcfSLA.CarrierCode
	--Temp table for storing Transfer TFD airlines configured  in CiQ
	declare @CargoiQTFDAirlines table(
	CarrierCode varchar(3),
	tfdFlag varchar(2)
	)
	--Query to fetch Transfer TFD airlines configured in CiQ
	insert into @CargoiQTFDAirlines
	select distinct Airline CarrierCode, 'Y' tfdFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'TFD'
	--Temp TFD Shipments
	declare @TFDShipment table(
	ShipmentId numeric,
	CarrierCode varchar(3),
	TRMNumber varchar(25),
	DateATA datetime,
	DateSTA datetime,
	Flight_ID numeric
	)
	--Query to fetch TFD Shipments
	insert into @TFDShipment
	SELECT distinct
	Shipment_Master.Shipmentid,
	importFlight.CarrierCode,
	Transhipment_TransferManifestByAWB.TRMNumber,
	importFlight.DateATA,
	importFlight.DateSTA,
	importFlight.Flight_ID
	FROM
	Transhipment_TransferManifestByAWBInfo
	INNER JOIN
	Transhipment_TransferManifestByAWB
	on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
	INNER JOIN @ImportOperativeFlights importFlight
	on importFlight.Flight_ID=Transhipment_TransferManifestByAWBInfo.InboundFlightId
	INNER JOIN Shipment_Master
	on Shipment_Master.ShipmentNumber=Transhipment_TransferManifestByAWBInfo.ShipmentNumber
	--Temp table for storing Transfer TFD Shipment from StatusUpdateEvent
	declare @StatusEventTransferTFD table(
	CarrierCode varchar(3),
	tfdFlag varchar(2),
	tfdCount numeric
	)
	--Query to fetch Transfer TFD Shipment from StatusUpdateEvent
	insert into @StatusEventTransferTFD
	SELECT tfd.CarrierCode,tfd.tfdFlag,
	count(1) tfdCount from
	(SELECT distinct
	tfdShipment.shipmentid,
	UPPER(format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))ActualEventTime,
	tfdShipment.CarrierCode,tfdCarrierInfo.tfdFlag
	FROM
	@TFDShipment tfdShipment
	INNER JOIN Shipment_StatusUpdateEvent
	on Shipment_StatusUpdateEvent.ShipmentId=tfdShipment.ShipmentId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'TFD' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP'
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQTFDAirlines tfdCarrierInfo on tfdCarrierInfo.CarrierCode = tfdShipment.CarrierCode
	)tfd
	group by tfd.CarrierCode,tfd.tfdFlag
	--Temp table for storing TFD SLA time from ciqConfiguration
	declare @TFDSlaTime table(
	tfdSlaTime numeric,
	carrierCode varchar(4)
	)
	--Query to fetch TFD SLA Time from CiQ
	insert into @TFDSlaTime
	select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
	from
	CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQTFDAirlines tfdCarrierInfo
	on ciqConfig.Airline = tfdCarrierInfo.CarrierCode
	and (ciqConfig.FlowType = 'T' OR ciqConfig.FlowType is null)
	and ciqConfig.CiqMessageTypeId = 'TFD'
	group by ciqConfig.Airline,ciqConfig.SLATime
	order by ciqConfig.SLATime
	--Temp table for storing Transfer TFD Shipment from StatusUpdateEvent
	declare @TFDSlaTimeShp table(
	CarrierCode varchar(3),
	tfdCount numeric
	)
	--Query to fetch Transfer TFD Shipment from StatusUpdateEvent
	insert into @TFDSlaTimeShp
	SELECT tfd.CarrierCode,
	count(1) tfdCount from
	(SELECT distinct
	tfdShipment.shipmentid,
	UPPER(format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))ActualEventTime,
	tfdShipment.CarrierCode
	FROM
	@TFDShipment tfdShipment
	INNER JOIN Shipment_StatusUpdateEvent
	on Shipment_StatusUpdateEvent.ShipmentId=tfdShipment.ShipmentId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'TFD' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP'
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @TFDSlaTime tfdSla
	on tfdSla.carrierCode= tfdShipment.carrierCode
	WHERE
	(DATEDIFF(minute,isnull(tfdShipment.DateATA, tfdShipment.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<=tfdSla.tfdSlaTime
	)tfd
	group by tfd.CarrierCode
	--------------------------------TRANSIT----------------------------------------
	--Temp Import Transit FWB Received Shipments
	declare @TransitFWBReceived table(
	CarrierCode varchar(3),
	fwbRecCount numeric
	)
	--Query to fetch Import Transit FWB Received  Shipments
	insert into @TransitFWBReceived
	select fwb.CarrierCode, count(1) as fwbRecCount from (SELECT distinct
	FWBInfo.ShipmentId,
	--FWBInfo.Flight_ID,
	FWBInfo.CarrierCode
	from @TransferTransitImportShipment FWBInfo where FWBInfo.TransferType='TRANSIT' and exists (select 1 from
	Shipment_FreightWayBill where
	FWBInfo.ShipmentNumber = Shipment_FreightWayBill.AwbNumber and
	FWBInfo.ShipmentDate = Shipment_FreightWayBill.AwbDate))fwb
	group by fwb.CarrierCode
	--Temp Import Transfer FWB Received Shipments
	declare @TransferFWBReceived table(
	CarrierCode varchar(3),
	fwbRecCount numeric
	)
	--Query to fetch Import Transfer FWB Received  Shipments
	insert into @TransferFWBReceived
	select fwb.CarrierCode, count(1) as fwbRecCount from (SELECT distinct
	FWBInfo.ShipmentId,
	--FWBInfo.Flight_ID,
	FWBInfo.CarrierCode
	from @TransferTransitImportShipment FWBInfo where FWBInfo.TransferType='TRANSFER' and exists (select 1 from
	Shipment_FreightWayBill where
	FWBInfo.ShipmentNumber = Shipment_FreightWayBill.AwbNumber and
	FWBInfo.ShipmentDate = Shipment_FreightWayBill.AwbDate))fwb
	group by fwb.CarrierCode
	--Temp Import Transit FFM Received Shipments
	declare @TransitFFMReceived table(
	CarrierCode varchar(3),
	ffmRecCount numeric
	)
	--Query to fetch Import Transit FFM Received  Shipments
	insert into @TransitFFMReceived
	select fwb.CarrierCode, count(1) as ffmRecCount from (SELECT distinct
	FWBInfo.ShipmentId,
	FWBInfo.Flight_ID,
	FWBInfo.CarrierCode
	from @TransferTransitImportManifestShipment FWBInfo where exists(
	select 1 from
	@ImportOperativeFlights importFlights
	inner join Imp_FreightFlightManifestByFlight
	on Imp_FreightFlightManifestByFlight.FlightId = importFlights.Flight_ID
	inner join Imp_FreightFlightManifestBySegment
	on Imp_FreightFlightManifestBySegment.ImpFreightFlightManifestByFlightId = Imp_FreightFlightManifestByFlight.ImpFreightFlightManifestByFlightId
	inner join Imp_FreightFlightManifestULD
	on Imp_FreightFlightManifestULD.ImpFreightFlightManifestBySegmentId = Imp_FreightFlightManifestBySegment.ImpFreightFlightManifestBySegmentId
	inner join Imp_FreightFlightManifestByShipment
	on Imp_FreightFlightManifestByShipment.ImpFreightFlightManifestULDId = Imp_FreightFlightManifestULD.ImpFreightFlightManifestULDId
	and
	Imp_FreightFlightManifestBySegment.MessageStatus = 'PROCESSED' and   FWBInfo.TransferType='TRANSIT' and
	Imp_FreightFlightManifestByShipment.AwbNumber = FWBInfo.ShipmentNumber and
	importFlights.Flight_ID=FWBInfo.Flight_Id where
	convert(datetime, CONVERT(datetimeoffset, isnull(Imp_FreightFlightManifestBySegment.MessageProcessedDate, Imp_FreightFlightManifestBySegment.MessageProcessedDate))
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))
	<=isnull(importFlights.DateATA, importFlights.DateSTA)
	group by
	importFlights.DateATA,
	Imp_FreightFlightManifestBySegment.MessageProcessedDate))fwb
	group by fwb.CarrierCode
	--Temp table for storing Transit RCF airlines configured  in CiQ
	declare @CargoiQTransitRCFAirlines table(
	CarrierCode varchar(3),
	rcfFlag varchar(2)
	)
	--Query to fetch Transit RCF airlines configured in CiQ
	insert into @CargoiQTransitRCFAirlines
	select distinct Airline CarrierCode, 'Y' rcfFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCF' and CargoiQ_SLAConfiguration.FlowType='I'
	--Temp table for storing Transit RCF Shipment from StatusUpdateEvent
	declare @StatusTransitRCF table(
	CarrierCode varchar(3),
	rcfFlag varchar(2),
	rcfCount numeric
	)
	--Query to fetch Transit RCF Shipment from StatusUpdateEvent
	insert into @StatusTransitRCF
	SELECT transitRcf.CarrierCode,transitRcf.rcfFlag, count(1) rcfCount from
	(SELECT distinct
	shipmentInfo.CarrierCode,
	shipmentInfo.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime,
	carrierInfo.rcfFlag
	FROM
	@TransferTransitImportManifestShipment shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.TransferType='TRANSIT'
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'RCF' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join  @CargoiQTransitRCFAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
	group by
	shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.rcfFlag
	)transitRcf
	group by
	transitRcf.CarrierCode,transitRcf.rcfFlag
	--Temp table for storing Transit RCF SLA time from ciqConfiguration
	declare @TransitRCFSlaTime table(
	rcfSlaTime numeric,
	carrierCode varchar(4)
	)
	--Query to fetch Transit RCF SLA Time from CiQ
	insert into @TransitRCFSlaTime
	select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode
	from
	CargoiQ_SLAConfiguration ciqConfig inner join @TransferTransitImportManifestShipment rcfChannel
	on ciqConfig.Airline = rcfChannel.CarrierCode
	and rcfChannel.TransferType='TRANSIT'
	and (ciqConfig.FlowType = 'I' OR ciqConfig.FlowType is null)
	and ciqConfig.CiqMessageTypeId = 'RCF'
	group by ciqConfig.Airline,ciqConfig.SLATime
	order by ciqConfig.SLATime
	--Temp table for storing Transit RCF SLA Shipment from StatusUpdateEvent
	declare @StatusTransitRCFInTime table(
	CarrierCode varchar(3),
	rcfFlag varchar(2),
	rcfCount numeric
	)
	--Query to fetch Transit RCF SLA Shipment from StatusUpdateEvent
	insert into @StatusTransitRCFInTime
	SELECT transitRcf.CarrierCode,transitRcf.rcfFlag, count(1) rcfCount from
	(SELECT distinct
	shipmentInfo.CarrierCode,
	shipmentInfo.ShipmentId,
	Shipment_StatusUpdateEvent.Pieces ,
	Shipment_StatusUpdateEvent.Weight ,
	format(convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm')ActualEventTime,
	carrierInfo.rcfFlag
	FROM
	@TransferTransitImportManifestShipment shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.TransferType='TRANSIT'
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.IncomingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'RCF' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '58511103352'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.IncomingFlightId,
	Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join  @CargoiQTransitRCFAirlines carrierInfo on carrierInfo.CarrierCode = shipmentInfo.CarrierCode
	left join @TransitRCFSlaTime rcfSla
	on rcfSla.carrierCode=  shipmentInfo.carrierCode
	where
	((DATEDIFF(minute,isnull(shipmentInfo.DateATA, shipmentInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<=rcfSla.rcfSlaTime)
	group by
	shipmentInfo.CarrierCode,shipmentInfo.ShipmentId, Shipment_StatusUpdateEvent.Pieces,
	Shipment_StatusUpdateEvent.Weight,Shipment_StatusUpdateEvent.EventCompletedOn,carrierInfo.rcfFlag
	)transitRcf
	group by
	transitRcf.CarrierCode,transitRcf.rcfFlag
	--Temp table for storing export Transit shipment manifest information
	declare @TransitExportShipmentManifestInfo table(
	ShipmentId    numeric,
	CarrierCode varchar(3),
	Flight_ID numeric,
	DateATD datetime,
	DateSTD datetime,
	ShipmentNumber varchar(14),
	ShipmentDate datetime,
	FlightOffPoint varchar(4),
	FlightNumber varchar(10),
	FlightOriginDate datetime,
	TransferType varchar(10)									--praveen
	)
	--Query to fetch export Transit shipment manifest information based on cargo iq configuration
	insert into @TransitExportShipmentManifestInfo
	select  expFreightOut.ShipmentId,
	exportFlight.CarrierCode,expFreightOut.FlightId,
	exportFlight.DateATD,exportFlight.DateSTD,
	Shipment_Master.ShipmentNumber,		Shipment_Master.ShipmentDate,
	exportFlight.FlightOffPoint, exportFlight.FlightNumber, exportFlight.FlightOriginDate,
	case when (exportFlight.carrierCode)=isnull(impFlight.carriercode,EXP_ACCEptance.IncomingCarrier)					--praveen
	then 'TRANSIT'
	when (exportFlight.carrierCode)<>isnull(impFlight.carriercode,EXP_ACCEptance.IncomingCarrier)
	then 'TRANSFER'
	--else 'TRANS'					--Praveen
	end TransferType
	from
	@ExportOperativeFlights exportFlight
	inner join
	Shipment_freightOut expFreightOut
	on exportFlight.Flight_ID=expFreightOut.flightid
	inner join Shipment_Master
	on Shipment_Master.ShipmentId=expFreightOut.ShipmentId  and
	Shipment_Master.Origin not in (#{tenantAirport},#{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport},#{tenantCity})
	and Shipment_Master.ShipmentType in ('AWB') and  Shipment_Master.CancelledOn is null
	inner join @TransferTransitImportManifestShipment TransferTransitImportManifestShipment --Praveen 09Nov
	on Shipment_Master.shipmentid = TransferTransitImportManifestShipment.shipmentid
	left join Shipment_freightOut importFlightOut
	on expFreightOut.shipmentId=importFlightOut.shipmentId
	left join Flt_OperativeFlight impFlight
	on impFlight.Flight_ID=importFlightOut.InboundFlightId
	left join (select shipmentNumber, IncomingCarrier from Exp_eAcceptanceDocumentInformation doc, Exp_eAcceptanceServiceInformation ser  --praveen
	where doc.ServiceInformationId= ser.ServiceInformationId
	and ser.AcceptanceType not in ('TERMINAL_TO_TERMINAL')
	and doc.status <>'REJECTED'
	)EXP_ACCEptance
	on EXP_ACCEptance.shipmentNumber=Shipment_master.shipmentNumber
	--left join Exp_eAcceptanceDocumentInformation	--praveen
	--	on Exp_eAcceptanceDocumentInformation.shipmentNumber=Shipment_master.shipmentNumber
	--	and Exp_eAcceptanceDocumentInformation.status <>'REJECTED'
	--	left join Exp_eAcceptanceServiceInformation
	--	on Exp_eAcceptanceDocumentInformation.ServiceInformationId=Exp_eAcceptanceServiceInformation.ServiceInformationId
	--	and Exp_eAcceptanceServiceInformation.status <>'REJECTED' --and Exp_eAcceptanceServiceInformation.AcceptanceType not in ('TERMINAL_TO_TERMINAL')
	where
	exportFlight.CarrierCode=impFlight.CarrierCode OR  importFlightOut.InboundFlightId is null
	group by expFreightOut.ShipmentId,
	exportFlight.CarrierCode,expFreightOut.FlightId,exportFlight.DateATD,exportFlight.DateSTD,
	Shipment_Master.ShipmentNumber,Shipment_Master.ShipmentDate,exportFlight.FlightOffPoint,exportFlight.FlightNumber,
	exportFlight.FlightOriginDate,impFlight.carriercode,EXP_ACCEptance.IncomingCarrier
	OPTION ( FORCE ORDER )
	--Temp table for storing DEP Transit airlines configured  in CiQ
	declare @CargoiQTransitDEPAirlines table(
	CarrierCode varchar(3),
	trfDepFlag varchar(2)
	)
	--Query to fetch DEP Transit airlines configured in CiQ
	insert into @CargoiQTransitDEPAirlines
	select distinct Airline CarrierCode, 'Y' trfDepFlag from  CargoiQ_SLAConfiguration
	where  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' and  CargoiQ_SLAConfiguration.FlowType='E'
	--Temp table for storing DEP Transit Shipment from StatusUpdateEvent
	declare @StatusEventTransitDEP table(
	CarrierCode varchar(3),
	trfDepFlag varchar(2),
	depCount numeric
	)
	--Query to fetch DEP Transit Shipment from StatusUpdateEvent
	insert into @StatusEventTransitDEP
	SELECT
	shipmentInfo.CarrierCode,
	transitDepCarrierInfo.trfDepFlag,
	count(1) depCount
	FROM
	@TransitExportShipmentManifestInfo shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.Transfertype = 'TRANSIT'	--Praveen
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'DEP' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '53905801445'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @CargoiQTransitDEPAirlines transitDepCarrierInfo on transitDepCarrierInfo.CarrierCode = shipmentInfo.CarrierCode
	group by
	shipmentInfo.CarrierCode, transitDepCarrierInfo.trfDepFlag
	--Temp table for storing DEP Transit SLA time from ciqConfiguration
	declare @TransitDEPSlaTime table(
	depSlaTime numeric,
	carrierCode varchar(4),
	Destination varchar(5)
	)
	--Query to fetch DEP Transit SLA Time from CiQ
	insert into @TransitDEPSlaTime
	select  max(ciqConfig.SLATime)SLATime,ciqConfig.Airline carrierCode,ciqConfig.Destination
	from
	CargoiQ_SLAConfiguration ciqConfig inner join @CargoiQTransitDEPAirlines transitDepCarrierInfo
	on ciqConfig.Airline = transitDepCarrierInfo.CarrierCode
	and (ciqConfig.FlowType = 'E' OR ciqConfig.FlowType is null)
	and ciqConfig.CiqMessageTypeId = 'DEP'
	group by ciqConfig.Airline,ciqConfig.SLATime,ciqConfig.Destination
	order by ciqConfig.SLATime
	--Temp table for storing DEP SLA Transit Shipment from StatusUpdateEvent
	declare @StatusEventTransitDEPSLA table(
	CarrierCode varchar(3),
	depCount numeric
	)
	--Query to fetch DEP SLA Transit Shipment from StatusUpdateEvent
	insert into @StatusEventTransitDEPSLA
	SELECT
	shipmentInfo.CarrierCode,
	count(1) depCount
	FROM
	@TransitExportShipmentManifestInfo shipmentInfo  inner join
	Shipment_StatusUpdateEvent on shipmentInfo.ShipmentId=Shipment_StatusUpdateEvent.ShipmentId and shipmentInfo.Transfertype = 'TRANSIT'	--PRaveen
	and shipmentInfo.Flight_ID=Shipment_StatusUpdateEvent.OutgoingFlightId
	inner join
	(select
	min(Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId) as ShipmentStatusUpdateEventId,
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	from
	Shipment_StatusUpdateEvent
	where
	Shipment_StatusUpdateEvent.EventType = 'DEP' and
	Shipment_StatusUpdateEvent.IsOutgoing = 1 and
	--Shipment_StatusUpdateEvent.CreatedUserCode<>'HTTP' and
	Shipment_StatusUpdateEvent.EventCompletedOn is not null
	--and  Shipment_StatusUpdateEvent.ShipmentNumber = '53905801445'
	group by
	Shipment_StatusUpdateEvent.ShipmentId,
	Shipment_StatusUpdateEvent.Outgoingflightid
	)GroupedShipment_StatusUpdateEventInfo
	on Shipment_StatusUpdateEvent.ShipmentStatusUpdateEventId = GroupedShipment_StatusUpdateEventInfo.ShipmentStatusUpdateEventId and
	Shipment_StatusUpdateEvent.ShipmentId = GroupedShipment_StatusUpdateEventInfo.ShipmentId and
	Shipment_StatusUpdateEvent.FsuStatusLine is not null
	left join @TransitDEPSlaTime depSla
	on depSla.carrierCode=  shipmentInfo.carrierCode
	and (shipmentInfo.FlightOffPoint = depSla.Destination)
	left join @TransitDEPSlaTime depSlaOffPointisNull
	on depSlaOffPointisNull.carrierCode=  shipmentInfo.carrierCode
	and (shipmentInfo.FlightOffPoint<>depSla.Destination)
	left join @TransitDEPSlaTime depSlaDestisNull
	on depSlaDestisNull.carrierCode=  shipmentInfo.carrierCode
	and (depSlaDestisNull.destination is null)
	where
	(((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSla.depSlaTime) OR
	((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSlaOffPointisNull.depSlaTime) OR
	((DATEDIFF(minute,isnull(shipmentInfo.DateATD, shipmentInfo.DateSTD),convert(datetime,
	CONVERT(datetimeoffset, Shipment_StatusUpdateEvent.EventCompletedOn)
	AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
	<= depSlaDestisNull.depSlaTime))
	group by
	shipmentInfo.CarrierCode ;
	
	Select C2K_Identifier,GHA, Month,Station,GRP,STRING_AGG(carrier,',') airlines,
	sum(ExportTransferShipmentsManifested) ExportTransferShipmentsManifested,
	sum(RCTSent) RCTSent,
	sum(ExportTransferShipmentsManifested) ExportTransferFFMSent,
	sum(ExportTransferShipmentsManifested) ExportTransferFFMSentInTime,
	--sum(ExportTransferFFMSent1) ExportTransferFFMSent1, --Added on 5Feb22
	sum(ExportTransferDEPSent) ExportTransferDEPSent,
	sum(ExportTransferDEPSentInTime) ExportTransferDEPSentInTime,
	sum(ImportTransferShipments) ImportTransferShipments,
	sum(ImportTransferShipmentsManifested) ImportTransferShipmentsManifested,
	sum(ImportTransferFWBReceived) ImportTransferFWBReceived,
	sum(ImportTransferShipmentsManifested) ImportTransferFFMReceivedBeforeATA,
	sum(ImportTransferRCFSent) ImportTransferRCFSent,
	sum(ImportTransferRCFSentInTime) ImportTransferRCFSentInTime,
	sum(ImportTransferTFDSent) ImportTransferTFDSent,
	sum(ImportTransferTFDSentInTime) ImportTransferTFDSentInTime,
	sum(ImportTransitAWB) ImportTransitAWB,
	sum(ImportTransitShipmentMovements) ImportTransitShipmentMovements,
	sum(ImportTransitFWBReceived) ImportTransitFWBReceived,
	sum(FFMReceivedBeforeATA) FFMReceivedBeforeATA,
	sum(TransitRCFSent) TransitRCFSent,
	sum(TransitRCFSentInTime) TransitRCFSentInTime,
	sum(TransitFFMSent) TransitFFMSent,
	sum(TransitFFMSentInTime)  TransitFFMSentInTime,
	sum(TransitDEPSent) TransitDEPSent,
	sum(TransitDEPSentInTime) TransitDEPSentInTime
	From(
	SELECT CASE WHEN c2K_IDENTIFIER = 'N' THEN
	--(concat('T',DENSE_RANK() OVER (order by CASE WHEN c2K_IDENTIFIER = 'N' THEN q2.Carrier ELSE q1.Carrier END)))
	q2.IEGroup
	ELSE q1.Carrier END AS Grp,q1.*
	from
	(
	SELECT
	C2K_Identifier,GHA,[Month],Station,Carrier,
	sum(ExportTransferShipmentsManifested) ExportTransferShipmentsManifested,
	case when RCTCarrierFlag='Y' then  isNull(sum(RCTSent),0) else null end RCTSent,
	sum(ExportTransferShipmentsManifested) ExportTransferFFMSent, sum(ExportTransferShipmentsManifested) ExportTransferFFMSentInTime,
	sum(ExportTransferFFMSent1) ExportTransferFFMSent1, --Added on 5Feb22
	case when TransferDEPCarrierFlag='Y' then isNull(sum(ExportTransferDEPSent),0) else null end ExportTransferDEPSent,
	case when TransferDEPCarrierFlag='Y' then isNull(sum(ExportTransferDEPSentInTime),0) else null end ExportTransferDEPSentInTime,
	sum(ImportTransferShipments) ImportTransferShipments, -- ashwin
	sum(ImportTransferShipmentsManifested) ImportTransferShipmentsManifested,
	sum(ImportTransferFWBReceived) ImportTransferFWBReceived, -- ashwin
	--sum(FWBReceived) FWBReceived,
	sum(ImportTransferShipments) ImportTransferFFMReceivedBeforeATA, -- ashwin
	case when TransferRCFCarrierFlag='Y' then isNull(sum(ImportTransferRCFSent),0) else null end ImportTransferRCFSent,
	case when TransferRCFCarrierFlag='Y' then isNull(sum(ImportTransferRCFSentInTime),0) else null end ImportTransferRCFSentInTime,
	case when TFDCarrierFlag='Y' then isNull(sum(ImportTransferTFDSent),0) else null end ImportTransferTFDSent,
	case when TFDCarrierFlag='Y' then isNull(sum(ImportTransferTFDSentInTime),0) else null end ImportTransferTFDSentInTime,
	sum(ImportTransitAWB) ImportTransitAWB,
	sum(ImportTransitShipmentMovements) ImportTransitShipmentMovements,
	isNull(sum(ImportTransitFWBReceived),0) as ImportTransitFWBReceived,
	sum(FFMReceivedBeforeATA) FFMReceivedBeforeATA ,
	case when TransitRCFCarrier='Y' then isNull(sum(TransitRCFSent),0) else null end TransitRCFSent,
	case when TransitRCFCarrier='Y' then isNull(sum(TransitRCFSentInTime),0) else null end TransitRCFSentInTime,
	isNull(sum(TransitFFMSent),0) as TransitFFMSent,
	isNull(sum(TransitFFMSent),0) as  TransitFFMSentInTime,
	case when TransitDEPCarrier='Y' then isNull(sum(TransitDEPSent),0) else null end TransitDEPSent,
	case when TransitDEPCarrier='Y' then isNull(sum(TransitDEPSentInTime),0) else null end TransitDEPSentInTime
	from (
	select
	cargoIQCarrier.C2K_Identifier,
	'SAT' as GHA,
	#{tenantAirport} as Station,
	cargoIQCarrier.Airline,
	cargoIQCarrier.Carrier,
	cast(cargoIQCarrier.ShipmentYear as varchar)+'-'+ RIGHT('0' + cast(cargoIQCarrier.ShipmentMonth as varchar),2) Month,
	---------------------------------------TRANSFER-----------------------------------------------------
	(select sum(shp) from (SELECT  count(1) shp  --!
	from @TransferExportShipmentManifestInfo expShpInfo
	where
	expShpInfo.CarrierCode = cargoIQCarrier.Carrier
	group by  flight_id,shipmentid )shp1
	)ExportTransferShipmentsManifested,
	(SELECT
	rctSent.rctFlag from @StatusEventRCT rctSent
	where
	rctSent.CarrierCode = cargoIQCarrier.Carrier
	)RCTCarrierFlag,
	(SELECT
	rctSent.rctCount from @StatusEventRCT rctSent
	where
	rctSent.CarrierCode = cargoIQCarrier.Carrier
	)RCTSent,
	(SELECT    trfFfm.ffmCount from @StatusEventTransferFFM trfFfm	--Added on 5Feb22
	where
	trfFfm.CarrierCode = cargoIQCarrier.Carrier
	)ExportTransferFFMSent1,
	(select trfDepCount.trfDepFlag from @StatusEventTransferDEP trfDepCount where
	trfDepCount.CarrierCode=cargoIQCarrier.Carrier
	)TransferDEPCarrierFlag,
	(select trfDepCount.depCount from @StatusEventTransferDEP trfDepCount where
	trfDepCount.CarrierCode=cargoIQCarrier.Carrier
	)ExportTransferDEPSent,
	(select trfDepInTime.depCount from @StatusEventTransferDEPInTime trfDepInTime where
	trfDepInTime.CarrierCode=cargoIQCarrier.Carrier
	)ExportTransferDEPSentInTime,
	(select count(trfImport.ShipmentId) from @TransferTransitImportShipment trfImport where
	trfImport.CarrierCode=cargoIQCarrier.Carrier and trfImport.TransferType='TRANSFER'
	)ImportTransferShipments,
	(select count(trfManImport.ShipmentId) from @TransferTransitImportManifestShipment trfManImport where
	trfManImport.CarrierCode=cargoIQCarrier.Carrier and trfManImport.TransferType='TRANSFER'
	)ImportTransferShipmentsManifested,
	(select trfRcfCount.rcfFlag from @StatusEventTransferRCF trfRcfCount where
	trfRcfCount.CarrierCode=cargoIQCarrier.Carrier
	)TransferRCFCarrierFlag,
	(select trfRcfCount.rcfCount from @StatusEventTransferRCF trfRcfCount where
	trfRcfCount.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransferRCFSent,
	(select trfRcfInTime.rcfCount from @TransferRCFInTime trfRcfInTime where
	trfRcfInTime.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransferRCFSentInTime,
	(select fwbRecvd.fwbRecCount from @TransferFWBReceived fwbRecvd where
	fwbRecvd.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransferFWBReceived,
	(select trfTfdCount.tfdFlag from @StatusEventTransferTFD trfTfdCount where
	trfTfdCount.CarrierCode=cargoIQCarrier.Carrier
	)TFDCarrierFlag,
	(select trfTfdCount.tfdCount from @StatusEventTransferTFD trfTfdCount where
	trfTfdCount.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransferTFDSent,
	(select trfTfdCount.tfdCount from @TFDSlaTimeShp trfTfdCount where
	trfTfdCount.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransferTFDSentInTime,
	(select count(transitImport.ShipmentId) from @TransferTransitImportShipment transitImport where
	transitImport.CarrierCode=cargoIQCarrier.Carrier and transitImport.TransferType='TRANSIT'
	)ImportTransitAWB,
	(select count(transitImportMan.ShipmentId) from @TransferTransitImportManifestShipment  transitImportMan where
	transitImportMan.CarrierCode=cargoIQCarrier.Carrier and transitImportMan.TransferType='TRANSIT'
	)ImportTransitShipmentMovements,
	(select fwbRecvd.fwbRecCount from @TransitFWBReceived fwbRecvd where
	fwbRecvd.CarrierCode=cargoIQCarrier.Carrier
	)ImportTransitFWBReceived,
	(select ffmRecvd.ffmRecCount from @TransitFFMReceived ffmRecvd where
	ffmRecvd.CarrierCode=cargoIQCarrier.Carrier
	)FFMReceivedBeforeATA,
	(select tnstRcfCount.rcfFlag from @StatusTransitRCF tnstRcfCount where
	tnstRcfCount.CarrierCode=cargoIQCarrier.Carrier
	)TransitRCFCarrier,
	(select tnstRcfCount.rcfCount from @StatusTransitRCF tnstRcfCount where
	tnstRcfCount.CarrierCode=cargoIQCarrier.Carrier
	)TransitRCFSent,
	(select tnstRcfCount.rcfCount from @StatusTransitRCFInTime tnstRcfCount where
	tnstRcfCount.CarrierCode=cargoIQCarrier.Carrier
	)TransitRCFSentInTime,
	(select depCount.trfDepFlag from @StatusEventTransitDEP depCount where
	depCount.CarrierCode=cargoIQCarrier.Carrier
	)TransitDEPCarrier,
	(select depCount.depCount from @StatusEventTransitDEP depCount where
	depCount.CarrierCode=cargoIQCarrier.Carrier --and depCount.TransferType = 'TRANSIT'
	)TransitDEPSent,
	(select depCountSla.depCount from @StatusEventTransitDEPSLA depCountSla where
	depCountSla.CarrierCode=cargoIQCarrier.Carrier --and depCount.TransferType = 'TRANSIT'
	)TransitDEPSentInTime,
	(select count(transitShp.ShipmentId) from @TransitExportShipmentManifestInfo transitShp where
	transitShp.CarrierCode=cargoIQCarrier.Carrier and transitShp.TransferType = 'TRANSIT'
	)TransitFFMSent
	FROM
	@CargoiQCarrierInfo cargoIQCarrier
	) OuterMostQuery
	Group by C2K_Identifier,Carrier,[Month],GHA,Station,ExportTransferShipmentsManifested,RCTCarrierFlag,RCTSent,
	TransferDEPCarrierFlag,ExportTransferDEPSent,ExportTransferDEPSentInTime,
	ImportTransferShipments,ImportTransferShipmentsManifested,TransferRCFCarrierFlag,
	ImportTransferRCFSent,ImportTransferRCFSentInTime,TFDCarrierFlag,ImportTransferTFDSent,
	ImportTransferTFDSentInTime,ImportTransitAWB,ImportTransitShipmentMovements,TransitRCFCarrier,TransitRCFSent,TransitRCFSentInTime,
	TransitFFMSent,TransitDEPCarrier,TransitDEPSent,TransitDEPSentInTime
	) as q1
	inner join
	(
	select ciqTemplate.C2KIdentifier,   GHA,
	--concat('T',ROW_NUMBER() OVER(ORDER BY STRING_AGG(airline,',') ASC)) AS IEGroup,
	--ROW_NUMBER() OVER(ORDER BY STRING_AGG(airline,',') ASC) as rowno,
	CASE WHEN C2KIdentifier='A' THEN
	concat('T',DEnse_Rank() OVER(ORDER BY C2KIdentifier, (IIF(IMP_RCT IS NULL, 0 , 1) + IIF(EXP_DEP IS NULL, 0 , 1) + IIF(IMP_RCF IS NULL, 0 , 1) +
	IIF(IMP_TFD IS NULL, 0 , 1) +IIF(TRN_RCF IS NULL, 0 , 1)+IIF(TRN_DEP IS NULL, 0 , 1)  ) desc, concat(IMP_RCT, EXP_DEP, IMP_RCF, IMP_TFD,TRN_RCF,TRN_DEP) desc) ) ELSE 'AA'
	END
	AS IEGroup,
	Dense_Rank() OVER(ORDER BY C2KIdentifier, (IIF(IMP_RCT IS NULL, 0 , 1) + IIF(EXP_DEP IS NULL, 0 , 1) + IIF(IMP_RCF IS NULL, 0 , 1) +
	IIF(IMP_TFD IS NULL, 0 , 1) +IIF(TRN_RCF IS NULL, 0 , 1)+IIF(TRN_DEP IS NULL, 0 , 1)) desc, concat(IMP_RCT, EXP_DEP, IMP_RCF, IMP_TFD,TRN_RCF,TRN_DEP) desc) as rowno,
	concat('"',STRING_AGG(airline,'","'),'"') Carrier,
	IMP_RCT, EXP_DEP, IMP_RCF, IMP_TFD,TRN_RCF,TRN_DEP
	from (select  distinct
	(select case when cargoIqFlag=1 then 'C' else 'A' end C2KIdentifier from mst_carrier where mst_carrier.carriercode=a.airline)C2KIdentifier,
	'SAT' as GHA,
	a.airline,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='RCT' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_RCT,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='DEP' and FlowType='E' and CargoiQ_SLAConfiguration.airline=a.airline) EXP_DEP,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='RCF' and FlowType='I' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_RCF,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='TFD' and CargoiQ_SLAConfiguration.airline=a.airline) IMP_TFD,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='RCF' and FlowType='I' and CargoiQ_SLAConfiguration.airline=a.airline) TRN_RCF,
	(select top(1) CiqMessageTypeId from CargoiQ_SLAConfiguration where CiqMessageTypeId='DEP' and FlowType='E' and CargoiQ_SLAConfiguration.airline=a.airline) TRN_DEP
	from CargoiQ_SLAConfiguration a,mst_carrier b where a.airline=b.carriercode --and b.cargoIqFlag=0
	) ciqTemplate
	group by
	ciqTemplate.C2KIdentifier, ciqTemplate.IMP_RCT,ciqTemplate.EXP_DEP,ciqTemplate.IMP_RCF,
	ciqTemplate.IMP_TFD,TRN_RCF,TRN_DEP,ciqTemplate.GHA
	)q2 on
	--q1.C2K_Identifier = q2.C2KIdentifier and
	q1.GHA = q2.GHA
	where q2.Carrier like concat('%"' , q1.Carrier ,'"%')
	)sumouter
	group by grp,C2K_Identifier,
	GHA,Month,Station
	order by C2K_Identifier desc 
       
	]]>
	</select>
	
	<select id="getConnectingUrl" resultType="java.lang.String">
		select ParameterValueChar from App_SystemParameters where ParameterCode = 'BILLING_INTERFACE_API_SERVER'
	</select>
</mapper>