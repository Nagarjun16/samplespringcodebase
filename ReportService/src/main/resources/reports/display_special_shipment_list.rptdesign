<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.6.0.v201606072122</property>
    <property name="units">in</property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <parameters>
        <scalar-parameter name="tenantID" id="157">
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="datefrom" id="158">
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="dateto" id="159">
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="shipmentType" id="182">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="carrier" id="183">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="carrierGroup" id="184">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="terminalPoint" id="185">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="flight" id="186">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="excludeShc" id="187">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="shc" id="188">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="s" id="189">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="segment" id="190">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="departed" id="191">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <oda-data-source extensionID="org.eclipse.birt.report.data.oda.jdbc" name="Data Source" id="155">
            <list-property name="privateDriverProperties">
                <ex-property>
                    <name>metadataBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledMetadataBidiFormatStr</name>
                </ex-property>
                <ex-property>
                    <name>contentBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledContentBidiFormatStr</name>
                </ex-property>
            </list-property>
            <property name="odaDriverClass">com.microsoft.sqlserver.jdbc.SQLServerDriver</property>
            <property name="odaURL">jdbc:sqlserver://cosysuatsqldb1server.database.windows.net;databaseName=NGCUAT</property>
            <property name="odaUser">SATSUatAppUser</property>
            <encrypted-property name="odaPassword" encryptionID="base64">U0B0c0FwcCQxNTYl</encrypted-property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="Data Set" id="156">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">datefrom</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">93</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">dateto</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">93</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_5</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_6</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">4</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">datefrom</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">93</property>
                    <property name="position">5</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_4</property>
                    <property name="paramName">dateto</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">93</property>
                    <property name="position">6</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_7</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">7</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_8</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">8</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_9</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">9</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_10</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">10</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_11</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">11</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_12</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">12</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_13</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">13</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_14</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">14</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_15</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">15</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_16</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">16</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_17</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">17</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_18</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">18</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_19</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">19</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_20</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">20</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_21</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">21</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_22</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">22</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_23</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">23</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_24</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">24</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_25</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">25</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_26</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">0</property>
                    <property name="position">26</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_27</property>
                    <property name="paramName">tenantID</property>
                    <property name="nativeName"></property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">0</property>
                    <property name="position">27</property>
                    <property name="isOptional">false</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Type</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">ShipmentType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">CarrierCode</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">ShipmentNumber</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">ShipmentDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">Origin</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">Destination</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">Pieces</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">Weight</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">NatureOfGoodsDescription</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">IncomingFlightKey</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">IncomingFlightNumber</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">IncomingScheduledFlightDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">IncomingEstimatedFlightDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">IncomingAcutalFlightDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">IncomingFlightSegment</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">17</property>
                        <property name="name">IncomingManifestPieces</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">18</property>
                        <property name="name">IncomingManifestWeight</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">19</property>
                        <property name="name">OutgoingFlightKey</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">20</property>
                        <property name="name">OutgoingFlightNumber</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">21</property>
                        <property name="name">OutgoingScheduledFlightDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">22</property>
                        <property name="name">OutgoingEstimatedFlightDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">23</property>
                        <property name="name">OutgoingActualFlightDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">24</property>
                        <property name="name">OutgoingFlightSegment</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">25</property>
                        <property name="name">OutgoingBookingPieces</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">26</property>
                        <property name="name">OutgoingBookingWeight</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">27</property>
                        <property name="name">TransferType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">28</property>
                        <property name="name">SHC</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">29</property>
                        <property name="name">XPSPieces</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">30</property>
                        <property name="name">DwellTime</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">31</property>
                        <property name="name">ReadyToLoad</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">32</property>
                        <property name="name">PartSuffix</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[var shipmentType = params["shipmentType"].value;
var carrier = params["carrier"].value;
var carrierGroup = params["carrierGroup"].value;
var terminalPoint = params["terminalPoint"].value;
var flight = params["flight"].value;
var excludeShc = params["excludeShc"].value;
var shc = params["shc"].value;
var s = params["s"].value; 
var segment =  params["segment"].value;
var departed =  params["departed"].value;



if(shipmentType != null &amp;&amp; shipmentType != ""){
	this.queryText = this.queryText + " and SpecialShipments.ShipmentType = '"+shipmentType+"'";
}
if(carrier != null &amp;&amp; carrier != ""){
	this.queryText = this.queryText + " and SpecialShipments.CarrierCode = '"+carrier+"'";
}

if(carrierGroup != null &amp;&amp; carrierGroup != ""){
	this.queryText = this.queryText + "and SpecialShipments.CarrierCode in ( select Mst_AssociateCarrierWithGroup.CarrierCode from Mst_AssociateCarrierWithGroup inner join Mst_CarrierGroup on Mst_AssociateCarrierWithGroup.Mst_CarrierGroup_ID = Mst_CarrierGroup.Mst_CarrierGroup_ID where Mst_CarrierGroup.CarrierGroupCode = '"+carrierGroup+"')"
}

if(terminalPoint != null &amp;&amp; terminalPoint != ""){

this.queryText = this.queryText + " and SpecialShipments.CarrierCode in (select Whs_HandlingConstraintsCarrier.CarrierCode from Whs_Terminal inner join Whs_AssociateHandlingConstraintWithArea on Whs_Terminal.WhsTerminalId = Whs_AssociateHandlingConstraintWithArea.ReferenceId and Whs_AssociateHandlingConstraintWithArea.ReferenceType = 'TERMINAL' inner join Whs_HandlingConstraints on Whs_AssociateHandlingConstraintWithArea.WhsHandlingConstraintsId = Whs_HandlingConstraints.WhsHandlingConstraintsId inner join Whs_HandlingConstraintsCarrier on Whs_HandlingConstraints.WhsHandlingConstraintsId = Whs_HandlingConstraintsCarrier.WhsHandlingConstraintsId where Whs_Terminal.TerminalCode = '"+terminalPoint+"' ) ";
			
this.queryText = this.queryText + " and SpecialShipments.ShipmentType in (select distinct case when Whs_HandlingConstraints.ProcessHandled = 'BOTH' then 'TRANSIT' else Whs_HandlingConstraints.ProcessHandled end from Whs_Terminal inner join Whs_Sector on Whs_Terminal.WhsTerminalId = Whs_Sector.WhsTerminalId inner join Whs_AssociateHandlingConstraintWithArea on ((Whs_Terminal.WhsTerminalId = Whs_AssociateHandlingConstraintWithArea.ReferenceId and Whs_AssociateHandlingConstraintWithArea.ReferenceType = 'TERMINAL') OR (Whs_Sector.WhsSectorId = Whs_AssociateHandlingConstraintWithArea.ReferenceId and Whs_AssociateHandlingConstraintWithArea.ReferenceType = 'SECTOR')) inner join Whs_HandlingConstraints on Whs_AssociateHandlingConstraintWithArea.WhsHandlingConstraintsId = Whs_HandlingConstraints.WhsHandlingConstraintsId where Whs_Terminal.TerminalCode = '"+terminalPoint+"' )";

}
if(flight != null &amp;&amp; flight != ""){
	this.queryText = this.queryText + " and (SpecialShipments.IncomingFlightNumber = '"+flight+"'  OR SpecialShipments.OutgoingFlightNumber = '"+flight+"') ";
}

if(excludeShc != null &amp;&amp;  excludeShc != ""){

	var excludeShcArray = excludeShc.split(",");
	
	this.queryText = this.queryText + " and ( ";
	
	for(var i = 0; i < excludeShcArray.length; i++){
		this.queryText = this.queryText + " SpecialShipments.SHC not like '%"+ excludeShcArray[i] + "%'";
		if(i + 1 < excludeShcArray.length){
				this.queryText = this.queryText + " and ";		
		}
	}	
	this.queryText = this.queryText + " ) ";
}


if(shc != null &amp;&amp; shc != "" ){

	var shcArray = shc.split(",");
	
	this.queryText = this.queryText + " and ( ";
	
	for(var i = 0; i < shcArray.length; i++){
		this.queryText = this.queryText + " SpecialShipments.SHC like '%"+ shcArray[i] + "%'";	
		if(i + 1 < shcArray.length){
			this.queryText = this.queryText + " and ";		
		}
	}
	
	this.queryText = this.queryText + " ) ";
}

if(segment != null ){
	this.queryText = this.queryText + " and (SpecialShipments.OutgoingFlightSegment =  '"+segment+"' OR SpecialShipments.IncomingFlightSegment = '"+segment+"') ";
}

if(departed != null &amp;&amp; departed == 'Y'){
	this.queryText = this.queryText + " and SpecialShipments.FlightDepartedOn is not null ";
}
if(departed != null &amp;&amp; departed == 'N'){
	this.queryText = this.queryText + " and SpecialShipments.FlightDepartedOn is null ";
}

this.queryText + "option (maxdop 1)";]]></method>
            <property name="dataSource">Data Source</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Type</property>
                    <property name="nativeName">Type</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">ShipmentType</property>
                    <property name="nativeName">ShipmentType</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">CarrierCode</property>
                    <property name="nativeName">CarrierCode</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">ShipmentNumber</property>
                    <property name="nativeName">ShipmentNumber</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">ShipmentDate</property>
                    <property name="nativeName">ShipmentDate</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">Origin</property>
                    <property name="nativeName">Origin</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">Destination</property>
                    <property name="nativeName">Destination</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">Pieces</property>
                    <property name="nativeName">Pieces</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">Weight</property>
                    <property name="nativeName">Weight</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">NatureOfGoodsDescription</property>
                    <property name="nativeName">NatureOfGoodsDescription</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">IncomingFlightKey</property>
                    <property name="nativeName">IncomingFlightKey</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">IncomingFlightNumber</property>
                    <property name="nativeName">IncomingFlightNumber</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">IncomingScheduledFlightDate</property>
                    <property name="nativeName">IncomingScheduledFlightDate</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">IncomingEstimatedFlightDate</property>
                    <property name="nativeName">IncomingEstimatedFlightDate</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">15</property>
                    <property name="name">IncomingAcutalFlightDate</property>
                    <property name="nativeName">IncomingAcutalFlightDate</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">16</property>
                    <property name="name">IncomingFlightSegment</property>
                    <property name="nativeName">IncomingFlightSegment</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">17</property>
                    <property name="name">IncomingManifestPieces</property>
                    <property name="nativeName">IncomingManifestPieces</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">18</property>
                    <property name="name">IncomingManifestWeight</property>
                    <property name="nativeName">IncomingManifestWeight</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">19</property>
                    <property name="name">OutgoingFlightKey</property>
                    <property name="nativeName">OutgoingFlightKey</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">20</property>
                    <property name="name">OutgoingFlightNumber</property>
                    <property name="nativeName">OutgoingFlightNumber</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">21</property>
                    <property name="name">OutgoingScheduledFlightDate</property>
                    <property name="nativeName">OutgoingScheduledFlightDate</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">22</property>
                    <property name="name">OutgoingEstimatedFlightDate</property>
                    <property name="nativeName">OutgoingEstimatedFlightDate</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">23</property>
                    <property name="name">OutgoingActualFlightDate</property>
                    <property name="nativeName">OutgoingActualFlightDate</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">24</property>
                    <property name="name">OutgoingFlightSegment</property>
                    <property name="nativeName">OutgoingFlightSegment</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">25</property>
                    <property name="name">OutgoingBookingPieces</property>
                    <property name="nativeName">OutgoingBookingPieces</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">26</property>
                    <property name="name">OutgoingBookingWeight</property>
                    <property name="nativeName">OutgoingBookingWeight</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">27</property>
                    <property name="name">TransferType</property>
                    <property name="nativeName">TransferType</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">28</property>
                    <property name="name">SHC</property>
                    <property name="nativeName">SHC</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">29</property>
                    <property name="name">XPSPieces</property>
                    <property name="nativeName">XPSPieces</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">30</property>
                    <property name="name">DwellTime</property>
                    <property name="nativeName">DwellTime</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">31</property>
                    <property name="name">ReadyToLoad</property>
                    <property name="nativeName">ReadyToLoad</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">32</property>
                    <property name="name">PartSuffix</property>
                    <property name="nativeName">PartSuffix</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[
		With OutboundFlightInfo AS(
			select
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightKey as FlightKey,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight_Legs.DateSTD,
				Flt_OperativeFlight_Legs.DateETD,
				Flt_OperativeFlight_Legs.DateATD,
				Exp_FlightEvents.FlightDepartedOn,
				Flt_OperativeFlight.Flight_ID
			from
				Flt_OperativeFlight inner join
				Flt_OperativeFlight_Legs 
					on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID  inner join
				Exp_FlightEvents
					on Flt_OperativeFlight_Legs.Flight_ID = Exp_FlightEvents.FlightID
			where
				Flt_OperativeFlight_Legs.DateSTD between ? and  ? and
				Flt_OperativeFlight_Legs.FlightBoardPoint =  ?
	
				
		), InboundFlightInfo AS(
			select
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightKey,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight_Legs.DateSTA,
				Flt_OperativeFlight_Legs.DateETA,
				Flt_OperativeFlight_Legs.DateATA,
				Flt_OperativeFlight.Flight_ID
			from
				Flt_OperativeFlight inner join
				Flt_OperativeFlight_Legs 
					on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
						Flt_OperativeFlight_Legs.FlightOffPoint =  ?
			where
				Flt_OperativeFlight_Legs.DateSTA between ? and  ?		
		), BookingExportDisplaySpecialShipment AS(
			select
				case 
					when (Exp_ShipmentBooking.Origin <>  ? and
							Exp_ShipmentBooking.Destination <> 'SIN') then
						'TRANSIT'
					when (Exp_ShipmentBooking.Origin =  ? and
							Exp_ShipmentBooking.Destination <> 'SIN') then
						'EXPORT'
					else
						'IMPORT'
				end ShipmentType,				
				Exp_ShipmentBooking.ShipmentNumber,
				Exp_ShipmentBooking.ShipmentDate,
				Exp_ShipmentBooking.Origin,
				Exp_ShipmentBooking.Destination,
				Exp_ShipmentBooking.Pieces,
				Exp_ShipmentBooking.GrossWeight,
				Exp_ShipmentBooking.NatureOfGoodsDescription,
				OutboundFlightInfo.CarrierCode,
				OutboundFlightInfo.FlightKey,
				OutboundFlightInfo.FlightNumber,
				OutboundFlightInfo.DateSTD,
				OutboundFlightInfo.DateETD,
				OutboundFlightInfo.DateATD,
				Flt_OperativeFlight_Segments.FlightOffPoint,
				Exp_ShipmentFlightBookingDetail.BookingPieces,
				Exp_ShipmentFlightBookingDetail.BookingWeight,
				Exp_ShipmentFlightBookingDetail.TransferType,	
				OutboundFlightInfo.FlightDepartedOn,
				(select
						string_agg(SHCInfo.SpecialHandlingCode, ' ') 		
					from
					(select
						Exp_ShipmentFlightBookingDetailSHC.SpecialHandlingCode
					from
						Exp_ShipmentFlightBookingDetailSHC
					where
						Exp_ShipmentFlightBookingDetailSHC.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId
					union
					select
						Shipment_MasterSHC.SpecialHandlingCode
					from
						Shipment_Master inner join
						Shipment_MasterSHC
							on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId
					where
						Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
						Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate
					) as SHCInfo
				) as SHC,
				null as PartSuffix,
				inwardFlight.CarrierCode as IncomingFlightCarrier,
				inwardFlight.FlightKey as IncomingFlightKey,
				inwardFlight.FlightNumber IncomingFlightNumber,
				inwardFlightLeg.DateSTA as IncomingScheduledFlightDate,
				inwardFlightLeg.DateETA as IncomingEstimatedFlightDate,
				inwardFlightLeg.DateATA as IncomingAcutalFlightDate,
				inwardFlightSegment.FlightBoardPoint as IncomingFlightSegment,
				case	
					when inwardFlight.FlightKey is not null then 
						Exp_ShipmentFlightBookingDetail.BookingPieces 
					end as IncomingManifestPieces,
				case	
					when inwardFlight.FlightKey is not null then 
						Exp_ShipmentFlightBookingDetail.BookingWeight 
					end as IncomingManifestWeight
			from
				OutboundFlightInfo inner join
				Exp_ShipmentFlightBookingDetail
					on OutboundFlightInfo.Flight_ID = Exp_ShipmentFlightBookingDetail.FlightId and
						Exp_ShipmentFlightBookingDetail.FlightBoardPoint =  ? inner join
				Exp_ShipmentBooking
					on Exp_ShipmentFlightBookingDetail.BookingId = Exp_ShipmentBooking.BookingId inner join		
				Flt_OperativeFlight_Segments
					on Exp_ShipmentFlightBookingDetail.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId left join
				Exp_ShipmentFlightBookingDetail inwardFlightBookingDetail
					on inwardFlightBookingDetail.BookingId = Exp_ShipmentBooking.BookingId and 
						inwardFlightBookingDetail.FlightOffPoint =  ? left join
				Flt_OperativeFlight inwardFlight
					on inwardFlightBookingDetail.FlightId = inwardFlight.Flight_ID left join
				Flt_OperativeFlight_Segments inwardFlightSegment
					on inwardFlightBookingDetail.FlightSegmentId = inwardFlightSegment.FlightSegmentId and 
						inwardFlight.Flight_ID = inwardFlightSegment.Flight_ID left join	
				Flt_OperativeFlight_Legs inwardFlightLeg
					on inwardFlight.Flight_ID = inwardFlightLeg.Flight_ID and
						inwardFlightLeg.FlightOffPoint =  ?
			where
				len(Exp_ShipmentBooking.ShipmentNumber) < 20 and
				not exists(
					select
						null
					from
						Exp_ShipmentPartBookingDetail
					where
						Exp_ShipmentPartBookingDetail.BookingId = Exp_ShipmentBooking.BookingId
				) and
				exists(
					select 
						null
					from
						OutboundFlightInfo innerFlightInfo
					where
						innerFlightInfo.Flight_ID = Exp_ShipmentFlightBookingDetail.FlightId
				)
			union all
			select
				case 
					when (Exp_ShipmentBooking.Origin <>  ? and
							Exp_ShipmentBooking.Destination <> 'SIN') then
						'TRANSIT'
					when (Exp_ShipmentBooking.Origin =  ? and
							Exp_ShipmentBooking.Destination <> 'SIN') then
						'EXPORT'
					else
						'IMPORT'
				end ShipmentType,				
				Exp_ShipmentBooking.ShipmentNumber,
				Exp_ShipmentBooking.ShipmentDate,
				Exp_ShipmentBooking.Origin,
				Exp_ShipmentBooking.Destination,
				Exp_ShipmentBooking.Pieces,
				Exp_ShipmentBooking.GrossWeight,
				Exp_ShipmentBooking.NatureOfGoodsDescription,
				OutboundFlightInfo.CarrierCode,
				OutboundFlightInfo.FlightKey,
				OutboundFlightInfo.FlightNumber,
				OutboundFlightInfo.DateSTD,
				OutboundFlightInfo.DateETD,
				OutboundFlightInfo.DateATD,
				Flt_OperativeFlight_Segments.FlightOffPoint,
				Exp_ShipmentPartBookingDetail.PartPieces as BookingPieces,
				Exp_ShipmentPartBookingDetail.PartWeight as BookingWeight,
				Exp_ShipmentPartBookingDetail.TransferType,	
				OutboundFlightInfo.FlightDepartedOn,
				(select
						string_agg(SHCInfo.SpecialHandlingCode, ' ') 
					from	
					(select	
						Exp_ShipmentPartBookingDetailSHC.SpecialHandlingCode
					from
						Exp_ShipmentPartBookingDetailSHC
					where
						Exp_ShipmentPartBookingDetailSHC.PartBookingId = Exp_ShipmentPartBookingDetail.PartBookingId
					union
					select
						Shipment_MasterSHC.SpecialHandlingCode
					from
						Shipment_Master inner join
						Shipment_MasterSHC
							on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId
					where
						Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
						Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate
					) as SHCInfo
				) as SHC,
				case	
					when Exp_ShipmentPartBookingDetail.PartSuffix not like 'OAL%' then
						Exp_ShipmentPartBookingDetail.PartSuffix
					end as PartSuffix,
				null as IncomingFlightCarrier,
				null as IncomingFlightKey,
				null IncomingFlightNumber,
				null as IncomingScheduledFlightDate,
				null as IncomingEstimatedFlightDate,
				null as IncomingAcutalFlightDate,
				null as IncomingFlightSegment,
				null as IncomingManifestPieces,
				null as IncomingManifestWeight
			from
				OutboundFlightInfo inner join
				Exp_ShipmentFlightBookingDetail
					on OutboundFlightInfo.Flight_ID = Exp_ShipmentFlightBookingDetail.FlightId and
						Exp_ShipmentFlightBookingDetail.FlightBoardPoint =  ? inner join
				Exp_ShipmentFlightPartDetail
					on Exp_ShipmentFlightBookingDetail.FlightBookingId = Exp_ShipmentFlightPartDetail.FlightBookingId inner join
				Exp_ShipmentPartBookingDetail
					on Exp_ShipmentFlightPartDetail.PartBookingId = Exp_ShipmentPartBookingDetail.PartBookingId inner join
				Exp_ShipmentBooking
					on Exp_ShipmentPartBookingDetail.BookingId = Exp_ShipmentBooking.BookingId inner join
				Flt_OperativeFlight_Segments
					on Exp_ShipmentFlightBookingDetail.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId 
			where		
				len(Exp_ShipmentBooking.ShipmentNumber) < 20 and
				Exp_ShipmentBooking.Origin =  ?  and
				exists(
					select 
						null
					from
						OutboundFlightInfo innerFlightInfo
					where
						innerFlightInfo.Flight_ID = Exp_ShipmentFlightBookingDetail.FlightId
				)
			union all
			select
				case 
					when (Exp_ShipmentBooking.Origin <>  ? and
							Exp_ShipmentBooking.Destination <> 'SIN') then
						'TRANSIT'
					when (Exp_ShipmentBooking.Origin =  ? and
							Exp_ShipmentBooking.Destination <> 'SIN') then
						'EXPORT'
					else
						'IMPORT'
				end ShipmentType,				
				Exp_ShipmentBooking.ShipmentNumber,
				Exp_ShipmentBooking.ShipmentDate,
				Exp_ShipmentBooking.Origin,
				Exp_ShipmentBooking.Destination,
				Exp_ShipmentBooking.Pieces,
				Exp_ShipmentBooking.GrossWeight,
				Exp_ShipmentBooking.NatureOfGoodsDescription,
				OutboundFlightInfo.CarrierCode,
				OutboundFlightInfo.FlightKey,
				OutboundFlightInfo.FlightNumber,
				OutboundFlightInfo.DateSTD,
				OutboundFlightInfo.DateETD,
				OutboundFlightInfo.DateATD,
				Flt_OperativeFlight_Segments.FlightOffPoint,
				Exp_ShipmentPartBookingDetail.PartPieces as BookingPieces,
				Exp_ShipmentPartBookingDetail.PartWeight as BookingWeight,
				Exp_ShipmentPartBookingDetail.TransferType,	
				OutboundFlightInfo.FlightDepartedOn,
				(select
						string_agg(SHCInfo.SpecialHandlingCode, ' ') 
					from	
					(select	
						Exp_ShipmentPartBookingDetailSHC.SpecialHandlingCode
					from
						Exp_ShipmentPartBookingDetailSHC
					where
						Exp_ShipmentPartBookingDetailSHC.PartBookingId = Exp_ShipmentPartBookingDetail.PartBookingId
					union
					select
						Shipment_MasterSHC.SpecialHandlingCode
					from
						Shipment_Master inner join
						Shipment_MasterSHC
							on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId
					where
						Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
						Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate
					) as SHCInfo
				) as SHC,
				case	
					when Exp_ShipmentPartBookingDetail.PartSuffix not like 'OAL%' then
						Exp_ShipmentPartBookingDetail.PartSuffix
					end as PartSuffix,
				inwardFlight.CarrierCode as IncomingFlightCarrier,
				inwardFlight.FlightKey as IncomingFlightKey,
				inwardFlight.FlightNumber IncomingFlightNumber,
				inwardFlightLeg.DateSTA as IncomingScheduledFlightDate,
				inwardFlightLeg.DateETA as IncomingEstimatedFlightDate,
				inwardFlightLeg.DateATA as IncomingAcutalFlightDate,
				inwardFlightSegment.FlightBoardPoint as IncomingFlightSegment,
				case	
					when inwardFlight.FlightKey is not null then 
						Exp_ShipmentPartBookingDetail.PartPieces
					end as IncomingManifestPieces,
				case	
					when inwardFlight.FlightKey is not null then 
						Exp_ShipmentPartBookingDetail.PartWeight 
					end as IncomingManifestWeight
			from
				OutboundFlightInfo inner join
				Exp_ShipmentFlightBookingDetail
					on OutboundFlightInfo.Flight_ID = Exp_ShipmentFlightBookingDetail.FlightId and
					Exp_ShipmentFlightBookingDetail.FlightBoardPoint =  ? inner join
				Exp_ShipmentFlightPartDetail
					on Exp_ShipmentFlightBookingDetail.FlightBookingId = Exp_ShipmentFlightPartDetail.FlightBookingId inner join
				Exp_ShipmentPartBookingDetail
					on Exp_ShipmentFlightPartDetail.PartBookingId = Exp_ShipmentPartBookingDetail.PartBookingId inner join
				Exp_ShipmentBooking
					on Exp_ShipmentPartBookingDetail.BookingId = Exp_ShipmentBooking.BookingId inner join
				Flt_OperativeFlight_Segments
					on Exp_ShipmentFlightBookingDetail.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId inner join
				Exp_ShipmentFlightPartDetail inwardFlightPartDetail
					on Exp_ShipmentPartBookingDetail.PartBookingId = inwardFlightPartDetail.PartBookingId inner join
				Exp_ShipmentFlightBookingDetail inwardFlightBookingDetail
					on inwardFlightPartDetail.FlightBookingId = inwardFlightBookingDetail.FlightBookingId inner join
				Flt_OperativeFlight inwardFlight
					on inwardFlightBookingDetail.FlightId = inwardFlight.Flight_ID inner join
				Flt_OperativeFlight_Segments inwardFlightSegment
					on inwardFlightBookingDetail.FlightSegmentId = inwardFlightSegment.FlightSegmentId and 
						inwardFlight.Flight_ID = inwardFlightSegment.Flight_ID inner join	
				Flt_OperativeFlight_Legs inwardFlightLeg
					on inwardFlight.Flight_ID = inwardFlightLeg.Flight_ID and
						inwardFlightLeg.FlightOffPoint =  ?
			where
				len(Exp_ShipmentBooking.ShipmentNumber) < 20 and
				Exp_ShipmentBooking.Origin <>  ?  and
				exists(
					select 
						null
					from
						OutboundFlightInfo innerFlightInfo
					where
						innerFlightInfo.Flight_ID = Exp_ShipmentFlightBookingDetail.FlightId
				)
		), BookingIncomingDisplaySpecialShipment AS(
			select
				case 
					when (Imp_ArrivalManifestShipmentInfo.Origin <>  ? and
							Imp_ArrivalManifestShipmentInfo.Destination <> 'SIN') then
						'TRANSIT'
					when (Imp_ArrivalManifestShipmentInfo.Origin =  ? and
							Imp_ArrivalManifestShipmentInfo.Destination <> 'SIN') then
						'EXPORT'
					else
						'IMPORT'
				end ShipmentType,
				Imp_ArrivalManifestShipmentInfo.ShipmentNumber,	
				Imp_ArrivalManifestShipmentInfo.ShipmentDate,	
				Imp_ArrivalManifestShipmentInfo.Origin,
				Imp_ArrivalManifestShipmentInfo.Destination,				
				InboundFlightInfo.CarrierCode,
				InboundFlightInfo.FlightKey,
				InboundFlightInfo.FlightNumber,
				InboundFlightInfo.DateSTA,
				InboundFlightInfo.DateETA,
				InboundFlightInfo.DateATA,
				Flt_OperativeFlight_Segments.FlightBoardPoint,
				null as NatureOfGoodsDescription,
				sum(Imp_ArrivalManifestShipmentInfo.Piece) as Pieces,
				sum(Imp_ArrivalManifestShipmentInfo.Weight) as Weight,
				Imp_ArrivalManifestShipmentInfo.TransferType,
				(select	
						string_agg(Imp_ArrivalManifestByShipmentSHC.SpecialHandlingCode, ' ')
					from(
						select	
							distinct Imp_ArrivalManifestByShipmentSHC.SpecialHandlingCode
						from
							Imp_ArrivalManifestULD innerArrivalManifestULD inner join
							Imp_ArrivalManifestShipmentInfo innerArrivalManifestShipmentInfo
								on innerArrivalManifestULD.ImpArrivalManifestULDId =innerArrivalManifestShipmentInfo.ImpArrivalManifestULDId inner join
							Imp_ArrivalManifestByShipmentSHC
								on innerArrivalManifestShipmentInfo.ImpArrivalManifestShipmentInfoId = Imp_ArrivalManifestByShipmentSHC.ImpArrivalManifestShipmentInfoId
						where
							innerArrivalManifestULD.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId and
							innerArrivalManifestShipmentInfo.ShipmentNumber = Imp_ArrivalManifestShipmentInfo.ShipmentNumber and
							innerArrivalManifestShipmentInfo.ShipmentDate = Imp_ArrivalManifestShipmentInfo.ShipmentDate
					) as Imp_ArrivalManifestByShipmentSHC		
				) SHC,
				Imp_ArrivalManifestShipmentInfo.BookingFlightId,
				Imp_ArrivalManifestShipmentInfo.FlightSegmentId,
				null as PartSuffix
			from
				InboundFlightInfo inner join
				Imp_ArrivalManifestByFlight 
				 on InboundFlightInfo.Flight_ID = Imp_ArrivalManifestByFlight.FlightId inner join
				Imp_ArrivalManifestBySegment
					on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId = Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId inner join
				Imp_ArrivalManifestULD
					on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
				Imp_ArrivalManifestShipmentInfo
					on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId inner join
				Flt_OperativeFlight_Segments
					on Imp_ArrivalManifestBySegment.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId
			where
				exists(
					select
						null
					from
						InboundFlightInfo innerFlightInfo
					where
						innerFlightInfo.Flight_ID = Imp_ArrivalManifestByFlight.FlightId
				)
			group by
				Imp_ArrivalManifestShipmentInfo.ShipmentNumber,	
				Imp_ArrivalManifestShipmentInfo.ShipmentDate,	
				Imp_ArrivalManifestShipmentInfo.Origin,
				Imp_ArrivalManifestShipmentInfo.Destination,				
				InboundFlightInfo.CarrierCode,
				InboundFlightInfo.FlightKey,
				InboundFlightInfo.FlightNumber,
				InboundFlightInfo.DateSTA,
				InboundFlightInfo.DateETA,
				InboundFlightInfo.DateATA,
				Flt_OperativeFlight_Segments.FlightBoardPoint,
				Imp_ArrivalManifestShipmentInfo.TransferType,
				Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId,
				Imp_ArrivalManifestShipmentInfo.BookingFlightId,
				Imp_ArrivalManifestShipmentInfo.FlightSegmentId
			union all
			select
				distinct
				case 
					when (Exp_ShipmentBooking.Origin <>  ? and
							Exp_ShipmentBooking.Destination <> 'SIN') then
						'TRANSIT'
					when (Exp_ShipmentBooking.Origin =  ? and
							Exp_ShipmentBooking.Destination <> 'SIN') then
						'EXPORT'
					else
						'IMPORT'
				end ShipmentType,				
				Exp_ShipmentBooking.ShipmentNumber,
				Exp_ShipmentBooking.ShipmentDate,
				Exp_ShipmentBooking.Origin,
				Exp_ShipmentBooking.Destination,	
				InboundFlightInfo.CarrierCode,
				InboundFlightInfo.FlightKey,
				InboundFlightInfo.FlightNumber,
				InboundFlightInfo.DateSTA,
				InboundFlightInfo.DateETA,
				InboundFlightInfo.DateATA,
				Flt_OperativeFlight_Segments.FlightBoardPoint,
				Exp_ShipmentBooking.NatureOfGoodsDescription,
				Exp_ShipmentFlightBookingDetail.BookingPieces as Pieces,
				Exp_ShipmentFlightBookingDetail.BookingWeight as Weight,
				Exp_ShipmentFlightBookingDetail.TransferType,
				(select
						string_agg(Exp_ShipmentFlightBookingDetailSHC.SpecialHandlingCode, ' ') 		
					from
						Exp_ShipmentFlightBookingDetailSHC
					where
						(Exp_ShipmentFlightBookingDetailSHC.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId OR
							Exp_ShipmentFlightBookingDetailSHC.FlightBookingId = outwardFlightBookingDetail.FlightBookingId)) as SHC,
				outwardFlightBookingDetail.FlightId as BookingFlightId,
				outwardFlightBookingDetail.FlightSegmentId as FlightSegmentId,
				Exp_ShipmentPartBookingDetail.PartSuffix
			from
				InboundFlightInfo inner join
				Exp_ShipmentFlightBookingDetail
					on InboundFlightInfo.Flight_ID = Exp_ShipmentFlightBookingDetail.FlightId and
						Exp_ShipmentFlightBookingDetail.FlightOffPoint = ? inner join
				Flt_OperativeFlight_Segments
					on Exp_ShipmentFlightBookingDetail.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId inner join
				Exp_ShipmentBooking 
					on Exp_ShipmentFlightBookingDetail.BookingId = Exp_ShipmentBooking.BookingId left join
				Exp_ShipmentFlightPartDetail
					on Exp_ShipmentFlightBookingDetail.FlightBookingId = Exp_ShipmentFlightPartDetail.FlightBookingId left join
				Exp_ShipmentPartBookingDetail
					on Exp_ShipmentFlightPartDetail.PartBookingId = Exp_ShipmentPartBookingDetail.PartBookingId left join
				Exp_ShipmentFlightBookingDetail outwardFlightBookingDetail
					on Exp_ShipmentBooking.BookingId = outwardFlightBookingDetail.BookingId and
						outwardFlightBookingDetail.FlightBoardPoint = ?
			where
				exists(
					select
						null
					from
						InboundFlightInfo innerFlightInfo
					where
						innerFlightInfo.Flight_ID = Exp_ShipmentFlightBookingDetail.FlightId
				) and
				len(Exp_ShipmentBooking.ShipmentNumber) < 20 and
				not exists(
					select
						null
					from
						Imp_ArrivalManifestByFlight inner join
						Imp_ArrivalManifestBySegment
							on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId = Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId inner join
						Imp_ArrivalManifestULD
							on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
						Imp_ArrivalManifestShipmentInfo
							on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId
					where
						Imp_ArrivalManifestByFlight.FlightId = InboundFlightInfo.Flight_ID and
						Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
						Imp_ArrivalManifestShipmentInfo.ShipmentDate = Exp_ShipmentBooking.ShipmentDate
				)
		)
		select
			isnull(Shipment_Master.ShipmentType, 'AWB') as Type,
			SpecialShipments.ShipmentType,
			SpecialShipments.CarrierCode,
			SpecialShipments.ShipmentNumber,
			SpecialShipments.ShipmentDate,
			SpecialShipments.Origin,
			SpecialShipments.Destination,
			Shipment_Master.Pieces as Pieces,
			Shipment_Master.Weight as Weight,
			isnull(Shipment_Master.NatureOfGoodsDescription, SpecialShipments.NatureOfGoodsDescription) as NatureOfGoodsDescription,			
			SpecialShipments.IncomingFlightKey,
			SpecialShipments.IncomingFlightNumber,
			SpecialShipments.IncomingScheduledFlightDate,
			SpecialShipments.IncomingEstimatedFlightDate,
			SpecialShipments.IncomingAcutalFlightDate,
			SpecialShipments.IncomingFlightSegment,
			SpecialShipments.IncomingManifestPieces,
			SpecialShipments.IncomingManifestWeight,
			SpecialShipments.OutgoingFlightKey,
			SpecialShipments.OutgoingFlightNumber,
			SpecialShipments.OutgoingScheduledFlightDate,
			SpecialShipments.OutgoingEstimatedFlightDate,
			SpecialShipments.OutgoingActualFlightDate,
			SpecialShipments.OutgoingFlightSegment,
			SpecialShipments.OutgoingBookingPieces,
			SpecialShipments.OutgoingBookingWeight,
			SpecialShipments.TransferType,
			SpecialShipments.SHC as SHC,
			(select
				sum(Shipment_HouseInformation.Pieces)
			from
				Shipment_HouseInformation
			where
				Shipment_HouseInformation.ShipmentId = Shipment_Master.ShipmentId and
				Shipment_HouseInformation.ShipmentType = 'XPS'
			) as XPSPieces,
			(select	
				datediff(d, max(Shipment_Inventory.Created_DateTime), getdate())
			from
				Shipment_Inventory
			where
				Shipment_Inventory.Shipment_Id = Shipment_Master.ShipmentId and
				(Shipment_Inventory.Flight_Id is not null and
					Shipment_Inventory.AssignedUldTrolley is null)
			) as DwellTime,
			case 
				when (select
							count(1)
						from
							Exp_EAcceptanceDocumentInformation
						where
							Exp_EAcceptanceDocumentInformation.ShipmentNumber = Shipment_Master.ShipmentNumber and
							Exp_EAcceptanceDocumentInformation.ShipmentDate = Shipment_Master.ShipmentDate and
							Exp_EAcceptanceDocumentInformation.Status = 'ACCEPTED') > 0 then
					1
				when (select
							count(1)
						from
							Shipment_Inventory
						where
							Shipment_Inventory.Shipment_Id = Shipment_Master.ShipmentId) > 0 then
					1
				else
					0
				end ReadyToLoad,
			SpecialShipments.PartSuffix
		from(
			select
				BookingExportDisplaySpecialShipment.ShipmentType,
				BookingExportDisplaySpecialShipment.CarrierCode,
				BookingExportDisplaySpecialShipment.ShipmentNumber,
				BookingExportDisplaySpecialShipment.ShipmentDate,
				BookingExportDisplaySpecialShipment.Origin,
				BookingExportDisplaySpecialShipment.Destination,
				BookingExportDisplaySpecialShipment.Pieces,
				BookingExportDisplaySpecialShipment.GrossWeight as Weight,
				BookingExportDisplaySpecialShipment.NatureOfGoodsDescription,
				BookingExportDisplaySpecialShipment.IncomingFlightKey,
				BookingExportDisplaySpecialShipment.IncomingFlightNumber,
				BookingExportDisplaySpecialShipment. IncomingScheduledFlightDate,
				BookingExportDisplaySpecialShipment.IncomingEstimatedFlightDate,
				BookingExportDisplaySpecialShipment.IncomingAcutalFlightDate,
				BookingExportDisplaySpecialShipment.IncomingFlightSegment,
				BookingExportDisplaySpecialShipment.IncomingManifestPieces,
				BookingExportDisplaySpecialShipment.IncomingManifestWeight,
				BookingExportDisplaySpecialShipment.FlightKey as OutgoingFlightKey,
				BookingExportDisplaySpecialShipment.FlightNumber as OutgoingFlightNumber,
				BookingExportDisplaySpecialShipment.DateSTD as OutgoingScheduledFlightDate,
				BookingExportDisplaySpecialShipment.DateETD as OutgoingEstimatedFlightDate,
				BookingExportDisplaySpecialShipment.DateATD as OutgoingActualFlightDate,
				BookingExportDisplaySpecialShipment.FlightOffPoint as OutgoingFlightSegment,
				BookingExportDisplaySpecialShipment.BookingPieces as OutgoingBookingPieces,
				BookingExportDisplaySpecialShipment.BookingWeight as OutgoingBookingWeight,
				BookingExportDisplaySpecialShipment.TransferType,
				BookingExportDisplaySpecialShipment.SHC,
				BookingExportDisplaySpecialShipment.FlightDepartedOn,
				BookingExportDisplaySpecialShipment.PartSuffix		
			from	
				BookingExportDisplaySpecialShipment
			where
				not exists(
					select
						null
					from
						BookingIncomingDisplaySpecialShipment
					where
						BookingIncomingDisplaySpecialShipment.ShipmentNumber = BookingExportDisplaySpecialShipment.ShipmentNumber and
						BookingIncomingDisplaySpecialShipment.ShipmentDate = BookingExportDisplaySpecialShipment.ShipmentDate				
				)
			union all
			select
				BookingIncomingDisplaySpecialShipment.ShipmentType,
				BookingIncomingDisplaySpecialShipment.CarrierCode,
				BookingIncomingDisplaySpecialShipment.ShipmentNumber,
				BookingIncomingDisplaySpecialShipment.ShipmentDate,
				BookingIncomingDisplaySpecialShipment.Origin,
				BookingIncomingDisplaySpecialShipment.Destination,
				null Pieces,
				null Weight,
				BookingIncomingDisplaySpecialShipment.NatureOfGoodsDescription,
				BookingIncomingDisplaySpecialShipment.FlightKey as IncomingFlightKey,
				BookingIncomingDisplaySpecialShipment.FlightNumber as IncomingFlightNumber,
				BookingIncomingDisplaySpecialShipment.DateSTA as IncomingScheduledFlightDate,
				BookingIncomingDisplaySpecialShipment.DateETA as IncomingEstimatedFlightDate,
				BookingIncomingDisplaySpecialShipment.DateATA as IncomingAcutalFlightDate,
				BookingIncomingDisplaySpecialShipment.FlightBoardPoint as IncomingFlightSegment,
				BookingIncomingDisplaySpecialShipment.Pieces as IncomingManifestPieces,
				BookingIncomingDisplaySpecialShipment.Weight as IncomingManifestWeight,
				isnull(BookingExportDisplaySpecialShipment.FlightKey, Flt_OperativeFlight.FlightKey) as OutgoingFlightKey,
				isnull(BookingExportDisplaySpecialShipment.FlightNumber, Flt_OperativeFlight.FlightNumber) as OutgoingFlightNumber,
				isnull(BookingExportDisplaySpecialShipment.DateSTD, Flt_OperativeFlight_Legs.DateSTD) as OutgoingScheduledFlightDate,
				isnull(BookingExportDisplaySpecialShipment.DateETD, Flt_OperativeFlight_Legs.DateETD) as OutgoingEstimatedFlightDate,
				isnull(BookingExportDisplaySpecialShipment.DateATD, Flt_OperativeFlight_Legs.DateATD) as OutgoingActualFlightDate,
				isnull(BookingExportDisplaySpecialShipment.FlightOffPoint, Flt_OperativeFlight_Segments.FlightOffPoint) as OutgoingFlightSegment,
				case
					when isnull(BookingExportDisplaySpecialShipment.FlightKey, Flt_OperativeFlight.FlightKey) is not null then
						isnull(BookingExportDisplaySpecialShipment.BookingPieces, BookingIncomingDisplaySpecialShipment.Pieces)
					else
						BookingExportDisplaySpecialShipment.BookingPieces
					end as OutgoingBookingPieces,
				case
					when isnull(BookingExportDisplaySpecialShipment.FlightKey, Flt_OperativeFlight.FlightKey) is not null then
						isnull(BookingExportDisplaySpecialShipment.BookingWeight, BookingIncomingDisplaySpecialShipment.Weight)
					else
						BookingExportDisplaySpecialShipment.BookingWeight
					end as OutgoingBookingPieces,
				BookingExportDisplaySpecialShipment.TransferType,				
				isnull(BookingExportDisplaySpecialShipment.SHC, BookingIncomingDisplaySpecialShipment.SHC) as SHC,
				BookingExportDisplaySpecialShipment.FlightDepartedOn,
				isnull(BookingExportDisplaySpecialShipment.PartSuffix, BookingIncomingDisplaySpecialShipment.PartSuffix) as PartSuffix
			from
				BookingIncomingDisplaySpecialShipment left join
				BookingExportDisplaySpecialShipment
					on BookingIncomingDisplaySpecialShipment.ShipmentNumber = BookingExportDisplaySpecialShipment.ShipmentNumber and
						BookingIncomingDisplaySpecialShipment.ShipmentDate = BookingExportDisplaySpecialShipment.ShipmentDate left join
				Flt_OperativeFlight
					on 	BookingIncomingDisplaySpecialShipment.BookingFlightId = Flt_OperativeFlight.Flight_ID left join
				Flt_OperativeFlight_Segments
					on BookingIncomingDisplaySpecialShipment.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId left join
				Flt_OperativeFlight_Legs
					on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
						Flt_OperativeFlight_Legs.FlightBoardPoint = ?
		)
		SpecialShipments left join
		Shipment_Master
			on SpecialShipments.ShipmentNumber = Shipment_Master.ShipmentNumber and
				SpecialShipments.ShipmentDate = Shipment_Master.ShipmentDate
		where 1=1]]></xml-property>
        </oda-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="crosstab" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab-cell" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="orientation">landscape</property>
        </simple-master-page>
    </page-setup>
    <body>
        <label id="7">
            <property name="fontFamily">"Courier New"</property>
            <property name="fontWeight">bold</property>
            <property name="textAlign">center</property>
            <text-property name="text">DISPLAY SPECIAL SHIPMENT LIST</text-property>
        </label>
        <table id="8">
            <property name="fontFamily">"Courier New"</property>
            <property name="textAlign">center</property>
            <property name="dataSet">Data Set</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">ShipmentNumber</property>
                    <text-property name="displayName">ShipmentNumber</text-property>
                    <expression name="expression" type="javascript">dataSetRow["ShipmentNumber"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Origin</property>
                    <text-property name="displayName">Origin</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Origin"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Destination</property>
                    <text-property name="displayName">Destination</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Destination"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Pieces</property>
                    <text-property name="displayName">Pieces</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Pieces"]</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">Weight</property>
                    <text-property name="displayName">Weight</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Weight"]</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">SHC</property>
                    <text-property name="displayName">SHC</text-property>
                    <expression name="expression" type="javascript">dataSetRow["SHC"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">NatureOfGoodsDescription</property>
                    <text-property name="displayName">NatureOfGoodsDescription</text-property>
                    <expression name="expression" type="javascript">dataSetRow["NatureOfGoodsDescription"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">IncomingFlightKey</property>
                    <text-property name="displayName">IncomingFlightKey</text-property>
                    <expression name="expression" type="javascript">dataSetRow["IncomingFlightKey"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">IncomingEstimatedFlightDate</property>
                    <text-property name="displayName">IncomingEstimatedFlightDate</text-property>
                    <expression name="expression" type="javascript">if(dataSetRow["IncomingScheduledFlightDate"] != null)&#13;
{&#13;
Formatter.format(dataSetRow["IncomingScheduledFlightDate"], 'ddMMMYYYY HH:mm')&#13;
}&#13;
else&#13;
{""}</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">IncomingAcutalFlightDate</property>
                    <text-property name="displayName">IncomingAcutalFlightDate</text-property>
                    <expression name="expression" type="javascript">if(dataSetRow["IncomingAcutalFlightDate"] != null)&#13;
{&#13;
Formatter.format(dataSetRow["IncomingAcutalFlightDate"] , 'ddMMMYYYY HH:mm')&#13;
}&#13;
else&#13;
{""}</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">IncomingManifestPieces</property>
                    <text-property name="displayName">IncomingManifestPieces</text-property>
                    <expression name="expression" type="javascript">dataSetRow["IncomingManifestPieces"]</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">IncomingManifestWeight</property>
                    <text-property name="displayName">IncomingManifestWeight</text-property>
                    <expression name="expression" type="javascript">dataSetRow["IncomingManifestWeight"]</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">IncomingFlightSegment</property>
                    <text-property name="displayName">IncomingFlightSegment</text-property>
                    <expression name="expression" type="javascript">dataSetRow["IncomingFlightSegment"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">OutgoingFlightKey</property>
                    <text-property name="displayName">OutgoingFlightKey</text-property>
                    <expression name="expression" type="javascript">dataSetRow["OutgoingFlightKey"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">OutgoingScheduledFlightDate</property>
                    <text-property name="displayName">OutgoingScheduledFlightDate</text-property>
                    <expression name="expression" type="javascript">if(dataSetRow["OutgoingScheduledFlightDate"] != null)&#13;
{&#13;
Formatter.format(dataSetRow["OutgoingScheduledFlightDate"]  , 'ddMMMYYYY HH:mm')&#13;
}&#13;
else&#13;
{""}</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">OutgoingActualFlightDate</property>
                    <text-property name="displayName">OutgoingActualFlightDate</text-property>
                    <expression name="expression" type="javascript">if(dataSetRow["OutgoingActualFlightDate"] != null)&#13;
{&#13;
Formatter.format(dataSetRow["OutgoingActualFlightDate"] , 'ddMMMYYYY HH:mm')&#13;
}&#13;
else&#13;
{""}</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">OutgoingBookingPieces</property>
                    <text-property name="displayName">OutgoingBookingPieces</text-property>
                    <expression name="expression" type="javascript">dataSetRow["OutgoingBookingPieces"]</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">OutgoingBookingWeight</property>
                    <text-property name="displayName">OutgoingBookingWeight</text-property>
                    <expression name="expression" type="javascript">dataSetRow["OutgoingBookingWeight"]</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">OutgoingFlightSegment</property>
                    <text-property name="displayName">OutgoingFlightSegment</text-property>
                    <expression name="expression" type="javascript">dataSetRow["OutgoingFlightSegment"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TransferType</property>
                    <text-property name="displayName">TransferType</text-property>
                    <expression name="expression" type="javascript">dataSetRow["TransferType"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">ReadyToLoad</property>
                    <text-property name="displayName">ReadyToLoad</text-property>
                    <expression name="expression" type="javascript">if(dataSetRow["ReadyToLoad"] == '1')&#13;
{'Y'}&#13;
else&#13;
{''}</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">DwellTime</property>
                    <text-property name="displayName">DwellTime</text-property>
                    <expression name="expression" type="javascript">dataSetRow["DwellTime"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">PartSuffix</property>
                    <text-property name="displayName">PartSuffix</text-property>
                    <expression name="expression" type="javascript">dataSetRow["PartSuffix"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <column id="81"/>
            <column id="834"/>
            <column id="82"/>
            <column id="83"/>
            <column id="84"/>
            <column id="85"/>
            <column id="86"/>
            <column id="87"/>
            <column id="88"/>
            <column id="89"/>
            <column id="90"/>
            <column id="91"/>
            <column id="92"/>
            <column id="93"/>
            <column id="94"/>
            <column id="95"/>
            <column id="96"/>
            <column id="97"/>
            <column id="98"/>
            <column id="99"/>
            <column id="100"/>
            <column id="101"/>
            <column id="102"/>
            <column id="103"/>
            <header>
                <row id="104">
                    <property name="fontWeight">bold</property>
                    <cell id="105">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="130">
                            <text-property name="text">Shipment Number</text-property>
                        </label>
                    </cell>
                    <cell id="831">
                        <text id="835">
                            <property name="contentType">auto</property>
                            <text-property name="content"><![CDATA[Sfx]]></text-property>
                        </text>
                    </cell>
                    <cell id="106">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="131">
                            <text-property name="text">ORG</text-property>
                        </label>
                    </cell>
                    <cell id="107">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="132">
                            <text-property name="text">DES</text-property>
                        </label>
                    </cell>
                    <cell id="108">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="133">
                            <text-property name="text">Pieces</text-property>
                        </label>
                    </cell>
                    <cell id="109">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="134">
                            <text-property name="text">Weight</text-property>
                        </label>
                    </cell>
                    <cell id="110">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="135">
                            <text-property name="text">SHC</text-property>
                        </label>
                    </cell>
                    <cell id="111">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="136">
                            <text-property name="text">NOG</text-property>
                        </label>
                    </cell>
                    <cell id="112">
                        <property name="colSpan">6</property>
                        <property name="rowSpan">1</property>
                        <label id="137">
                            <text-property name="text">Incoming</text-property>
                        </label>
                    </cell>
                    <cell id="118">
                        <property name="colSpan">6</property>
                        <property name="rowSpan">1</property>
                        <label id="144">
                            <text-property name="text">Outgoing</text-property>
                        </label>
                    </cell>
                    <cell id="124">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="151">
                            <text-property name="text">Ready To Load</text-property>
                        </label>
                    </cell>
                    <cell id="125">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="152">
                            <text-property name="text">Transfer Type</text-property>
                        </label>
                    </cell>
                    <cell id="126">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="153">
                            <text-property name="text">Dwell Time</text-property>
                        </label>
                    </cell>
                    <cell id="127">
                        <property name="colSpan">1</property>
                        <property name="rowSpan">2</property>
                        <label id="154">
                            <text-property name="text">RFID</text-property>
                        </label>
                    </cell>
                </row>
                <row id="9">
                    <property name="fontWeight">bold</property>
                    <cell id="832"/>
                    <cell id="17">
                        <label id="138">
                            <text-property name="text">Flight</text-property>
                        </label>
                    </cell>
                    <cell id="18">
                        <label id="139">
                            <text-property name="text">STA</text-property>
                        </label>
                    </cell>
                    <cell id="19">
                        <label id="140">
                            <text-property name="text">ATA</text-property>
                        </label>
                    </cell>
                    <cell id="20">
                        <label id="141">
                            <text-property name="text">Pieces</text-property>
                        </label>
                    </cell>
                    <cell id="21">
                        <label id="142">
                            <text-property name="text">Weight</text-property>
                        </label>
                    </cell>
                    <cell id="22">
                        <label id="143">
                            <text-property name="text">Incoming Segment</text-property>
                        </label>
                    </cell>
                    <cell id="23">
                        <label id="145">
                            <text-property name="text">Flight</text-property>
                        </label>
                    </cell>
                    <cell id="24">
                        <label id="146">
                            <text-property name="text">STD</text-property>
                        </label>
                    </cell>
                    <cell id="25">
                        <label id="147">
                            <text-property name="text">ATD</text-property>
                        </label>
                    </cell>
                    <cell id="26">
                        <label id="148">
                            <text-property name="text">Pieces</text-property>
                        </label>
                    </cell>
                    <cell id="27">
                        <label id="149">
                            <text-property name="text">Weight</text-property>
                        </label>
                    </cell>
                    <cell id="28">
                        <label id="150">
                            <text-property name="text">Outgoing Segment</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="33">
                    <cell id="34">
                        <data id="160">
                            <property name="resultSetColumn">ShipmentNumber</property>
                        </data>
                    </cell>
                    <cell id="833">
                        <data id="836">
                            <property name="resultSetColumn">PartSuffix</property>
                        </data>
                    </cell>
                    <cell id="35">
                        <data id="810">
                            <property name="resultSetColumn">Origin</property>
                        </data>
                    </cell>
                    <cell id="36">
                        <data id="811">
                            <property name="resultSetColumn">Destination</property>
                        </data>
                    </cell>
                    <cell id="37">
                        <data id="812">
                            <property name="resultSetColumn">Pieces</property>
                        </data>
                    </cell>
                    <cell id="38">
                        <data id="813">
                            <property name="resultSetColumn">Weight</property>
                        </data>
                    </cell>
                    <cell id="39">
                        <data id="814">
                            <property name="resultSetColumn">SHC</property>
                        </data>
                    </cell>
                    <cell id="40">
                        <data id="815">
                            <property name="resultSetColumn">NatureOfGoodsDescription</property>
                        </data>
                    </cell>
                    <cell id="41">
                        <data id="816">
                            <property name="resultSetColumn">IncomingFlightKey</property>
                        </data>
                    </cell>
                    <cell id="42">
                        <data id="817">
                            <property name="resultSetColumn">IncomingEstimatedFlightDate</property>
                        </data>
                    </cell>
                    <cell id="43">
                        <data id="818">
                            <property name="resultSetColumn">IncomingAcutalFlightDate</property>
                        </data>
                    </cell>
                    <cell id="44">
                        <data id="819">
                            <property name="resultSetColumn">IncomingManifestPieces</property>
                        </data>
                    </cell>
                    <cell id="45">
                        <data id="820">
                            <property name="resultSetColumn">IncomingManifestWeight</property>
                        </data>
                    </cell>
                    <cell id="46">
                        <data id="821">
                            <property name="resultSetColumn">IncomingFlightSegment</property>
                        </data>
                    </cell>
                    <cell id="47">
                        <data id="822">
                            <property name="resultSetColumn">OutgoingFlightKey</property>
                        </data>
                    </cell>
                    <cell id="48">
                        <data id="823">
                            <property name="resultSetColumn">OutgoingScheduledFlightDate</property>
                        </data>
                    </cell>
                    <cell id="49">
                        <data id="824">
                            <property name="resultSetColumn">OutgoingActualFlightDate</property>
                        </data>
                    </cell>
                    <cell id="50">
                        <data id="825">
                            <property name="resultSetColumn">OutgoingBookingPieces</property>
                        </data>
                    </cell>
                    <cell id="51">
                        <data id="826">
                            <property name="resultSetColumn">OutgoingBookingWeight</property>
                        </data>
                    </cell>
                    <cell id="52">
                        <data id="827">
                            <property name="resultSetColumn">OutgoingFlightSegment</property>
                        </data>
                    </cell>
                    <cell id="53">
                        <data id="829">
                            <property name="resultSetColumn">ReadyToLoad</property>
                        </data>
                    </cell>
                    <cell id="54">
                        <data id="828">
                            <property name="resultSetColumn">TransferType</property>
                        </data>
                    </cell>
                    <cell id="55">
                        <data id="830">
                            <property name="resultSetColumn">DwellTime</property>
                        </data>
                    </cell>
                    <cell id="56"/>
                </row>
            </detail>
        </table>
    </body>
</report>
