<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ShipmentInfoMapper">

	<select id="sqlGetShipmentMasterShipmentType"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoSearchReq"
		resultType="java.lang.String">
		select 
			TOP 1 ShipmentType 
		from
			Shipment_Master
		where
			ShipmentNumber = #{shipmentNumber} and
			ShipmentDate = #{shipmentDate}
	</select>	
	<select id="sqlCheckCancelShipmentRemarks"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoSearchReq" 
		resultType="java.lang.Boolean">
		      select 
			     case 
				when count(1) > 0 then
					1
				else
					0
				end 
				  from 
				    shipment_remarks 
				  where 
				     shipmentnumber= #{shipmentNumber} and 
				     ShipmentDate=#{shipmentDate} and
				     remarktype='CAN'
		
	</select>
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentInfoMessageModel" 
		id="MessagesResultMap">
		<result column="SubMessageType" property="messageType"></result>
		<result column="Message" property="message"></result>
		<result column="SentOn" property="messageSentOn"  javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"></result>
	</resultMap>
	
	
	<select id="sqlGetMessagesInformation" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
			resultMap="MessagesResultMap">
		select
			*
		from(	
			select 					
				Interface_OutgoingMessageLog.SubMessageType + ' (' + Interface_OutgoingMessageLog.InterfacingSystem + ')' as SubMessageType,
				Interface_OutgoingMessageLog.Message,
				AcknowledgementReceivedOn as SentOn
			from 
				Interface_OutgoingMessageLog 
			where 
				Interface_OutgoingMessageLog.ShipmentNumber = #{shipmentNumber} and
				Interface_OutgoingMessageLog.ShipmentDate = #{shipmentDate} and
				Interface_OutgoingMessageLog.MessageType = #{messageType} and
				(upper(Interface_OutgoingMessageLog.Status) = 'SENT' or Interface_OutgoingMessageLog.Status = '' or Interface_OutgoingMessageLog.Status is null)
			union
			select 
				Interface_IncomingMessageLog.SubMessageType + ' (' + Interface_IncomingMessageLog.InterfacingSystem + ')' as SubMessageType,
				Interface_IncomingMessageLog.Message,
				Interface_IncomingMessageLog.ReceivedOn as SentOn
			from 
				Interface_IncomingMessageLog 
			where 
				Interface_IncomingMessageLog.ShipmentNumber = #{shipmentNumber} and
				Interface_IncomingMessageLog.ShipmentDate = #{shipmentDate} and
				Interface_IncomingMessageLog.MessageType = #{messageType} and
				Interface_IncomingMessageLog.Status = 'PROCESSED'
		)FSUMessageInfo
		order by
			FSUMessageInfo.SentOn desc
 	</select>
	

	<select id="sqlDeriveShipmentProcessType"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoSearchReq"
		resultType="java.lang.String">
		select
			case
				when (Origin not in (#{tenantAirport}, #{tenantCity}) and Destination not in (#{tenantAirport}, #{tenantCity})) then
					'TRANSHIPMENT'
				when (Origin in (#{tenantAirport}, #{tenantCity}) and Destination not in (#{tenantAirport}, #{tenantCity})) then
					'EXPORT'
				when (Origin not in (#{tenantAirport}, #{tenantCity}) and Destination in (#{tenantAirport}, #{tenantCity})) then
					'IMPORT'
			end result
		from
			Shipment_Master
		where
			ShipmentNumber = #{shipmentNumber} and
			ShipmentDate = #{shipmentDate}
		union
		select
			case
				when (Origin not in (#{tenantAirport}, #{tenantCity}) and Destination not in (#{tenantAirport}, #{tenantCity})) then
					'TRANSHIPMENT'
				when (Origin in (#{tenantAirport}, #{tenantCity}) and Destination not in (#{tenantAirport}, #{tenantCity})) then
					'EXPORT'
				when (Origin not in (#{tenantAirport}, #{tenantCity}) and Destination in (#{tenantAirport}, #{tenantCity})) then
					'IMPORT'
			end result
		from
			Shipment_FreightWayBill
		where
			AwbNumber = #{shipmentNumber}
			AwbDate = #{shipmentDate} and not exists(
				select 
					null
				from
					Shipment_Master
				where
					Shipment_Master.ShipmentNumber = Shipment_FreightWayBill.AwbNumber and
					Shipment_Master.ShipmentDate = Shipment_FreightWayBill.AwbDate
			)
		union
		select
			case
				when (Origin not in (#{tenantAirport}, #{tenantCity}) and Destination not in (#{tenantAirport}, #{tenantCity})) then
					'TRANSHIPMENT'
				when (Origin in (#{tenantAirport}, #{tenantCity}) and Destination not in (#{tenantAirport}, #{tenantCity})) then
					'EXPORT'
				when (Origin not in (#{tenantAirport}, #{tenantCity}) and Destination in (#{tenantAirport}, #{tenantCity})) then
					'IMPORT'
			end result
		from
			Exp_ShipmentBooking
		where
			ShipmentNumber = #{shipmentNumber} and
			ShipmentDate = #{shipmentDate} and not exists(
				select 
					null
				from
					Shipment_FreightWayBill
				where
					Shipment_FreightWayBill.AwbNumber = Exp_ShipmentBooking.ShipmentNumber and
					Shipment_FreightWayBill.AwbDate = Exp_ShipmentBooking.ShipmentDate
			)
	</select>


	<!-- Shipment Info start -->
	<select id="sqlGetShipmentInfo"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoSearchReq"
		resultMap="ShipmentInfoResultMap">
		<![CDATA[
			select 
				case
					when (Shipment_Master.Origin not in (#{tenantAirport}, #{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport}, #{tenantCity})
							and Exp_eAcceptanceDocumentInformation.ShipmentNumber is null) then
						'TRANSHIPMENT'
					when ((select 
								count(1)
							from
								Exp_eAcceptanceDocumentInformation innerDocumentInformation
							where 
								innerDocumentInformation.ShipmentNumber =  Shipment_Master.ShipmentNumber and
								innerDocumentInformation.ShipmentDate = Shipment_Master.ShipmentDate) > 0 OR
							 (Shipment_Master.Origin in (#{tenantAirport}, #{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport}, #{tenantCity}))) then
						'EXPORT'
					when (Shipment_Master.Origin not in (#{tenantAirport}, #{tenantCity}) and Shipment_Master.Destination in (#{tenantAirport}, #{tenantCity})) then
						'IMPORT'
					end process,
				Shipment_Master.ShipmentId,
				Shipment_Master.ShipmentNumber,
				Shipment_Master.ShipmentDate,
				Shipment_Master.ShipmentType,
				Shipment_Master.Origin,
				Shipment_Master.Destination,
				Shipment_Master.Pieces,
				Shipment_Master.Weight,
				isnull(Shipment_Master.totalVolume,0.0) totalVolume,
				isnull(Shipment_Master.totalVolumetricWeight,0.0) totalVolumetricWeight,
				isnull(Exp_eAcceptanceDocumentInformation.BondedTruck, case when (Select count(1) from Customs_ExportShipment sbInfo
					 where  sbInfo.shipmentNumber = Shipment_Master.shipmentNumber 
					 		and sbInfo.ShipmentDate = Shipment_Master.ShipmentDate 
					 		and isnull(BondedTruckerFlag,0) = 1 )>0 then 1 else 0 end) isBondedTruck,
				Shipment_Master.NatureOfGoodsDescription,
				Shipment_Master.PartShipment,
				Shipment_Master.Console,
				Shipment_Master.Locked,
				Shipment_Master.DocumentReceivedOn,
				Shipment_Master.CancelledOn,
				Shipment_Master.Abandoned,
				Shipment_Master.SVC,
				Shipment_Master.HandledByMasterHouse,
				Shipment_Master.ChargeableWeight,
				Exp_eAcceptanceDocumentInformation.GrossWeight,
				Exp_eAcceptanceDocumentInformation.ActualPieces,
				case
					when (Shipment_Master.DocumentPouchReceivedOn is not null) then
						1
					else
						0
					end DocumentPouchReceived,
				case
					when (select
								count(1)
							from
								Shipment_FreightWayBill
							where
								Shipment_FreightWayBill.ReceivedManuallyFlag = 1 and
								Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
								Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate)  > 0 then
						1
					else
						0
					end FreightWayBillReceivedManually,
				case
					when (select
								count(*)
							from Com_UploadedDocumentStore where EntityType = 'POUCH' and entityKey = #{shipmentNumber})  > 0 then
						'Y'
					else
						'N'
					end epouchUpload,
				case
					when (select
								count(1)
							from
								Shipment_FreightWayBill
							where
								(Shipment_FreightWayBill.ReceivedManuallyFlag = 0 OR  
									Shipment_FreightWayBill.ReceivedManuallyFlag is null)and
								Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
								Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate) > 0 then
						1
					else
						0
					end FreightWayBillReceivedFromExternal,
				case
					when (select
								count(1)
							from
								Shipment_FreightHouseListByAWB inner join
								Shipment_FreightHouseListByHAWB
									on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
							where
								(Shipment_FreightHouseListByHAWB.ReceivedManually = 1)and
								Shipment_FreightHouseListByAWB.AwbNumber = Shipment_Master.ShipmentNumber and
								Shipment_FreightHouseListByAWB.AwbDate = Shipment_Master.ShipmentDate) > 0 then
						1
					else
						0
					end FreightHouseReceivedManually,
				case 
					when (select
								count(1)
							from
								Shipment_FreightHouseListByAWB inner join
								Shipment_FreightHouseListByHAWB
									on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
							where
								(Shipment_FreightHouseListByHAWB.ReceivedManually = 0 OR 
									Shipment_FreightHouseListByHAWB.ReceivedManually is null)and
								Shipment_FreightHouseListByAWB.AwbNumber = Shipment_Master.ShipmentNumber and
								Shipment_FreightHouseListByAWB.AwbDate = Shipment_Master.ShipmentDate) > 0 then
						1
					else
						0
					end FreightHouseReceivedFromExternal, 
				(select
						string_agg(SHCInfo.SpecialHandlingCode, ' ')
					from(
						select
							Shipment_MasterSHC.SpecialHandlingCode
						from
							Shipment_MasterSHC
						where
							Shipment_MasterSHC.ShipmentId = Shipment_Master.ShipmentId						
					)SHCInfo
				) as shcs,
				
				(select
						TOP 1 ShipmentType
					from
						Shipment_HouseInformation
					where
						Shipment_HouseInformation.ShipmentId = Shipment_Master.ShipmentId) ShipmentType, 
				(select
						count(1)
					from
						Shipment_HouseInformation
					where
						Shipment_HouseInformation.ShipmentId = Shipment_Master.ShipmentId) houseCount,
				isnull((select
							TOP 1 Shipment_FreightWayBillRateDescriptionOtherInfo.SLACCount
						from
							Shipment_FreightWayBill inner join
							Shipment_FreightWayBillRateDescription
								on Shipment_FreightWayBill.ShipmentFreightWayBillId = Shipment_FreightWayBillRateDescription.ShipmentFreightWayBillId inner join
							Shipment_FreightWayBillRateDescriptionOtherInfo
								on Shipment_FreightWayBillRateDescription.ShipmentFreightWayBillRateDescriptionId = Shipment_FreightWayBillRateDescriptionOtherInfo.ShipmentFreightWayBillRateDescriptionId
						where
							Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
							Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate and
							Shipment_FreightWayBillRateDescriptionOtherInfo.LineIdentifier = 'NS'),
						(select
							sum(Shipment_FreightHouseListByHAWB.SLAC)
						from
							Shipment_FreightHouseListByAWB inner join
							Shipment_FreightHouseListByHAWB
								on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
						where
							Shipment_FreightHouseListByAWB.AwbNumber = Shipment_Master.ShipmentNumber and
							Shipment_FreightHouseListByAWB.AwbDate = Shipment_Master.ShipmentDate)) slacPieces,
				CASE WHEN Shipment_Master.Origin in (#{tenantAirport}, #{tenantCity})
					THEN 
						CASE WHEN(
						SELECT COUNT(*) FROM Com_CargoProcessingEngineCheckShipmentSuccess
								INNER JOIN 						
								Com_CargoProcessingEngineProcessArea
								ON Com_CargoProcessingEngineProcessArea.ComCargoProcessingEngineProcessAreaId = Com_CargoProcessingEngineCheckShipmentSuccess.ComCargoProcessingEngineProcessAreaId
								AND Com_CargoProcessingEngineProcessArea.ProcessAreaCode = 'EAWB'
								WHERE 
								Com_CargoProcessingEngineCheckShipmentSuccess.ShipmentNumber = Shipment_Master.ShipmentNumber
								AND 
								Com_CargoProcessingEngineCheckShipmentSuccess.ShipmentDate = Shipment_Master.ShipmentDate
						) > 0 then 1 else 0 END	
					ELSE 
						CASE
							WHEN(EAWShipmentInfo.eawCount) > 0 then
									1
							else
								0 END
				END as EAWShipment,
				case
					when(Shipment_ReuseInfo.reuseCount) > 0 then
						1
					else
						0
					end reuseShipment, 
				case
					when (Shipment_Master.Origin not in (#{tenantAirport}, #{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport}, #{tenantCity})
							and Exp_eAcceptanceDocumentInformation.ShipmentNumber is null) then
						''
					else	
						isnull((
							select
								Shipment_MasterCustomerInfo.CustomerCode + ' - ' + Shipment_MasterCustomerInfo.CustomerName
							from
								Shipment_MasterCustomerInfo
							where	
								Shipment_MasterCustomerInfo.CustomerType = 'AGT' and
								Shipment_MasterCustomerInfo.ShipmentId = Shipment_Master.ShipmentId
						),(select 
								case 
									when Shipment_MasterCustomerInfo.AppointedAgent is not null then
										Customer_Master.CustomerCode + ' - ' + Customer_Master.CustomerShortName									
								end
							from
								Shipment_MasterCustomerInfo left join
								Customer_Master
									on Shipment_MasterCustomerInfo.AppointedAgent = Customer_Master.Customer_ID
							where
								Shipment_MasterCustomerInfo.CustomerType = 'CNE' and
								Shipment_MasterCustomerInfo.ShipmentId = Shipment_Master.ShipmentId))
						end as CustomerCode,
						case
					when (Shipment_Master.Origin not in (#{tenantAirport}, #{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport}, #{tenantCity})
							and Exp_eAcceptanceDocumentInformation.ShipmentNumber is null) then
						''
					else	
						isnull((
							select
								Shipment_MasterCustomerInfo.CustomerCode
							from
								Shipment_MasterCustomerInfo
							where	
								Shipment_MasterCustomerInfo.CustomerType = 'AGT' and
								Shipment_MasterCustomerInfo.ShipmentId = Shipment_Master.ShipmentId
						),(select 
								case 
									when Shipment_MasterCustomerInfo.AppointedAgent is not null then
										Customer_Master.CustomerCode
								end
							from
								Shipment_MasterCustomerInfo left join
								Customer_Master
									on Shipment_MasterCustomerInfo.AppointedAgent = Customer_Master.Customer_ID
							where
								Shipment_MasterCustomerInfo.CustomerType = 'CNE' and
								Shipment_MasterCustomerInfo.ShipmentId = Shipment_Master.ShipmentId))
						end as agentCode,
						case
					when (Shipment_Master.Origin not in (#{tenantAirport}, #{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport}, #{tenantCity})
							and Exp_eAcceptanceDocumentInformation.ShipmentNumber is null) then
						''
					else	
						isnull((
							select
								Shipment_MasterCustomerInfo.CustomerName
							from
								Shipment_MasterCustomerInfo
							where	
								Shipment_MasterCustomerInfo.CustomerType = 'AGT' and
								Shipment_MasterCustomerInfo.ShipmentId = Shipment_Master.ShipmentId
						),(select 
								case 
									when Shipment_MasterCustomerInfo.AppointedAgent is not null then
										Customer_Master.CustomerShortName
								end
							from
								Shipment_MasterCustomerInfo left join
								Customer_Master
									on Shipment_MasterCustomerInfo.AppointedAgent = Customer_Master.Customer_ID
							where
								Shipment_MasterCustomerInfo.CustomerType = 'CNE' and
								Shipment_MasterCustomerInfo.ShipmentId = Shipment_Master.ShipmentId))
						end as agentName,
						case
					when (Shipment_Master.Origin not in (#{tenantAirport}, #{tenantCity}) and Shipment_Master.Destination not in (#{tenantAirport}, #{tenantCity})
							and Exp_eAcceptanceDocumentInformation.ShipmentNumber is null) then
						null
					else	
						isnull((
							select
								Customer_Master.Customer_ID
							from
								Shipment_MasterCustomerInfo left join
								Customer_Master
									on Shipment_MasterCustomerInfo.AppointedAgent = Customer_Master.Customer_ID
							where	
								Shipment_MasterCustomerInfo.CustomerType = 'AGT' and
								Shipment_MasterCustomerInfo.ShipmentId = Shipment_Master.ShipmentId
						),(select 
								case 
									when Shipment_MasterCustomerInfo.AppointedAgent is not null then
										Customer_Master.Customer_ID 
									else
										null
								end
							from
								Shipment_MasterCustomerInfo left join
								Customer_Master
									on Shipment_MasterCustomerInfo.AppointedAgent = Customer_Master.Customer_ID
							where
								Shipment_MasterCustomerInfo.CustomerType = 'CNE' and
								Shipment_MasterCustomerInfo.ShipmentId = Shipment_Master.ShipmentId))
						end as customerId,
				isnull(Exp_eAcceptanceDocumentInformation.RCARStatus, Shipment_Master.RCARStatus) as RCARStatus,
				Shipment_OtherChargeInfo.CollectBankEndorsementClearanceLetter,
				case 
					when (select 
								count(1) 
							from 
								Interface_OutgoingMessageLog 
							where
								Interface_OutgoingMessageLog.ShipmentNumber = Shipment_Master.ShipmentNumber and
								Interface_OutgoingMessageLog.ShipmentDate = Shipment_Master.ShipmentDate and
								Interface_OutgoingMessageLog.MessageType ='FSU' and
								(Interface_OutgoingMessageLog.Status = 'SENT' Or Interface_OutgoingMessageLog.Status = '' Or Interface_OutgoingMessageLog.Status is null)
					) > 0 then
						1
					else
						0
					end FSUMessageSent,
				(
					select 
						count(1) 
					from 
						Com_UploadedDocumentStore 
					where EntityKey = Shipment_Master.ShipmentNumber
				) UploadedDocumentsCount,
				( select top(1) uploadedDocId 
				FROM Com_UploadedDocumentStore
				where EntityKey = Shipment_Master.ShipmentNumber
			    order by createdDateTime desc
				)uploadedDocId,
				(
					select
						TOP 1
						ReleasedBy
					from
						Imp_ShipmentVerification
					where
						Imp_ShipmentVerification.ShipmentId = Shipment_Master.ShipmentId
				)releasedBy,
				(
					select
						TOP 1
						ReleasedOn
					from
						Imp_ShipmentVerification
					where
						Imp_ShipmentVerification.ShipmentId = Shipment_Master.ShipmentId
				)releasedOn,
				(
					select
						TOP 1
						CheckList
					from
						Imp_ShipmentVerification
					where
						Imp_ShipmentVerification.ShipmentId = Shipment_Master.ShipmentId
				)CheckList,
				(select
					Shipment_Master.Origin + '/' + string_agg(isnull(SHipment_MasterRoutingInfo.Carrier,'') + '/' + 
						Shipment_MasterRoutingInfo.FromPoint, '/') 
					from(
						select 
							TOP 100 SHipment_MasterRoutingInfo.Carrier,
							Shipment_MasterRoutingInfo.FromPoint
						from 
							Shipment_MasterRoutingInfo 
						where 
							ShipmentId = Shipment_Master.ShipmentId
						order by
							Shipment_MasterRoutingInfo.ShipmentMasterRoutingId
					)Shipment_MasterRoutingInfo
				) as RoutingInfo			
			from
				Shipment_Master left join
				( 
					select 
						Shipment_MasterSHC.ShipmentId, 
						count(Shipment_MasterSHC.ShipmentMasterSHCId) eawCount
					from
						Shipment_MasterSHC inner join 
						Mst_AssociateSHCByHandlingGroup 
							on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join 
							Mst_SHCHandlingGroup 
								on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
					where
						Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' group by Shipment_MasterSHC.ShipmentId
				)EAWShipmentInfo 
					on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
				( 
					select 
						Shipment_Reuse.AwbNumber, 
						count(Shipment_Reuse.AwbNumber) reuseCount
					from
						Shipment_Reuse 
					group by 
						Shipment_Reuse.AwbNumber
				)Shipment_ReuseInfo
					on Shipment_Master.ShipmentNumber = Shipment_ReuseInfo.AwbNumber left join
				Shipment_OtherChargeInfo
					on Shipment_Master.ShipmentId = Shipment_OtherChargeInfo.ShipmentId left join
				(select
						SUM(Exp_eAcceptanceDocumentInformation.GrossWeight - 
							(isnull(Exp_eAcceptanceDocumentInformation.TareWeight, 0) * case when isnull(Exp_eAcceptanceDocumentInformation.NumberOfSkIds,0) > 0 then Exp_eAcceptanceDocumentInformation.NumberOfSkIds else 1 end)) GrossWeight,
						SUM(Exp_eAcceptanceDocumentInformation.Pieces) ActualPieces,
						Exp_eAcceptanceDocumentInformation.ShipmentNumber,
						Exp_eAcceptanceDocumentInformation.ShipmentDate,
						Exp_eAcceptanceDocumentInformation.RCARStatus,
						Exp_eAcceptanceDocumentInformation.BondedTruck
					from(
						select 
							case	
								when Exp_eAcceptanceDocumentInformation.Status = 'REJECTED' then
									0
								else 
									Exp_eAcceptanceWeighing.GrossWeight
								end as GrossWeight,
							case	
								when Exp_eAcceptanceDocumentInformation.Status = 'REJECTED' then
									0
								else
									Exp_eAcceptanceWeighing.TareWeight
								end as TareWeight,
							case	
								when Exp_eAcceptanceDocumentInformation.Status = 'REJECTED' then
									0
								else
									Exp_eAcceptanceWeighing.NumberOfSkIds
								end as NumberOfSkIds,
							case	
								when Exp_eAcceptanceDocumentInformation.Status = 'REJECTED' then
									0
								else
									Exp_eAcceptanceWeighing.Pieces
								end as Pieces,
							Exp_eAcceptanceDocumentInformation.ShipmentNumber,
							Exp_eAcceptanceDocumentInformation.ShipmentDate,
							Exp_eAcceptanceDocumentInformation.RCARStatus,
							Exp_eAcceptanceDocumentInformation.BondedTruck
						from
							Exp_eAcceptanceDocumentInformation inner join
							Exp_eAcceptanceWeighing
								on Exp_eAcceptanceWeighing.DocumentInformationId = Exp_eAcceptanceDocumentInformation.DocumentInformationId
						WHERE 
							Exp_eAcceptanceDocumentInformation.ShipmentNumber = #{shipmentNumber} and
							Exp_eAcceptanceDocumentInformation.ShipmentDate = #{shipmentDate}
					)Exp_eAcceptanceDocumentInformation
					group by
						Exp_eAcceptanceDocumentInformation.ShipmentNumber,
						Exp_eAcceptanceDocumentInformation.ShipmentDate,
						Exp_eAcceptanceDocumentInformation.RCARStatus,
						Exp_eAcceptanceDocumentInformation.BondedTruck
				) Exp_eAcceptanceDocumentInformation
					on Exp_eAcceptanceDocumentInformation.ShipmentNumber = Shipment_Master.ShipmentNumber and
					Exp_eAcceptanceDocumentInformation.ShipmentDate = Shipment_Master.ShipmentDate
			where 
				Shipment_Master.ShipmentNumber = #{shipmentNumber} and
				Shipment_Master.ShipmentDate = #{shipmentDate} and
				Shipment_Master.ShipmentType = #{shipmentType}			
		]]>
	</select>
	
	<select id="sqlGetFWBShipmentInfo"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoSearchReq"
		resultMap="ShipmentInfoResultMap">
	<![CDATA[
		select 
			case
				when (Shipment_FreightWayBill.Origin not in (#{tenantAirport}, #{tenantCity}) and Shipment_FreightWayBill.Destination not in (#{tenantAirport}, #{tenantCity})) then
					'TRANSHIPMENT'
				when (Shipment_FreightWayBill.Origin in (#{tenantAirport}, #{tenantCity}) and Shipment_FreightWayBill.Destination not in (#{tenantAirport}, #{tenantCity})) then
					'EXPORT'
				when (Shipment_FreightWayBill.Origin not in (#{tenantAirport}, #{tenantCity}) and Shipment_FreightWayBill.Destination in (#{tenantAirport}, #{tenantCity})) then
					'IMPORT'
				end process,
			Shipment_FreightWayBill.AwbNumber as ShipmentNumber,
			Shipment_FreightWayBill.AwbDate as ShipmentDate,
			'AWB' as ShipmentType,
			Shipment_FreightWayBill.Origin,
			Shipment_FreightWayBill.Destination,
			Shipment_FreightWayBill.Pieces,
			Shipment_FreightWayBill.Weight,
			Shipment_FreightWayBill.NatureOfGoodsDescription,	
			case
				when Shipment_FreightWayBill.ReceivedManuallyFlag  > 0 then
					1
				else
					0
				end FreightWayBillReceivedManually,
			case
				when Shipment_FreightWayBill.ReceivedManuallyFlag  = 0 then
					1
				else
					0
				end FreightWayBillReceivedFromExternal,
			case
				when (select
							count(1)
						from
							Shipment_FreightHouseListByAWB inner join
							Shipment_FreightHouseListByHAWB
								on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
						where
							(Shipment_FreightHouseListByHAWB.ReceivedManually = 1)and
							Shipment_FreightHouseListByAWB.AwbNumber = Shipment_FreightWayBill.AwbNumber and
							Shipment_FreightHouseListByAWB.AwbDate = Shipment_FreightWayBill.AwbDate) > 0 then
					1
				else
					0
				end FreightHouseReceivedManually,
			case 
				when (select
							count(1)
						from
							Shipment_FreightHouseListByAWB inner join
							Shipment_FreightHouseListByHAWB
								on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
						where
							(Shipment_FreightHouseListByHAWB.ReceivedManually = 0 OR 
								Shipment_FreightHouseListByHAWB.ReceivedManually is null)and
							Shipment_FreightHouseListByAWB.AwbNumber = Shipment_FreightWayBill.AwbNumber and
							Shipment_FreightHouseListByAWB.AwbDate = Shipment_FreightWayBill.AwbDate) > 0 then
					1
				else
					0
				end FreightHouseReceivedFromExternal, 
			(select
					string_agg(SHCInfo.SpecialHandlingCode,' ')
				from(
					select
						Shipment_FreightWayBillSHC.SpecialHandlingCode
					from
						Shipment_FreightWayBillSHC
					where
						Shipment_FreightWayBillSHC.ShipmentFreightWayBillId = Shipment_FreightWayBill.ShipmentFreightWayBillId
					union
					select
						Exp_ShipmentFlightBookingDetailSHC.SpecialHandlingCode
					from
						Exp_ShipmentBooking inner join
						Exp_ShipmentFlightBookingDetail	
							on Exp_ShipmentBooking.BookingId = Exp_ShipmentFlightBookingDetail.BookingId inner join
						Exp_ShipmentFlightBookingDetailSHC
							on Exp_ShipmentFlightBookingDetail.FlightBookingId = Exp_ShipmentFlightBookingDetailSHC.FlightBookingId
					where
						Exp_ShipmentBooking.ShipmentNumber = Shipment_FreightWayBill.AwbNumber and
						Exp_ShipmentBooking.ShipmentDate = Shipment_FreightWayBill.AwbDate and
						Exp_ShipmentFlightBookingDetail.BookingStatusCode <> 'XX'
				) SHCInfo
			)shcs,
			isnull((select
					TOP 1 Shipment_FreightWayBillRateDescriptionOtherInfo.SLACCount
				from
					Shipment_FreightWayBillRateDescription inner join
					Shipment_FreightWayBillRateDescriptionOtherInfo
						on Shipment_FreightWayBillRateDescription.ShipmentFreightWayBillRateDescriptionId = Shipment_FreightWayBillRateDescriptionOtherInfo.ShipmentFreightWayBillRateDescriptionId
				where
					Shipment_FreightWayBillRateDescription.ShipmentFreightWayBillId = Shipment_FreightWayBill.ShipmentFreightWayBillId and
					Shipment_FreightWayBillRateDescriptionOtherInfo.LineIdentifier = 'NS'), 
					(select
						sum(Shipment_FreightHouseListByHAWB.SLAC)
					from
						Shipment_FreightHouseListByAWB inner join
						Shipment_FreightHouseListByHAWB
							on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
					where
						Shipment_FreightHouseListByAWB.AwbNumber = Shipment_FreightWayBill.AwbNumber and
						Shipment_FreightHouseListByAWB.AwbDate = Shipment_FreightWayBill.AwbDate)) slacPieces,
			CASE WHEN Shipment_FreightWayBill.Origin in (#{tenantAirport}, #{tenantCity})
					THEN 
						CASE WHEN(
						SELECT COUNT(*) FROM Com_CargoProcessingEngineCheckShipmentSuccess
								INNER JOIN 						
								Com_CargoProcessingEngineProcessArea
								ON Com_CargoProcessingEngineProcessArea.ComCargoProcessingEngineProcessAreaId = Com_CargoProcessingEngineCheckShipmentSuccess.ComCargoProcessingEngineProcessAreaId
								AND Com_CargoProcessingEngineProcessArea.ProcessAreaCode = 'EAWB'
								WHERE 
								Com_CargoProcessingEngineCheckShipmentSuccess.ShipmentNumber = Shipment_FreightWayBill.AwbNumber AND 
								Com_CargoProcessingEngineCheckShipmentSuccess.ShipmentDate = Shipment_FreightWayBill.AwbDate
						) > 0 then 1 else 0 END	
					ELSE 
						CASE
							WHEN(EAWShipmentInfo.eawCount) > 0 then
						1
				else
								0 END
				END as EAWShipment,
			isnull((
				select
					Shipment_FreightWayBillAgentInfo.AgentName
				from
					Shipment_FreightWayBillAgentInfo
				where	
					Shipment_FreightWayBillAgentInfo.ShipmentFreightWayBillId = Shipment_FreightWayBill.ShipmentFreightWayBillId
			),(select 
					Shipment_FreightWayBillCustomerInfo.CustomerName
				from
					Shipment_FreightWayBillCustomerInfo
				where
					Shipment_FreightWayBillCustomerInfo.CustomerType = 'CNE' and
					Shipment_FreightWayBillCustomerInfo.ShipmentFreightWayBillId = Shipment_FreightWayBill.ShipmentFreightWayBillId)) as CustomerCode
		from
			Shipment_FreightWayBill left join
			( 
				select 
					Shipment_FreightWayBillSHC.ShipmentFreightWayBillId, 
					count(Shipment_FreightWayBillSHC.ShipmentFreightWayBillSHCId) eawCount
				from
					Shipment_FreightWayBillSHC inner join 
					Mst_AssociateSHCByHandlingGroup 
						on Shipment_FreightWayBillSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join 
						Mst_SHCHandlingGroup 
							on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
				where
					Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' 
				group by 
					Shipment_FreightWayBillSHC.ShipmentFreightWayBillId
			)EAWShipmentInfo 
				on Shipment_FreightWayBill.ShipmentFreightWayBillId = EAWShipmentInfo.ShipmentFreightWayBillId
		where 
			Shipment_FreightWayBill.AwbNumber = #{shipmentNumber} and
			Shipment_FreightWayBill.AwbDate = #{shipmentDate}
	]]>
	</select>		

	<select id="sqlGetBookingShipmentInfo"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoSearchReq"
		resultMap="ShipmentInfoResultMap">
	<![CDATA[
		select 
			case
				when (Exp_ShipmentBooking.Origin not in (#{tenantAirport}, #{tenantCity}) and Exp_ShipmentBooking.Destination not in (#{tenantAirport}, #{tenantCity})) then
					'TRANSHIPMENT'
				when (Exp_ShipmentBooking.Origin in (#{tenantAirport}, #{tenantCity}) and Exp_ShipmentBooking.Destination not in (#{tenantAirport}, #{tenantCity})) then
					'EXPORT'
				when (Exp_ShipmentBooking.Origin not in (#{tenantAirport}, #{tenantCity}) and Exp_ShipmentBooking.Destination in (#{tenantAirport}, #{tenantCity})) then
					'IMPORT'
				end process,
			Exp_ShipmentBooking.ShipmentNumber,
			Exp_ShipmentBooking.ShipmentDate,
			'AWB' as ShipmentType,
			Exp_ShipmentBooking.Origin,
			Exp_ShipmentBooking.Destination,
			Exp_ShipmentBooking.Pieces,
			Exp_ShipmentBooking.GrossWeight as Weight,
			Exp_ShipmentBooking.NatureOfGoodsDescription,
			Exp_ShipmentBooking.ServiceFlag as SVC,
			(select	
					TOP 1 substring(ShipmentRemarks,  len('AGT-') + 1, 3)
				from 
					Shipment_Remarks  
				where  
					Shipment_Remarks.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
					Shipment_Remarks.ShipmentDate = Exp_ShipmentBooking.ShipmentDate and 
					ShipmentRemarks like 'AGT-%') as CustomerCode,
			(
				select
					string_agg(BookingSHC.SpecialHandlingCode, ' ') shcs
				from(select
						distinct Exp_ShipmentFlightBookingDetailSHC.SpecialHandlingCode
					from
						Exp_ShipmentFlightBookingDetail inner join 
						Exp_ShipmentFlightBookingDetailSHC
							on Exp_ShipmentFlightBookingDetail.FlightBookingId = Exp_ShipmentFlightBookingDetailSHC.FlightBookingId
					where
						Exp_ShipmentFlightBookingDetail.FlightBoardPoint = #{tenantAirport} and
						Exp_ShipmentFlightBookingDetail.BookingId = Exp_ShipmentBooking.BookingId) BookingSHC
			) shcs
		from
			Exp_ShipmentBooking 
		where 
			Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber} and
			Exp_ShipmentBooking.ShipmentDate = #{shipmentDate}
	]]>
	</select>
	
	<resultMap id="ShipmentInfoResultMap"
		type="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		<id column="ShipmentId" property="shipmentId"/>
		<result column="process" property="process" />		
		<result column="ShipmentNumber" property="shipmentNumber" />
		<result column="Origin" property="origin" />
		<result column="Destination" property="destination" />
		<result column="Pieces"  property="awbPiece" />
		<result column="Weight" property="awbWeight" />
		<result column="totalVolume" property="totalVolume" />
		<result column="totalVolumetricWeight" property="totalVolumetricWeight" />
		<result column="isBondedTruck" property="isBondedTruck" />
		<result column="NatureOfGoodsDescription" property="natureOfGoods" />
		<result column="PartShipment" property="partShipment" />
		<result column="Console" property="consol" />
		<result column="Locked" property="awbOnHold" />
		<result column="DocumentReceivedOn" property="receivedOn"/>
		<result column="CancelledOn" property="cancelledOn" />
		<result column="Abandoned"  property="abondanedCargo" />
		<result column="SVC"  property="svc" />
		<result column="HandledByMasterHouse"  property="handledByHouse" />
		<result column="ChargeableWeight"  property="ChargebleWeight" />
		<result column="DocumentPouchReceived"  property="pouchReceived"/>
		<result column="FreightWayBillReceivedManually" property="fwbm" />
		<result column="FreightWayBillReceivedFromExternal" property="fwbe" />
		<result column="FreightHouseReceivedManually" property="fhlm" />
		<result column="FreightHouseReceivedFromExternal" property="fhle" />
		<result column="shcs" property="shcs"></result>
		<result column="EAWShipment"  property="eawb" />
		<result column="reuseShipment"  property="canReUse" />
		<result column="CustomerCode"  property="agent" />
		<result column="RCARStatus"  property="rcarType" />
		<result column="FSUMessageSent"  property="fsu" />
		<result column="ReleasedOn"  property="releasedOn" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
		<result column="ReleasedBy"  property="releasedBy" />
		<result column="CheckList"  property="checkListReceived" />
		<result column="UploadedDocumentsCount"  property="uploadedDocument" />
		<result column="CollectBankEndorsementClearanceLetter"  property="bankCreationDocument" />
		<result column="GrossWeight"  property="actualWeight" />
		<result column="ActualPieces"  property="actualPieces" />
		<result column="RoutingInfo"  property="routingInfo" />
	</resultMap>

	<select id="sqlGetImportDeliveryInfo" 
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
		resultMap="ImportDeliveryInfoResultMap">
		select
			Imp_Delivery.ShipmentId,
			Imp_Delivery.Pieces,
			Imp_Delivery.Weight,
			Imp_Delivery.DeliveryOrderNo,
			Imp_Delivery.DeliveredOn,
			isnull((
				select
					string_agg(Shipment_Remarks.ShipmentRemarks, ' ') ShipmentRemarks
				from
					Shipment_Remarks 
				where 
					Shipment_Remarks.RemarkType = 'DLV' and
					Shipment_Remarks.ShipmentNumber = #{shipmentNumber} and
					Shipment_Remarks.ShipmentDate = #{shipmentDate}	and
					Shipment_Remarks.ShipmentRemarks like '%'+ Imp_Delivery.DeliveryOrderNo +'%'
			), (
				select
					TOP 1 Mst_Reason.Description
				from
					Mst_Reason
				where
					Mst_Reason.ReasonCode = Imp_Delivery.CancellationReasonCode
			)) DeliveryRemarks,
			Imp_Delivery.Status
		from
			Imp_Delivery
		where			
			Imp_Delivery.ShipmentId = #{shipmentId} and Imp_Delivery.Status='COMPLETED' and
			not exists(
				select
					null
				from
					Shipment_Inventory
				where
					Shipment_Inventory.DeliveryOrderNo = Imp_Delivery.ImpDeliveryId
			)
		group by
			Imp_Delivery.ShipmentId,
			Imp_Delivery.Pieces,
			Imp_Delivery.Weight,
			Imp_Delivery.DeliveryOrderNo,
			Imp_Delivery.Status,
			Imp_Delivery.DeliveredOn,
			Imp_Delivery.CancellationReasonCode		
		order by
			Imp_Delivery.DeliveredOn
	</select>

	<resultMap
		type="com.ngen.cosys.shipment.information.model.ShipmentDeliveryModel"
		id="ImportDeliveryInfoResultMap">
		<result column="DeliveryOrderNo" property="doNumber"></result>
		<result column="DeliveredOn" property="deliveryDate" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"></result>
		<result column="Pieces" property="deliveryPieces"></result>
		<result column="Weight" property="deliveryWeight"></result>
		<result column="DeliveryRemarks" property="remarks"></result>
		<result column="Status" property="status"></result>
	</resultMap>

	<select id="sqlGetExportBookingInfo"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
		resultMap="ExportBookingInfoResultMap">
		<![CDATA[
		select
			*
		from(
			select
				Exp_ShipmentBooking.ShipmentNumber,
				Exp_ShipmentBooking.ShipmentDate,	
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.FlightOriginDate,			
				Exp_ShipmentFlightBookingDetail.FlightId,
				Flt_OperativeFlight.FlightKey as BookingFlightKey,
				Flt_OperativeFlight_Segments.DateSTD as BookingSta,
				Flt_OperativeFlight_Segments.FlightBoardPoint as BookingFlightBoardingPoint,
				Flt_OperativeFlight_Segments.FlightOffPoint as BookingFlightOffPoint,
				(select
						string_agg(Exp_ShipmentFlightBookingDetailSHC.SpecialHandlingCode, ' ')
					from
						Exp_ShipmentFlightBookingDetailSHC
					where
						Exp_ShipmentFlightBookingDetailSHC.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId
				) as bookingShc,
				Exp_ShipmentFlightBookingDetail.BookingStatusCode,
				Exp_ShipmentFlightBookingDetail.BookingPieces,
				Exp_ShipmentFlightBookingDetail.BookingWeight,
				Exp_ShipmentFlightBookingDetail.ThroughTransitFlag,
				isnull((select
					string_agg(TransferTypeInfo.TransferType,',') TransferType
				from(select 
						distinct TransferType 
					from 
						Transhipment_TTWAOutboundFlight inner join
						Transhipment_TTWAConnectingFlight 
							on Transhipment_TTWAOutboundFlight.TransTTWAOutboundFlightId = Transhipment_TTWAConnectingFlight.TransTTWAOutboundFlightId inner join
						Transhipment_TTWAConnectingFlightShipment
							on Transhipment_TTWAConnectingFlight.TransTTWAConnectingFlightId = Transhipment_TTWAConnectingFlightShipment.TransTTWAConnectingFlightId
					where 
						Transhipment_TTWAConnectingFlightShipment.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
						Transhipment_TTWAConnectingFlightShipment.ShipmentDate = Exp_ShipmentBooking.ShipmentDate and
						Transhipment_TTWAOutboundFlight.OutboundFlightId = Exp_ShipmentFlightBookingDetail.FlightId and
						isnull(Transhipment_TTWAConnectingFlightShipment.MarkedAsDeleted, 0) = 0
					union
					select 
						distinct Exp_ShipmentPartBookingDetail.TransferType
					from
						Exp_ShipmentPartBookingDetail inner join
						Exp_ShipmentFlightPartDetail
							on Exp_ShipmentPartBookingDetail.PartBookingId = Exp_ShipmentFlightPartDetail.PartBookingId
					where
						Exp_ShipmentFlightPartDetail.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId and
						exists(
							select
								null
							from
								Transhipment_TransferTypes
							where
								Transhipment_TransferTypes.TransferType = 'ST' and
								Transhipment_TransferTypes.Code = Exp_ShipmentPartBookingDetail.TransferType
						)
					)
				TransferTypeInfo), Exp_ShipmentFlightBookingDetail.TransferType) as TransferType,
				case
					when Exp_FlightEvents.FlightDepartedOn is not null
						and (select
									count(1)
								from
									Exp_Manifest inner join
									Exp_ManifestShipmentInfo
										on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
									Shipment_Master
										on Exp_ManifestShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
								where
									Exp_Manifest.FlightId = Exp_ShipmentFlightBookingDetail.FlightId and
									Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
									Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate) > 0 then
						'Flight Departed'
					when Exp_FlightEvents.FlightCompletedAt is not null 
							and (select
									count(1)
								from
									Exp_Manifest inner join
									Exp_ManifestShipmentInfo
										on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
									Shipment_Master
										on Exp_ManifestShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
								where
									Exp_Manifest.FlightId = Exp_ShipmentFlightBookingDetail.FlightId and
									Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
									Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate) > 0 then
						'Flight Completed'
					when Exp_FlightEvents.ManifestCompletedAt is not null 
							and (select
									count(1)
								from
									Exp_Manifest inner join
									Exp_ManifestShipmentInfo
										on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
									Shipment_Master
										on Exp_ManifestShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
								where
									Exp_Manifest.FlightId = Exp_ShipmentFlightBookingDetail.FlightId and
									Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
									Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate) > 0 then
						'Flight Manifested'
					when Exp_FlightEvents.BuildupCompletedAt is not null 
							and (select
									count(1)
								from
									Exp_AssignedULDTrolleyToFlight inner join
									Exp_LoadedShipmentInfo
										on Exp_AssignedULDTrolleyToFlight.AssUldTrolleyId = Exp_LoadedShipmentInfo.AssUldTrolleyId inner join
									Shipment_Master
										on Exp_LoadedShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
								where
									Exp_AssignedULDTrolleyToFlight.FlightId = Exp_ShipmentFlightBookingDetail.FlightId and
									Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
									Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate) > 0 then
						'Buildup Completed'
				end shipmentStatus,
				case when (select count(1) from exp_screening where ScreeningStartDate is not null and
					Exp_Screening.ScreeningEndDate is  null and Exp_ShipmentBooking.ShipmentNumber = exp_screening.ShipmentNumber and
					Exp_ShipmentBooking.ShipmentDate = exp_screening.ShipmentDate and 
					Exp_ShipmentFlightBookingDetail.FlightId = exp_screening.FlightId
					)>0 then 'In Progress' 
					when (select count(1) from exp_screening where ScreeningStartDate is not null and
					Exp_Screening.ScreeningEndDate is not null and Exp_ShipmentBooking.ShipmentNumber = exp_screening.ShipmentNumber and
					Exp_ShipmentBooking.ShipmentDate = exp_screening.ShipmentDate and 
					Exp_ShipmentFlightBookingDetail.FlightId = exp_screening.FlightId
					)>0
					then 'Completed'  
					else 'In Progress' 
				end shipmentScreeningStatus,
				isnull(OffloadShipmentInfo.OffloadPieces, 0) offloadPieces,
				isnull(OffloadShipmentInfo.OffloadWeight, 0) offloadWeight,
				(select
						string_agg(Shipment_StatusUpdateEvent.EventType, ' ')
					from(
						select
							distinct Shipment_StatusUpdateEvent.EventType
						from
							Shipment_StatusUpdateEvent
						where
							Shipment_StatusUpdateEvent.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
							Shipment_StatusUpdateEvent.ShipmentDate = Exp_ShipmentBooking.ShipmentDate and
							Shipment_StatusUpdateEvent.OutgoingFlightId = Exp_ShipmentFlightBookingDetail.FlightId
					)Shipment_StatusUpdateEvent
				) flightFsuStatus
			from
				Exp_ShipmentBooking inner join
				Exp_ShipmentFlightBookingDetail
					on Exp_ShipmentBooking.BookingId = Exp_ShipmentFlightBookingDetail.BookingId inner join
				Flt_OperativeFlight_Segments 
					on Exp_ShipmentFlightBookingDetail.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId and
						Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight_Segments.Flight_ID inner join
				Flt_OperativeFlight
					on Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight.Flight_ID and
						Flt_OperativeFlight_Segments.Flight_ID = Flt_OperativeFlight.Flight_ID inner join
				Exp_FlightEvents
					on Flt_OperativeFlight.Flight_ID = Exp_FlightEvents.FlightId left join
				(	
					select
						Exp_OffloadULDInfo.FlightSegmentId,
						Shipment_Master.ShipmentNumber,
						Shipment_Master.ShipmentDate,
						sum(Exp_OffloadShipmentInfo.Pieces) as OffloadPieces,
						sum(Exp_OffloadShipmentInfo.Weight) as OffloadWeight
					from
						Exp_OffloadULDInfo inner join
						Exp_OffloadShipmentInfo
							on Exp_OffloadULDInfo.ExpOffloadULDInfoId = Exp_OffloadShipmentInfo.ExpOffloadULDInfoId inner join
						Shipment_Master
							on Exp_OffloadShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
					group by
						Exp_OffloadULDInfo.FlightSegmentId,
						Shipment_Master.ShipmentNumber,
						Shipment_Master.ShipmentDate
				)OffloadShipmentInfo
					on Exp_ShipmentFlightBookingDetail.FlightSegmentId = OffloadShipmentInfo.FlightSegmentId and
						Exp_ShipmentBooking.ShipmentNumber = OffloadShipmentInfo.ShipmentNumber and
						Exp_ShipmentBooking.ShipmentDate = OffloadShipmentInfo.ShipmentDate
			where
				Exp_ShipmentFlightBookingDetail.BookingStatusCode <> 'XX' and
				Exp_ShipmentFlightBookingDetail.OutwardBookingFlag = 1 and
				Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber} and
				Exp_ShipmentBooking.ShipmentDate = #{shipmentDate}
			group by
				Exp_ShipmentBooking.ShipmentNumber,
				Exp_ShipmentBooking.ShipmentDate,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.FlightOriginDate,	
				Exp_ShipmentFlightBookingDetail.FlightId,
				Flt_OperativeFlight.FlightKey ,
				Flt_OperativeFlight_Segments.DateSTD ,
				Flt_OperativeFlight_Segments.FlightBoardPoint ,
				Flt_OperativeFlight_Segments.FlightOffPoint ,
				Exp_ShipmentFlightBookingDetail.BookingStatusCode,
				Exp_ShipmentFlightBookingDetail.BookingPieces,
				Exp_ShipmentFlightBookingDetail.BookingWeight,
				Exp_FlightEvents.FlightDepartedOn,
				Exp_FlightEvents.ManifestCompletedAt,
				Exp_ShipmentFlightBookingDetail.ThroughTransitFlag,
				Exp_FlightEvents.FlightCompletedAt,Exp_FlightEvents.BuildupCompletedAt,
				OffloadShipmentInfo.OffloadPieces,
				OffloadShipmentInfo.OffloadWeight,
				Exp_ShipmentFlightBookingDetail.TransferType,
				Exp_ShipmentFlightBookingDetail.FlightBookingId
			union
			select
				Exp_ShipmentBooking.ShipmentNumber,
				Exp_ShipmentBooking.ShipmentDate,	
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.FlightOriginDate,			
				Exp_ShipmentFlightBookingDetail.FlightId,
				Flt_OperativeFlight.FlightKey as BookingFlightKey,
				Flt_OperativeFlight_Segments.DateSTD as BookingSta,
				Flt_OperativeFlight_Segments.FlightBoardPoint as BookingFlightBoardingPoint,
				Flt_OperativeFlight_Segments.FlightOffPoint as BookingFlightOffPoint,
				(select
						string_agg(Exp_ShipmentFlightBookingDetailSHC.SpecialHandlingCode, ' ')
					from
						Exp_ShipmentFlightBookingDetailSHC
					where
						Exp_ShipmentFlightBookingDetailSHC.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId
				) as bookingShc,
				Exp_ShipmentFlightBookingDetail.BookingStatusCode,
				Exp_ShipmentFlightBookingDetail.BookingPieces,
				Exp_ShipmentFlightBookingDetail.BookingWeight,
				Exp_ShipmentFlightBookingDetail.ThroughTransitFlag,
				isnull((select
					string_agg(TransferTypeInfo.TransferType,',') TransferType
				from(select 
						distinct TransferType 
					from 
						Transhipment_TTWAOutboundFlight inner join
						Transhipment_TTWAConnectingFlight 
							on Transhipment_TTWAOutboundFlight.TransTTWAOutboundFlightId = Transhipment_TTWAConnectingFlight.TransTTWAOutboundFlightId inner join
						Transhipment_TTWAConnectingFlightShipment
							on Transhipment_TTWAConnectingFlight.TransTTWAConnectingFlightId = Transhipment_TTWAConnectingFlightShipment.TransTTWAConnectingFlightId
					where 
						Transhipment_TTWAConnectingFlightShipment.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
						Transhipment_TTWAConnectingFlightShipment.ShipmentDate = Exp_ShipmentBooking.ShipmentDate and
						Transhipment_TTWAOutboundFlight.OutboundFlightId = Exp_ShipmentFlightBookingDetail.FlightId and
						isnull(Transhipment_TTWAConnectingFlightShipment.MarkedAsDeleted, 0) = 0
					union
					select 
						distinct Exp_ShipmentPartBookingDetail.TransferType
					from
						Exp_ShipmentPartBookingDetail inner join
						Exp_ShipmentFlightPartDetail
							on Exp_ShipmentPartBookingDetail.PartBookingId = Exp_ShipmentFlightPartDetail.PartBookingId
					where
						Exp_ShipmentFlightPartDetail.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId and
						exists(
							select
								null
							from
								Transhipment_TransferTypes
							where
								Transhipment_TransferTypes.TransferType = 'ST' and
								Transhipment_TransferTypes.Code = Exp_ShipmentPartBookingDetail.TransferType
						)
					)
				TransferTypeInfo), Exp_ShipmentFlightBookingDetail.TransferType) as TransferType,
				case
					when Exp_FlightEvents.FlightDepartedOn is not null
						and (select
									count(1)
								from
									Exp_Manifest inner join
									Exp_ManifestShipmentInfo
										on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
									Shipment_Master
										on Exp_ManifestShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
								where
									Exp_Manifest.FlightId = Exp_ShipmentFlightBookingDetail.FlightId and
									Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
									Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate) > 0 then
						'Flight Departed'
					when Exp_FlightEvents.FlightCompletedAt is not null 
							and (select
									count(1)
								from
									Exp_Manifest inner join
									Exp_ManifestShipmentInfo
										on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
									Shipment_Master
										on Exp_ManifestShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
								where
									Exp_Manifest.FlightId = Exp_ShipmentFlightBookingDetail.FlightId and
									Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
									Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate) > 0 then
						'Flight Completed'
					when Exp_FlightEvents.ManifestCompletedAt is not null 
							and (select
									count(1)
								from
									Exp_Manifest inner join
									Exp_ManifestShipmentInfo
										on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
									Shipment_Master
										on Exp_ManifestShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
								where
									Exp_Manifest.FlightId = Exp_ShipmentFlightBookingDetail.FlightId and
									Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
									Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate) > 0 then
						'Flight Manifested'
					when Exp_FlightEvents.BuildupCompletedAt is not null 
							and (select
									count(1)
								from
									Exp_AssignedULDTrolleyToFlight inner join
									Exp_LoadedShipmentInfo
										on Exp_AssignedULDTrolleyToFlight.AssUldTrolleyId = Exp_LoadedShipmentInfo.AssUldTrolleyId inner join
									Shipment_Master
										on Exp_LoadedShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
								where
									Exp_AssignedULDTrolleyToFlight.FlightId = Exp_ShipmentFlightBookingDetail.FlightId and
									Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
									Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate) > 0 then
						'Buildup Completed'
				end shipmentStatus,
				case when (select count(1) from exp_screening where ScreeningStartDate is not null and
					Exp_Screening.ScreeningEndDate is null and Exp_ShipmentBooking.ShipmentNumber = exp_screening.ShipmentNumber and
					Exp_ShipmentBooking.ShipmentDate = exp_screening.ShipmentDate and 
					Exp_ShipmentFlightBookingDetail.FlightId = exp_screening.FlightId
					)>0 then 'In Progress' 
					when (select count(1) from exp_screening where ScreeningStartDate is not null and
					Exp_Screening.ScreeningEndDate is not null and Exp_ShipmentBooking.ShipmentNumber = exp_screening.ShipmentNumber and
					Exp_ShipmentBooking.ShipmentDate = exp_screening.ShipmentDate and 
					Exp_ShipmentFlightBookingDetail.FlightId = exp_screening.FlightId
					)>0
					then 'Completed'  
					else 'In Progress' 
				end shipmentScreeningStatus,
				isnull(OffloadShipmentInfo.OffloadPieces, 0) offloadPieces,
				isnull(OffloadShipmentInfo.OffloadWeight, 0) offloadWeight,
				(select
						string_agg(Shipment_StatusUpdateEvent.EventType, ' ')
					from(
						select
							distinct Shipment_StatusUpdateEvent.EventType
						from
							Shipment_StatusUpdateEvent
						where
							Shipment_StatusUpdateEvent.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
							Shipment_StatusUpdateEvent.ShipmentDate = Exp_ShipmentBooking.ShipmentDate and
							Shipment_StatusUpdateEvent.OutgoingFlightId = Exp_ShipmentFlightBookingDetail.FlightId
					)Shipment_StatusUpdateEvent
				) flightFsuStatus
			from
				Exp_ShipmentBooking inner join
				Exp_ShipmentFlightBookingDetail
					on Exp_ShipmentBooking.BookingId = Exp_ShipmentFlightBookingDetail.BookingId inner join
				Flt_OperativeFlight_Segments 
					on Exp_ShipmentFlightBookingDetail.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId and
						Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight_Segments.Flight_ID inner join
				Flt_OperativeFlight
					on Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight.Flight_ID and
						Flt_OperativeFlight_Segments.Flight_ID = Flt_OperativeFlight.Flight_ID inner join
				Exp_FlightEvents
					on Flt_OperativeFlight.Flight_ID = Exp_FlightEvents.FlightId left join
				(	
					select
						Exp_OffloadULDInfo.FlightSegmentId,
						Shipment_Master.ShipmentNumber,
						Shipment_Master.ShipmentDate,
						sum(Exp_OffloadShipmentInfo.Pieces) as OffloadPieces,
						sum(Exp_OffloadShipmentInfo.Weight) as OffloadWeight
					from
						Exp_OffloadULDInfo inner join
						Exp_OffloadShipmentInfo
							on Exp_OffloadULDInfo.ExpOffloadULDInfoId = Exp_OffloadShipmentInfo.ExpOffloadULDInfoId inner join
						Shipment_Master
							on Exp_OffloadShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
					group by
						Exp_OffloadULDInfo.FlightSegmentId,
						Shipment_Master.ShipmentNumber,
						Shipment_Master.ShipmentDate
				)OffloadShipmentInfo
					on Exp_ShipmentFlightBookingDetail.FlightSegmentId = OffloadShipmentInfo.FlightSegmentId and
						Exp_ShipmentBooking.ShipmentNumber = OffloadShipmentInfo.ShipmentNumber and
						Exp_ShipmentBooking.ShipmentDate = OffloadShipmentInfo.ShipmentDate
			where
				Exp_ShipmentFlightBookingDetail.BookingStatusCode = 'XX' and
				Exp_ShipmentFlightBookingDetail.OutwardBookingFlag = 1 and
				Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber} and
				Exp_ShipmentBooking.ShipmentDate = #{shipmentDate} and
				exists(
					select
						1
					from
						Exp_AssignedULDTrolleyToFlight inner join
						Exp_LoadedShipmentInfo 
							on Exp_AssignedULDTrolleyToFlight.AssUldTrolleyId = Exp_LoadedShipmentInfo.AssUldTrolleyId inner join
						Shipment_Master
							on Exp_LoadedShipmentInfo.ShipmentId = Shipment_Master.ShipmentId
					where
						Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
						Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate and
						Exp_AssignedULDTrolleyToFlight.FlightId = Exp_ShipmentFlightBookingDetail.FlightId
				)
			group by
				Exp_ShipmentBooking.ShipmentNumber,
				Exp_ShipmentBooking.ShipmentDate,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.FlightOriginDate,	
				Exp_ShipmentFlightBookingDetail.FlightId,
				Flt_OperativeFlight.FlightKey ,
				Flt_OperativeFlight_Segments.DateSTD ,
				Flt_OperativeFlight_Segments.FlightBoardPoint ,
				Flt_OperativeFlight_Segments.FlightOffPoint ,
				Exp_ShipmentFlightBookingDetail.BookingStatusCode,
				Exp_ShipmentFlightBookingDetail.BookingPieces,
				Exp_ShipmentFlightBookingDetail.BookingWeight,
				Exp_FlightEvents.FlightDepartedOn,
				Exp_FlightEvents.ManifestCompletedAt,
				Exp_ShipmentFlightBookingDetail.ThroughTransitFlag,
				Exp_FlightEvents.FlightCompletedAt,Exp_FlightEvents.BuildupCompletedAt,
				OffloadShipmentInfo.OffloadPieces,
				OffloadShipmentInfo.OffloadWeight,
				Exp_ShipmentFlightBookingDetail.TransferType,
				Exp_ShipmentFlightBookingDetail.FlightBookingId
			union
			select
				Shipment_Master.ShipmentNumber,
				Shipment_Master.ShipmentDate,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.FlightOriginDate,				
				Flt_OperativeFlight.Flight_ID FlightId,
				Flt_OperativeFlight.FlightKey as BookingFlightKey,
				Flt_OperativeFlight_Segments.DateSTD as BookingSta,
				Flt_OperativeFlight_Segments.FlightBoardPoint as BookingFlightBoardingPoint,
				Flt_OperativeFlight_Segments.FlightOffPoint as BookingFlightOffPoint,
				( select 
					string_agg(  shcData.SpecialHandlingCode, ' ')
					from (
							select distinct Exp_OffloadShipmentSHCInfo.SpecialHandlingCode 
							from
							Exp_OffloadShipmentSHCInfo inner join
							Exp_OffloadShipmentInfo innerExp_OffloadShipmentInfo
								on Exp_OffloadShipmentSHCInfo.ExpOffloadShipmentInfoId = innerExp_OffloadShipmentInfo.ExpOffloadShipmentInfoId inner join
							Exp_OffloadULDInfo innerExp_OffloadULDInfo
								on innerExp_OffloadShipmentInfo.ExpOffloadULDInfoId = innerExp_OffloadULDInfo.ExpOffloadULDInfoId
							where
							innerExp_OffloadULDInfo.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId and 
							innerExp_OffloadShipmentInfo.ShipmentId = Exp_OffloadShipmentInfo.ShipmentId
						) shcData
				) bookingShc,
				null BookingStatusCode,
				0 BookingPieces,
				0 BookingWeight,
				0 ThroughTransitFlag,
				null as TransferType,
				'Offloaded' shipmentStatus,
				null shipmentScreeningStatus,
				sum(Exp_OffloadShipmentInfo.Pieces) offloadPieces,
				sum(Exp_OffloadShipmentInfo.Weight) offloadWeight,
				(select
						string_agg(Shipment_StatusUpdateEvent.EventType, ' ')
					from(
						select
							distinct Shipment_StatusUpdateEvent.EventType
						from
							Shipment_StatusUpdateEvent
						where
							Shipment_StatusUpdateEvent.ShipmentNumber = Shipment_Master.ShipmentNumber and
							Shipment_StatusUpdateEvent.ShipmentDate = Shipment_Master.ShipmentDate and
							Shipment_StatusUpdateEvent.OutgoingFlightId = Flt_OperativeFlight.Flight_ID
					)Shipment_StatusUpdateEvent
				) flightFsuStatus
			from
				Exp_OffloadULDInfo inner join
				Exp_OffloadShipmentInfo
					on Exp_OffloadULDInfo.ExpOffloadULDInfoId = Exp_OffloadShipmentInfo.ExpOffloadULDInfoId inner join
				Shipment_Master
					on Exp_OffloadShipmentInfo.ShipmentId = Shipment_Master.ShipmentId inner join
				Flt_OperativeFlight_Segments 
					on Exp_OffloadULDInfo.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId inner join
				Flt_OperativeFlight
					on Flt_OperativeFlight_Segments.Flight_ID = Flt_OperativeFlight.Flight_ID inner join
				Exp_FlightEvents
					on Flt_OperativeFlight.Flight_ID = Exp_FlightEvents.FlightId
			where	
				Shipment_Master.ShipmentNumber = #{shipmentNumber} and
				Shipment_Master.ShipmentDate = #{shipmentDate} and
				not exists(
					select
						null
					from
						Exp_ShipmentBooking inner join
						Exp_ShipmentFlightBookingDetail
							on Exp_ShipmentBooking.BookingId = Exp_ShipmentFlightBookingDetail.BookingId
					where
						Exp_ShipmentBooking.ShipmentNumber = Shipment_Master.ShipmentNumber and
						Exp_ShipmentBooking.ShipmentDate = Shipment_Master.ShipmentDate and
						Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight.Flight_ID and
						Exp_ShipmentFlightBookingDetail.BookingStatusCode <> 'XX' and
						Exp_ShipmentFlightBookingDetail.OutwardBookingFlag = 1
				)
			group by
				Shipment_Master.ShipmentNumber,
				Shipment_Master.ShipmentDate,	
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.FlightOriginDate,			
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightKey,
				Flt_OperativeFlight_Segments.DateSTD,
				Flt_OperativeFlight_Segments.FlightBoardPoint,
				Flt_OperativeFlight_Segments.FlightOffPoint,
				Flt_OperativeFlight_Segments.FlightSegmentId,
				Exp_OffloadShipmentInfo.ShipmentId
			union
			select
				Shipment_Master.ShipmentNumber,
				Shipment_Master.ShipmentDate,	
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.FlightOriginDate,		
				Flt_OperativeFlight.Flight_ID FlightId,
				Flt_OperativeFlight.FlightKey as BookingFlightKey,
				Flt_OperativeFlight_Segments.DateSTD as BookingSta,
				Flt_OperativeFlight_Segments.FlightBoardPoint as BookingFlightBoardingPoint,
				Flt_OperativeFlight_Segments.FlightOffPoint as BookingFlightOffPoint,
				null bookingShc,
				null BookingStatusCode,
				sum(Exp_WorkingListShipment.AssignedPieces) BookingPieces,
				sum(Exp_WorkingListShipment.AssignedWeight) BookingWeight,
				0 ThroughTransitFlag,
				null as TransferType,
				'NO BOOKING FOUND' shipmentStatus,
				null shipmentScreeningStatus,
				null offloadPieces,
				null offloadWeight,
				null as flightFsuStatus
			from
				Exp_WorkingListFlightDetails inner join
				Exp_WorkingListShipment
					on Exp_WorkingListFlightDetails.ExpWorkingListId = Exp_WorkingListShipment.ExpWorkingListId inner join
				Shipment_Master
					on Exp_WorkingListShipment.ShipmentId = Shipment_Master.ShipmentId inner join
				Flt_OperativeFlight_Segments 
					on Exp_WorkingListFlightDetails.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId inner join
				Flt_OperativeFlight
					on Flt_OperativeFlight_Segments.Flight_ID = Flt_OperativeFlight.Flight_ID inner join
				Exp_FlightEvents
					on Flt_OperativeFlight.Flight_ID = Exp_FlightEvents.FlightId
			where	
				Shipment_Master.ShipmentNumber = #{shipmentNumber} and
				Shipment_Master.ShipmentDate = #{shipmentDate} and
				not exists(
					select
						null
					from
						Exp_ShipmentBooking inner join
						Exp_ShipmentFlightBookingDetail
							on Exp_ShipmentBooking.BookingId = Exp_ShipmentFlightBookingDetail.BookingId
					where
						Exp_ShipmentBooking.ShipmentNumber = Shipment_Master.ShipmentNumber and
						Exp_ShipmentBooking.ShipmentDate = Shipment_Master.ShipmentDate and
						Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight.Flight_ID
				) and
				exists(
					select
						1
					from
						Exp_AssignedULDTrolleyToFlight inner join
						Exp_LoadedShipmentInfo 
							on Exp_AssignedULDTrolleyToFlight.AssUldTrolleyId = Exp_LoadedShipmentInfo.AssUldTrolleyId
					where
						Exp_LoadedShipmentInfo.ShipmentId = Shipment_Master.ShipmentId and
						Exp_AssignedULDTrolleyToFlight.FlightId = Flt_OperativeFlight.Flight_ID
				)
			group by
				Shipment_Master.ShipmentNumber,
				Shipment_Master.ShipmentDate,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.FlightOriginDate,				
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightKey,
				Flt_OperativeFlight_Segments.DateSTD,
				Flt_OperativeFlight_Segments.FlightBoardPoint,
				Flt_OperativeFlight_Segments.FlightOffPoint,
				Flt_OperativeFlight_Segments.FlightSegmentId,
				Exp_WorkingListShipment.ShipmentId) LoadedInfo
		Order By 
			LoadedInfo.BookingSta
		]]>		
	</select>

	<resultMap
		type="com.ngen.cosys.shipment.information.model.ShipmentFlightModel"
		id="ExportBookingInfoResultMap">
		<result column="FlightId" property="flightId"></result>
		<result column="BookingFlightKey" property="bookingFlightKey"></result>
		<result column="BookingSta" property="bookingSta"></result>
		<result column="BookingFlightBoardingPoint" property="bookingFlightBoardingPoint"></result>
		<result column="BookingFlightOffPoint" property="bookingFlightOffPoint"></result>
		<result column="BookingPieces" property="bookingPieces"></result>
		<result column="BookingWeight" property="bookingWeight"></result>
		<result column="ThroughTransitFlag" property="throughTransitFlag"></result>
		<result column="BookingStatusCode" property="bookingStatusCode"></result>	
		<result column="shipmentScreeningStatus" property="flightScreeningCompleted"></result>
		<result column="shipmentStatus" property="shipmentstatus"></result>		
		<result column="TransferType" property="transferType"></result>	
		<result column="offloadPieces" property="offLoadedPieces"></result>
		<result column="offloadWeight" property="offLoadedWeight"></result>
		<result column="bookingShc" property="bookingShc"></result>
		<result column="flightFsuStatus" property="flightFsuStatus"></result>
		<result column="CarrierCode" property="carrierCode"></result>
		<result column="FlightNumber" property="flightNumber"></result>
		<result column="FlightOriginDate" property="flightOriginDate"></result>
	</resultMap>
	
	<!-- Get part info -->
	<select id="sqlGetShipmentInfoExportPartBookingInfo"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentFlightModel"
		resultType="java.lang.String">
	<![CDATA[
		select
			string_agg(Exp_ShipmentPartBookingDetail.PartSuffix + '( '+ cast(Exp_ShipmentPartBookingDetail.PartPieces as varchar)
					 + '/' + cast(Exp_ShipmentPartBookingDetail.PartWeight as varchar) +' )',' ')
		from
			Exp_ShipmentBooking inner join
			Exp_ShipmentPartBookingDetail
				on Exp_ShipmentBooking.BookingId = Exp_ShipmentPartBookingDetail.BookingId
		where
			Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber} and
			Exp_ShipmentBooking.ShipmentDate = #{shipmentDate} and
			exists(
				select
					null
				from
					Exp_ShipmentFlightBookingDetail inner join
					Exp_ShipmentFlightPartDetail
						on Exp_ShipmentFlightBookingDetail.FlightBookingId = Exp_ShipmentFlightPartDetail.FlightBookingId inner join
					Flt_OperativeFlight
						on Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight.Flight_ID
				where
					Exp_ShipmentFlightBookingDetail.FlightId = #{flightId} and
					Exp_ShipmentFlightPartDetail.PartBookingId = Exp_ShipmentPartBookingDetail.PartBookingId and
					exists(
						select
							1
						from
							Mst_AssociateCarrierWithGroup inner join
							Mst_CarrierGroup
								on Mst_AssociateCarrierWithGroup.Mst_CarrierGroup_ID = Mst_CarrierGroup.Mst_CarrierGroup_ID
						where
							Mst_CarrierGroup.CarrierGroupCode in ('SQ') and
							Mst_AssociateCarrierWithGroup.CarrierCode = Flt_OperativeFlight.CarrierCode
					)
			)
	]]>
	</select>
	
	<!--  Inventory query -->	
	<select id="sqlGetShipmentInventoryInfo" 
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentFlightModel"
		resultMap="ShipmentInventoryInfoResultMap">
		select
			Shipment_Inventory.ShipmentLocation,
			Shipment_Inventory.Pieces,
			Shipment_Inventory.Weight,
			Shipment_Inventory.WarehouseLocation,
			Shipment_Inventory.Locked,
			Shipment_Inventory.LockedBy,
			ShipmentInventory_Id,
			Shipment_Inventory.PartSuffix,
			Shipment_Inventory.ChargebleWeight,
			isnull((select Top 1 Mst_Reason.Description+ ' / ' + Shipment_Inventory.HoldRemarks+'/'+Shipment_Inventory.LockedBy from Mst_Reason where cast(ReasonCode as varchar) = cast(Shipment_Inventory.LockReason as varchar)),Shipment_Inventory.LockReason+' / ' + Shipment_Inventory.HoldRemarks) as LockReason,
			isnull((Imp_Delivery.DeliveryOrderNo +'/' + Imp_Delivery.Status),
					(Imp_DeliveryRequest.DeliveryRequestOrderNo + ' / ' + Imp_DeliveryRequest.Status)) as DeliveryRequestInfo,
			(select
					string_agg(Shipment_InventorySHC.SpecialHandlingCode,' ')
				from
					Shipment_InventorySHC
				where
					Shipment_InventorySHC.ShipmentInventoryId = Shipment_Inventory.ShipmentInventory_Id) shcs
		from
			Shipment_Inventory left join
			Imp_DeliveryRequest
				on Shipment_Inventory.DeliveryRequestOrderNo = Imp_DeliveryRequest.ImpDeliveryRequestId left join
			Imp_Delivery
				on Shipment_Inventory.DeliveryOrderNo = Imp_Delivery.ImpDeliveryId
		where
			Shipment_ID = #{shipmentId} and 
			Shipment_Inventory.AssignedUldTrolley is null
			<if test="flightId != null">
				and Flight_ID = #{flightId}
			</if>
		union all
		select
			Shipment_FreightOut.ShipmentLocation,
			Shipment_FreightOut.Pieces,
			Shipment_FreightOut.Weight,
			Shipment_FreightOut.WarehouseLocation,
			Shipment_FreightOut.Locked,
			Shipment_FreightOut.LockedBy,
			null ShipmentInventory_Id,
			Shipment_FreightOut.PartSuffix,
			Shipment_FreightOut.ChargebleWeight,
			isnull((select Top 1 Mst_Reason.Description+ ' / ' + Shipment_FreightOut.HoldRemarks+'/'+Shipment_FreightOut.LockedBy from Mst_Reason where cast(ReasonCode as varchar) = cast(Shipment_FreightOut.LockReason as varchar)),Shipment_FreightOut.LockReason+' / ' + Shipment_FreightOut.HoldRemarks) as LockReason,
			(Imp_DeliveryRequest.DeliveryRequestOrderNo + ' / ' + Imp_DeliveryRequest.Status) as DeliveryRequestInfo,
			(select
					string_agg(Shipment_FreightOutSHC.SpecialHandlingCode,' ')
				from
					Shipment_FreightOutSHC
				where
					Shipment_FreightOutSHC.ShipmentFreightOutId = Shipment_FreightOut.ShipmentFreightOutId) shcs
		from
			Shipment_Master inner join
			Shipment_FreightOut 
				on Shipment_Master.ShipmentId = Shipment_FreightOut.ShipmentId inner join
			Imp_DeliveryRequest
				on Shipment_FreightOut.DeliveryRequestOrderNo = Imp_DeliveryRequest.ImpDeliveryRequestId
		where
			Shipment_Master.ShipmentId = #{shipmentId} and 
			exists(
				select
					null
				from
					Flt_OperativeFlight inner join
					Flt_OperativeFlight_Legs
						on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
							Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport}
				where
					Flt_OperativeFlight.Flight_ID = Shipment_FreightOut.FlightID
			)
			<if test="flightId != null">
				and Shipment_FreightOut.FlightID = #{flightId}
			</if>
	</select>
	
	<!--  Inventory ResultMap -->
	
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentInventoryModel" 
		id="ShipmentInventoryInfoResultMap">
		<result column="ShipmentLocation" property="shipmentLocation"></result>
		<result column="ShipmentLocation" property="shipmentLocation"></result>
		<result column="Pieces" property="inventoryPieces"></result>
		<result column="Weight" property="inventoryWeight"></result>
		<result column="WarehouseLocation" property="warehouseLocation"></result>
		<result column="Locked" property="locked"></result>
		<result column="LockedBy" property="lockedBy"></result>
		<result column="LockReason" property="lockReason"></result>
		<result column="DeliveryRequestInfo" property="deliveryRequestInfo"></result>
		<result column="ShipmentInventory_Id" property="shipmentInventory_Id"></result>
		<result column="PartSuffix" property="partSuffix"></result>
		<result column="shcs" property="shcs"></result>		
		<result column="ChargebleWeight" property="inventoryChgWeight"></result>	
	</resultMap>
	
	
	<!--  Import Incoming Shipment Details Query -->
	
	<select id="sqlGetIncomingShipmentFilghtDetails" 
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
		resultMap="IncomingShipmentFlightResultMap">
		<![CDATA[
		select 
			#{shipmentNumber} as shipmentNumber,
			#{shipmentDate} as shipmentDate,    
			IncomingFlightInfo.FlightOriginDate,
	        IncomingFlightInfo.CarrierCode,
			IncomingFlightInfo.FlightNumber,
			IncomingFlightInfo.Flight_ID,
			IncomingFlightInfo.FlightDetailsKey,			
			IncomingFlightInfo.FlightDate,
			IncomingFlightInfo.FlightDetailsSta,
			IncomingFlightInfo.FlightATADay,
			IncomingFlightInfo.FlightDetailsBoardPoint,
			IncomingFlightInfo.Piece,
			IncomingFlightInfo.Weight,
			IncomingFlightInfo.DocumentReceivedFlag,
			IncomingFlightInfo.PhotoCopyAwbFlag,
			IncomingFlightInfo.statusEvents,
			IncomingFlightInfo.BreakDownPieces,
			IncomingFlightInfo.BreakDownWeight,
			IncomingFlightInfo.CustomerName,
			IncomingFlightInfo.readyForDelivery,						
			IncomingFlightInfo.irregularityInfo,			
			IncomingFlightInfo.DamagedPieces,
			IncomingFlightInfo.shc,
			IncomingFlightInfo.BookingPieces,
            IncomingFlightInfo.BookingWeight                 
						
		from(
			select
				Flt_OperativeFlight.FlightOriginDate,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightKey as FlightDetailsKey,
				Flt_OperativeFlight_Legs.DateSTA as FlightDate,
				Flt_OperativeFlight_Legs.DateATA as FlightDetailsSta,
				cast(iif(datediff(day, Flt_OperativeFlight_Legs.DateSTA, Flt_OperativeFlight_Legs.DateATA) > 0, 
					datediff(day, Flt_OperativeFlight_Legs.DateSTA, Flt_OperativeFlight_Legs.DateATA), null) as varchar) FlightATADay,
				Flt_OperativeFlight_Segments.FlightBoardPoint as FlightDetailsBoardPoint,
				sum(Imp_ArrivalManifestShipmentInfo.Piece) Piece,
				sum(Imp_ArrivalManifestShipmentInfo.Weight) Weight,
				ShipmentVerification.DocumentReceivedFlag,
				ShipmentVerification.PhotoCopyAwbFlag,
				ShipmentVerification.statusEvents,
				ShipmentVerification.BreakDownPieces,
				ShipmentVerification.BreakDownWeight,
				ShipmentVerification.CustomerName,
				case when 
					    ((select count(1) from Shipment_MasterSHC where Shipment_MasterSHC.ShipmentId = ShipmentVerification.ShipmentId 
					    	and Shipment_MasterSHC.SpecialHandlingCode = 'COU') = 0 and
					    (isnull(ShipmentVerification.BreakDownPieces, 0)  <= isnull(Shipment_Master.Pieces, 0)) and
							isnull(ShipmentVerification.BreakDownPieces, 0) > 0 and
							isnull(Shipment_Master.Pieces, 0) > 0 and
							(sum(Imp_ArrivalManifestShipmentInfo.Piece) = 
								(isnull((select	
									sum(Shipment_Irregularity.Pieces) Pieces
								from
									Shipment_Irregularity
								where
									Shipment_Irregularity.Flight_ID = Flt_OperativeFlight.Flight_ID and
									Shipment_Irregularity.ShipmentNumber = ShipmentVerification.ShipmentNumber and
									Shipment_Irregularity.ShipmentDate = ShipmentVerification.ShipmentDate and
									Shipment_Irregularity.CargoIrregularityCode = 'MSCA'), 0) +  isnull(ShipmentVerification.BreakDownPieces, 0))) and
									((ShipmentVerification.AppointedAgent is not null and Imp_ArrivalManifestShipmentInfo.Destination in (#{tenantAirport}, #{tenantCity})) OR
										Imp_ArrivalManifestShipmentInfo.Destination not in (#{tenantAirport}, #{tenantCity})) and
					                (ShipmentVerification.DocumentReceivedFlag = 1
										OR ShipmentVerification.PhotoCopyAwbFlag = 1
										OR ShipmentVerification.DocumentReceivedOn is not null
										OR ShipmentVerification.PhotoCopy is not null) and
                                                     isnull((select
                                        sum(Inventory.a)
                                    from(select
                                                count(1) a
                                            from
                                                Shipment_Inventory
                                            where
                                                Shipment_Inventory.Shipment_ID = Shipment_Master.ShipmentId and
                                                isnull(Shipment_Inventory.Locked, 0) = 0
                                            union
                                            select
                                                count(1) a
                                            from
                                                Shipment_FreightOut
                                            where
                                                Shipment_FreightOut.ShipmentId = Shipment_Master.ShipmentId
                                        ) Inventory), 0) > 0) then
					        1
					when 
						((select count(1) from Shipment_MasterSHC where Shipment_MasterSHC.ShipmentId = ShipmentVerification.ShipmentId
							and Shipment_MasterSHC.SpecialHandlingCode = 'COU') > 0 and
							(isnull(sum(ShipmentVerification.BreakDownPieces), 0)  <= isnull(Shipment_Master.Pieces, 0)) and 
								isnull(sum(ShipmentVerification.BreakDownPieces), 0) > 0 and
								isnull(Shipment_Master.Pieces, 0) > 0 and
								((ShipmentVerification.AppointedAgent is not null and Imp_ArrivalManifestShipmentInfo.Destination in (#{tenantAirport}, #{tenantCity})) OR
										Imp_ArrivalManifestShipmentInfo.Destination not in (#{tenantAirport}, #{tenantCity})) and
									(ShipmentVerification.DocumentReceivedFlag = 1
										OR ShipmentVerification.PhotoCopyAwbFlag = 1									
											OR ShipmentVerification.DocumentReceivedOn is not null
											OR ShipmentVerification.PhotoCopy is not null) and
                                                     isnull((select
                                        sum(Inventory.a)
                                    from(select
                                                count(1) a
                                            from
                                                Shipment_Inventory
                                            where
                                                Shipment_Inventory.Shipment_ID = Shipment_Master.ShipmentId and
                                                isnull(Shipment_Inventory.Locked, 0) = 0
                                            union
                                            select
                                                count(1) a
                                            from
                                                Shipment_FreightOut
                                            where
                                                Shipment_FreightOut.ShipmentId = Shipment_Master.ShipmentId
                                        ) Inventory), 0) > 0) then
						1
					when 
					    ((isnull(ShipmentVerification.BreakDownPieces, 0)  <= isnull(Shipment_Master.Pieces, 0)) and
							isnull(ShipmentVerification.BreakDownPieces, 0) > 0 and
							isnull(Shipment_Master.Pieces, 0) > 0 and
							sum(Imp_ArrivalManifestShipmentInfo.Piece) + isnull((select	
									sum(Shipment_Irregularity.Pieces) Pieces
								from
									Shipment_Irregularity
								where
									Shipment_Irregularity.Flight_ID = Flt_OperativeFlight.Flight_ID and
									Shipment_Irregularity.ShipmentNumber = ShipmentVerification.ShipmentNumber and
									Shipment_Irregularity.ShipmentDate = ShipmentVerification.ShipmentDate and
									Shipment_Irregularity.CargoIrregularityCode = 'FDCA'), 0) =  isnull(ShipmentVerification.BreakDownPieces, 0) and
									((ShipmentVerification.AppointedAgent is not null and Imp_ArrivalManifestShipmentInfo.Destination in (#{tenantAirport}, #{tenantCity})) OR
										Imp_ArrivalManifestShipmentInfo.Destination not in (#{tenantAirport}, #{tenantCity})) and
					                (ShipmentVerification.DocumentReceivedFlag = 1
										OR ShipmentVerification.PhotoCopyAwbFlag = 1
										OR ShipmentVerification.DocumentReceivedOn is not null
										OR ShipmentVerification.PhotoCopy is not null) and
                                                     isnull((select
                                        sum(Inventory.a)
                                    from(select
                                                count(1) a
                                            from
                                                Shipment_Inventory
                                            where
                                                Shipment_Inventory.Shipment_ID = Shipment_Master.ShipmentId and
                                                isnull(Shipment_Inventory.Locked, 0) = 0
                                            union
                                            select
                                                count(1) a
                                            from
                                                Shipment_FreightOut
                                            where
                                                Shipment_FreightOut.ShipmentId = Shipment_Master.ShipmentId
                                        ) Inventory), 0) > 0) then
					        1	
					else
					        0
				end readyForDelivery,
				(select
						string_agg(Shipment_Irregularity.CargoIrregularityCode+'('+convert(varchar, Shipment_Irregularity.Pieces)+')', ' ')
					from
						Shipment_Irregularity
					where
						Shipment_Irregularity.Flight_ID = Imp_ArrivalManifestByFlight.FlightId and
						Shipment_Irregularity.ShipmentNumber = Imp_ArrivalManifestShipmentInfo.ShipmentNumber and
						Shipment_Irregularity.ShipmentDate = Imp_ArrivalManifestShipmentInfo.ShipmentDate) irregularityInfo,
				isnull(ShipmentDamageInfo.DamagedPieces, 0) DamagedPieces,
				(	
					select 
						string_agg(ArrivalManifestShipmentSHC.SpecialHandlingCode,' ') SpecialHandlingCode
						from(select
									distinct innerArrivalManifestSHC.SpecialHandlingCode
								from
									Imp_ArrivalManifestByFlight innerArrivalManiestByFlight inner join
									Imp_ArrivalManifestBySegment innerArrivalManiestBySegment
										on innerArrivalManiestByFlight.ImpArrivalManifestByFlightId = innerArrivalManiestBySegment.ImpArrivalManifestByFlightId inner join
									Imp_ArrivalManifestULD innerArrivalManifestULD
										on innerArrivalManiestBySegment.ImpArrivalManifestBySegmentId = innerArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
									Imp_ArrivalManifestShipmentInfo innerArrivalManifestShipment
										on innerArrivalManifestULD.ImpArrivalManifestULDId = innerArrivalManifestShipment.ImpArrivalManifestULDId inner join
									Imp_ArrivalManifestByShipmentSHC innerArrivalManifestSHC
										on innerArrivalManifestShipment.ImpArrivalManifestShipmentInfoId = innerArrivalManifestSHC.ImpArrivalManifestShipmentInfoId
								where
									innerArrivalManifestShipment.ShipmentNumber = Imp_ArrivalManifestShipmentInfo.ShipmentNumber and
									innerArrivalManifestShipment.ShipmentDate = Imp_ArrivalManifestShipmentInfo.ShipmentDate and
									innerArrivalManiestByFlight.FlightId = Imp_ArrivalManifestByFlight.FlightId)ArrivalManifestShipmentSHC
				) shc,
				BookinInfo.BookingPieces as BookingPieces,
               	BookinInfo.BookingWeight as BookingWeight
				
			from
				Imp_ArrivalManifestByFlight inner join
				Flt_OperativeFlight
					    on Imp_ArrivalManifestByFlight.FlightId = Flt_OperativeFlight.Flight_ID inner join
				Flt_OperativeFlight_Legs
					    on     Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
					        Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} inner join
				Imp_ArrivalManifestBySegment
					    on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId = Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId inner join
				Flt_OperativeFlight_Segments
					on Imp_ArrivalManifestBySegment.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId and
					    Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Segments.Flight_ID inner join
				Imp_ArrivalManifestULD
					    on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
				Imp_ArrivalManifestShipmentInfo
					    on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId inner join
				Shipment_Master  
					on Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Shipment_Master.ShipmentNumber and
					    Imp_ArrivalManifestShipmentInfo.ShipmentDate = Shipment_Master.ShipmentDate left join
				(
					    select
					        Imp_ShipmentVerification.FlightId,
							Shipment_Master.ShipmentId,
					        Shipment_Master.ShipmentNumber,
					        Shipment_Master.ShipmentDate,
					        Shipment_Master.DocumentReceivedOn,
							Shipment_Master.PhotoCopy,
					        Imp_ShipmentVerification.DocumentReceivedFlag,
					        Imp_ShipmentVerification.PhotoCopyAwbFlag,			        
					        Imp_ShipmentVerification.BreakDownPieces,
					        Imp_ShipmentVerification.BreakDownWeight,
					        Shipment_MasterCustomerInfo.CustomerName,
					        Shipment_MasterCustomerInfo.CustomerCode,
					        Shipment_MasterCustomerInfo.AppointedAgent,
							(select
									string_agg(Shipment_StatusUpdateEvent.EventType, ' ')
								from(select	
										distinct Shipment_StatusUpdateEvent.EventType
									from
										Shipment_StatusUpdateEvent
									where
										Shipment_StatusUpdateEvent.IncomingFlightId = Imp_ShipmentVerification.FlightId and
										Shipment_StatusUpdateEvent.ShipmentId = Imp_ShipmentVerification.ShipmentId) Shipment_StatusUpdateEvent
							) statusEvents
					    from
					        Imp_ShipmentVerification inner join
					        Shipment_Master
					                on Imp_ShipmentVerification.ShipmentId = Shipment_Master.ShipmentId left join
					        Shipment_MasterCustomerInfo
					                on Shipment_Master.ShipmentId = Shipment_MasterCustomerInfo.ShipmentId and 
					                    Shipment_MasterCustomerInfo.CustomerType = 'CNE'
					        -- Performance Optimization 20190517 --
					    where
					    	Shipment_Master.ShipmentNumber = #{shipmentNumber} and
					    	Shipment_Master.ShipmentDate = #{shipmentDate}
					    )ShipmentVerification
					        on Imp_ArrivalManifestShipmentInfo.ShipmentNumber = ShipmentVerification.ShipmentNumber and 
					                Imp_ArrivalManifestShipmentInfo.ShipmentDate = ShipmentVerification.ShipmentDate AND
					                Imp_ArrivalManifestByFlight.FlightId = ShipmentVerification.FlightId left join
					    (
					        select
					                Com_DamageInfo.FlightId,
					                Com_DamageInfo.EntityKey,
					                Com_DamageInfo.EntityDate,
					                sum(Com_DamageLineItems.DamagedPieces) DamagedPieces
					        from
					                Com_DamageInfo inner join
					                Com_DamageLineItems
					                        on Com_DamageInfo.DamageInfoId = Com_DamageLineItems.DamageInfoId
					        group by
					                Com_DamageInfo.FlightId,
					                Com_DamageInfo.EntityKey,
					                Com_DamageInfo.EntityDate
					    )ShipmentDamageInfo
					        on Imp_ArrivalManifestShipmentInfo.ShipmentNumber = ShipmentDamageInfo.EntityKey and 
					            Imp_ArrivalManifestShipmentInfo.ShipmentDate = ShipmentDamageInfo.EntityDate and
					            Imp_ArrivalManifestByFlight.FlightId = ShipmentDamageInfo.FlightId left join 
					 (select
                                        Exp_ShipmentFlightBookingDetail.FlightId,
                                        Exp_ShipmentBooking.ShipmentNumber,
                                        Exp_ShipmentBooking.ShipmentDate,
                                        sum(Exp_ShipmentPartBookingDetail.PartPieces) as BookingPieces,
                                        sum(Exp_ShipmentPartBookingDetail.PartWeight) as BookingWeight
                                 from
                                        Exp_ShipmentBooking inner join
                                        Exp_ShipmentPartBookingDetail
                                               on Exp_ShipmentBooking.BookingId = Exp_ShipmentPartBookingDetail.BookingId inner join
                                        Exp_ShipmentFlightPartDetail
                                               on Exp_ShipmentPartBookingDetail.PartBookingId = Exp_ShipmentFlightPartDetail.PartBookingId inner join
                                        Exp_ShipmentFlightBookingDetail
                                               on Exp_ShipmentFlightPartDetail.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId
                                 where
                                        Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber} and
                                        Exp_ShipmentBooking.ShipmentDate = #{shipmentDate}
                                 group by
                                        Exp_ShipmentFlightBookingDetail.FlightId,
                                        Exp_ShipmentBooking.ShipmentNumber,
                                        Exp_ShipmentBooking.ShipmentDate
                          )BookinInfo
                                 on Shipment_Master.ShipmentNumber = BookinInfo.ShipmentNumber and
                                        Shipment_Master.ShipmentDate = BookinInfo.ShipmentDate and
                                        Imp_ArrivalManifestByFlight.FlightId = BookinInfo.FlightId
				where
					Imp_ArrivalManifestShipmentInfo.ShipmentNumber = #{shipmentNumber} and
					Imp_ArrivalManifestShipmentInfo.ShipmentDate = #{shipmentDate}
				group by
					Flt_OperativeFlight.FlightOriginDate,
					Flt_OperativeFlight.CarrierCode,
					Flt_OperativeFlight.FlightNumber,
					Flt_OperativeFlight.Flight_ID,
					Flt_OperativeFlight.FlightKey,
					Flt_OperativeFlight_Legs.DateSTA,
					Flt_OperativeFlight_Legs.DateATA,
					Flt_OperativeFlight_Segments.FlightBoardPoint,
					ShipmentVerification.ShipmentNumber,
					ShipmentVerification.ShipmentDate,
					ShipmentVerification.DocumentReceivedOn,
					ShipmentVerification.PhotoCopy,
					ShipmentVerification.DocumentReceivedFlag,
					ShipmentVerification.PhotoCopyAwbFlag,
					ShipmentVerification.BreakDownPieces,
					ShipmentVerification.BreakDownWeight,
					ShipmentVerification.CustomerCode,
					ShipmentVerification.statusEvents,
					ShipmentDamageInfo.DamagedPieces,
					ShipmentVerification.ShipmentId,
					Imp_ArrivalManifestShipmentInfo.ShipmentNumber,
					Imp_ArrivalManifestShipmentInfo.ShipmentDate,
					Imp_ArrivalManifestShipmentInfo.Destination,
					Imp_ArrivalManifestByFlight.FlightId,
					Shipment_Master.Pieces,
					Shipment_Master.ShipmentNumber,
					BookinInfo.BookingPieces,
               		BookinInfo.BookingWeight,
               		Shipment_Master.shipmentId,
               		ShipmentVerification.CustomerName,
               		ShipmentVerification.AppointedAgent
			union		
			select
				Flt_OperativeFlight.FlightOriginDate,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightKey as FlightDetailsKey,
				Flt_OperativeFlight_Legs.DateSTA as FlightDate,
				Flt_OperativeFlight_Legs.DateATA as FlightDetailsSta,
				cast(iif(datediff(day, Flt_OperativeFlight_Legs.DateSTA, Flt_OperativeFlight_Legs.DateATA) > 0, 
					datediff(day, Flt_OperativeFlight_Legs.DateSTA, Flt_OperativeFlight_Legs.DateATA), null) as varchar) FlightATADay,
				Flt_OperativeFlight_Legs.FlightBoardPoint as FlightDetailsBoardPoint,
				0 Piece,
				0 Weight,
				Imp_ShipmentVerification.DocumentReceivedFlag,
				Imp_ShipmentVerification.PhotoCopyAwbFlag,
				(select
					string_agg(Shipment_StatusUpdateEvent.EventType, ' ')
				from(select	
						distinct Shipment_StatusUpdateEvent.EventType
					from
						Shipment_StatusUpdateEvent
					where
						Shipment_StatusUpdateEvent.IncomingFlightId = Flt_OperativeFlight.Flight_ID and
						Shipment_StatusUpdateEvent.ShipmentId = Shipment_Master.ShipmentId) Shipment_StatusUpdateEvent
				) statusEvents,	
				sum(Imp_ShipmentVerification.BreakDownPieces) BreakDownPieces,
				sum(Imp_ShipmentVerification.BreakDownWeight) BreakDownWeight,
				Shipment_MasterCustomerInfo.CustomerName,
				case when 
					    ((select count(1) from Shipment_MasterSHC where Shipment_MasterSHC.ShipmentId = Shipment_Master.ShipmentId 
					    	and Shipment_MasterSHC.SpecialHandlingCode = 'COU') = 0 and
							(isnull(Imp_ShipmentVerification.BreakDownPieces, 0)  <= isnull(Shipment_Master.Pieces, 0)) and
							isnull(Imp_ShipmentVerification.BreakDownPieces, 0) > 0 and
							isnull(Shipment_Master.Pieces, 0) > 0 and
							isnull((select	
									sum(Shipment_Irregularity.Pieces) Pieces
								from
									Shipment_Irregularity
								where
									Shipment_Irregularity.Flight_ID = Flt_OperativeFlight.Flight_ID and
									Shipment_Irregularity.ShipmentNumber = Shipment_Master.ShipmentNumber and
									Shipment_Irregularity.ShipmentDate = Shipment_Master.ShipmentDate and
									Shipment_Irregularity.CargoIrregularityCode = 'FDCA'), 0) =  isnull(Imp_ShipmentVerification.BreakDownPieces, 0) and
									((Shipment_MasterCustomerInfo.AppointedAgent is not null and Shipment_Master.Destination in (#{tenantAirport}, #{tenantCity})) OR
										Shipment_Master.Destination not in (#{tenantAirport}, #{tenantCity})) and
					                (Imp_ShipmentVerification.DocumentReceivedFlag = 1
										OR Imp_ShipmentVerification.PhotoCopyAwbFlag = 1
										OR Shipment_Master.DocumentReceivedOn is not null
										OR Shipment_Master.PhotoCopy is not null) and
                                                     isnull((select
                                        sum(Inventory.a)
                                    from(select
                                                count(1) a
                                            from
                                                Shipment_Inventory
                                            where
                                                Shipment_Inventory.Shipment_ID = Shipment_Master.ShipmentId and
                                                isnull(Shipment_Inventory.Locked, 0) = 0
                                            union
                                            select
                                                count(1) a
                                            from
                                                Shipment_FreightOut
                                            where
                                                Shipment_FreightOut.ShipmentId = Shipment_Master.ShipmentId
                                        ) Inventory), 0) > 0) then
					        1
					when 
						((select count(1) from Shipment_MasterSHC where Shipment_MasterSHC.ShipmentId = Shipment_Master.ShipmentId
							and Shipment_MasterSHC.SpecialHandlingCode = 'COU') > 0 and
							(isnull(sum(Imp_ShipmentVerification.BreakDownPieces), 0)  <= isnull(Shipment_Master.Pieces, 0)) and 
								isnull(sum(Imp_ShipmentVerification.BreakDownPieces), 0) > 0 and
								isnull(Shipment_Master.Pieces, 0) > 0 and
								((Shipment_MasterCustomerInfo.AppointedAgent is not null and Shipment_Master.Destination in (#{tenantAirport}, #{tenantCity})) OR
										Shipment_Master.Destination not in (#{tenantAirport}, #{tenantCity})) and
									(Imp_ShipmentVerification.DocumentReceivedFlag = 1
										OR Imp_ShipmentVerification.PhotoCopyAwbFlag = 1									
											OR Shipment_Master.DocumentReceivedOn is not null
											OR Shipment_Master.PhotoCopy is not null) and
                                                     isnull((select
                                        sum(Inventory.a)
                                    from(select
                                                count(1) a
                                            from
                                                Shipment_Inventory
                                            where
                                                Shipment_Inventory.Shipment_ID = Shipment_Master.ShipmentId and
                                                isnull(Shipment_Inventory.Locked, 0) = 0
                                            union
                                            select
                                                count(1) a
                                            from
                                                Shipment_FreightOut
                                            where
                                                Shipment_FreightOut.ShipmentId = Shipment_Master.ShipmentId
                                        ) Inventory), 0) > 0) then
						1
					else
					        0
				end readyForDelivery,
				(select
						string_agg(Shipment_Irregularity.CargoIrregularityCode+'('+convert(varchar, Shipment_Irregularity.Pieces)+')', ' ')
					from
						Shipment_Irregularity
					where
						Shipment_Irregularity.Flight_ID = Flt_OperativeFlight.Flight_ID and
						Shipment_Irregularity.ShipmentNumber = Shipment_Master.ShipmentNumber and
						Shipment_Irregularity.ShipmentDate = Shipment_Master.ShipmentDate) irregularityInfo,
				isnull(ShipmentDamageInfo.DamagedPieces, 0) DamagedPieces,
				(
					select
						string_agg(InventoryFreightOutSHC.SpecialHandlingCode, ' ') SpecialHandlingCode
					from(
						select
							Shipment_InventorySHC.SpecialHandlingCode
						from
							Shipment_Inventory inner join
							Shipment_InventorySHC
								on Shipment_Inventory.ShipmentInventory_Id = Shipment_InventorySHC.ShipmentInventoryId
						where
							Shipment_Inventory.Shipment_ID = Shipment_Master.ShipmentId and
							Shipment_Inventory.Flight_ID = Flt_OperativeFlight.Flight_Id
						union
						select
							Shipment_FreightOutSHC.SpecialHandlingCode
						from
							Shipment_FreightOut inner join
							Shipment_FreightOutSHC
								on Shipment_FreightOut.ShipmentFreightOutId = Shipment_FreightOutSHC.ShipmentFreightOutId
						where
							Shipment_FreightOut.ShipmentId = Shipment_Master.ShipmentId and
							Shipment_FreightOut.FlightId = Flt_OperativeFlight.Flight_Id) InventoryFreightOutSHC
				)shc,
                BookinInfo.BookingPieces as BookingPieces,
                BookinInfo.BookingWeight as BookingWeight

			from
				Imp_ShipmentVerification inner join
				Flt_OperativeFlight
						on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID inner join
				Flt_OperativeFlight_Legs
						on     Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
							Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport}  inner join
				Shipment_Master
						on Imp_ShipmentVerification.ShipmentId = Shipment_Master.ShipmentId left join
				Shipment_MasterCustomerInfo
						on Shipment_Master.ShipmentId = Shipment_MasterCustomerInfo.ShipmentId and 
							Shipment_MasterCustomerInfo.CustomerType = 'CNE' left join
				(
					select
							Com_DamageInfo.FlightId,
							Com_DamageInfo.EntityKey,
							Com_DamageInfo.EntityDate,
							sum(Com_DamageLineItems.DamagedPieces) DamagedPieces
					from
							Com_DamageInfo inner join
							Com_DamageLineItems
									on Com_DamageInfo.DamageInfoId = Com_DamageLineItems.DamageInfoId
					group by
							Com_DamageInfo.FlightId,
							Com_DamageInfo.EntityKey,
							Com_DamageInfo.EntityDate
				)ShipmentDamageInfo
					on Shipment_Master.ShipmentNumber = ShipmentDamageInfo.EntityKey 
						and Shipment_Master.ShipmentDate = ShipmentDamageInfo.EntityDate 
						and Imp_ShipmentVerification.FlightId = ShipmentDamageInfo.FlightId 
				left join
                             (select
                                           Exp_ShipmentFlightBookingDetail.FlightId,
                                           Exp_ShipmentBooking.ShipmentNumber,
                                           Exp_ShipmentBooking.ShipmentDate,
                                           sum(Exp_ShipmentPartBookingDetail.PartPieces) as BookingPieces,
                                           sum(Exp_ShipmentPartBookingDetail.PartWeight) as BookingWeight
                                    from
                                           Exp_ShipmentBooking inner join
                                           Exp_ShipmentPartBookingDetail
                                                  on Exp_ShipmentBooking.BookingId = Exp_ShipmentPartBookingDetail.BookingId inner join
                                           Exp_ShipmentFlightPartDetail
                                                  on Exp_ShipmentPartBookingDetail.PartBookingId = Exp_ShipmentFlightPartDetail.PartBookingId inner join
                                           Exp_ShipmentFlightBookingDetail
                                                  on Exp_ShipmentFlightPartDetail.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId
                                    where
                                           Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber} and
                                           Exp_ShipmentBooking.ShipmentDate = #{shipmentDate}
                                    group by
                                           Exp_ShipmentFlightBookingDetail.FlightId,
                                           Exp_ShipmentBooking.ShipmentNumber,
                                           Exp_ShipmentBooking.ShipmentDate
                             )BookinInfo
                                    on Shipment_Master.ShipmentNumber = BookinInfo.ShipmentNumber and
                                           Shipment_Master.ShipmentDate = BookinInfo.ShipmentDate and
                                           Imp_ShipmentVerification.FlightId = BookinInfo.FlightId
				
			where
				Shipment_Master.ShipmentNumber = #{shipmentNumber} and
				Shipment_Master.ShipmentDate = #{shipmentDate} and
				not exists(
					select 
						null
					from
							Imp_ArrivalManifestByFlight inner join 
						Imp_ArrivalManifestBySegment
								on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId = Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId inner join
						Imp_ArrivalManifestULD
								on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
						Imp_ArrivalManifestShipmentInfo
								on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId
					where
						Imp_ArrivalManifestByFlight.FlightId = Imp_ShipmentVerification.FlightId and
						Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Shipment_Master.ShipmentNumber and
						Imp_ArrivalManifestShipmentInfo.ShipmentDate = Shipment_Master.ShipmentDate
				)
			group by
				Flt_OperativeFlight.FlightOriginDate,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightKey,
				Flt_OperativeFlight_Legs.DateSTA,
				Flt_OperativeFlight_Legs.DateATA,
				Flt_OperativeFlight_Legs.FlightBoardPoint,
				Imp_ShipmentVerification.DocumentReceivedFlag,
				Imp_ShipmentVerification.PhotoCopyAwbFlag,
				Imp_ShipmentVerification.BreakDownPieces,
				Shipment_Master.DocumentReceivedOn,
				Shipment_Master.PhotoCopy,
				Shipment_MasterCustomerInfo.CustomerName,
				ShipmentDamageInfo.DamagedPieces,
				Shipment_Master.Pieces,
				Shipment_Master.ShipmentId,
				Shipment_Master.ShipmentNumber,
				Shipment_Master.ShipmentDate,
				Shipment_Master.Destination,
				BookinInfo.BookingPieces,
               	BookinInfo.BookingWeight,
               	Shipment_MasterCustomerInfo.CustomerCode,
               	Shipment_MasterCustomerInfo.AppointedAgent				
			union
			select
				Flt_OperativeFlight.FlightOriginDate,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightKey as FlightDetailsKey,
				Flt_OperativeFlight_Legs.DateSTA as FlightDate,
				Flt_OperativeFlight_Legs.DateATA as FlightDetailsSta,
				cast(iif(datediff(day, Flt_OperativeFlight_Legs.DateSTA, Flt_OperativeFlight_Legs.DateATA) > 0, 
					datediff(day, Flt_OperativeFlight_Legs.DateSTA, Flt_OperativeFlight_Legs.DateATA), null) as varchar) FlightATADay,
				Exp_ShipmentFlightBookingDetail.FlightBoardPoint as FlightDetailsBoardPoint,
				0 Piece,
				0 Weight,
				null DocumentReceivedFlag,
				null PhotoCopyAwbFlag,
				null statusEvents,	
				0 BreakDownPieces,
				0 BreakDownWeight,
				Exp_ShipmentBooking.ShipperName CustomerName,
				null readyForDelivery,
				null irregularityInfo,
				0 DamagedPieces,
				(select
					string_agg(Exp_ShipmentFlightBookingDetailSHC.SpecialHandlingCode, ' ') 
				from
					Exp_ShipmentFlightBookingDetailSHC
				where
					Exp_ShipmentFlightBookingDetailSHC.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId) shc,
				sum(Exp_ShipmentFlightBookingDetail.BookingPieces) BookingPieces,
				sum(Exp_ShipmentFlightBookingDetail.BookingWeight) BookingWeight
			from
				Exp_ShipmentBooking inner join
				Exp_ShipmentFlightBookingDetail
					on Exp_ShipmentBooking.BookingId = Exp_ShipmentFlightBookingDetail.BookingId and
						Exp_ShipmentFlightBookingDetail.FlightOffPoint = #{tenantAirport} inner join
				Flt_OperativeFlight
					on Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight.Flight_ID inner join
				Flt_OperativeFlight_Legs
					on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
						Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport}
			where
				Exp_ShipmentFlightBookingDetail.OutwardBookingFlag = 0 and
				Exp_ShipmentFlightBookingDetail.BookingStatusCode <> 'XX' and
				Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber} and
				Exp_ShipmentBooking.ShipmentDate = #{shipmentDate} and 
				(not exists(
					select 
						null
					from
						Imp_ArrivalManifestByFlight inner join 
						Imp_ArrivalManifestBySegment
								on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId = Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId inner join
						Imp_ArrivalManifestULD
								on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
						Imp_ArrivalManifestShipmentInfo
								on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId
					where
						Imp_ArrivalManifestByFlight.FlightId = Exp_ShipmentFlightBookingDetail.FlightId and
						Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
						Imp_ArrivalManifestShipmentInfo.ShipmentDate = Exp_ShipmentBooking.ShipmentDate
				) and not exists(
					select
						null
					from
						Imp_ShipmentVerification inner join
						Shipment_Master
							on Imp_ShipmentVerification.ShipmentId = Shipment_Master.ShipmentId
					where
						 Imp_ShipmentVerification.FlightId = Exp_ShipmentFlightBookingDetail.FlightId and
						 Shipment_Master.ShipmentNumber = Exp_ShipmentBooking.ShipmentNumber and
						 Shipment_Master.ShipmentDate = Exp_ShipmentBooking.ShipmentDate				
				))
			group by
				Flt_OperativeFlight.FlightOriginDate,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightKey,
				Flt_OperativeFlight_Legs.DateATA,
				Flt_OperativeFlight_Legs.DateSTA,	
				Exp_ShipmentFlightBookingDetail.FlightBoardPoint,
				Exp_ShipmentBooking.ShipperName,
				Exp_ShipmentFlightBookingDetail.FlightBookingId) IncomingFlightInfo
		order by
			IncomingFlightInfo.FlightDate			
		]]>
	</select>
	
	<!--  Import Incoming Shipment Details Result Map -->
	<!--  Need to add inventory details -->
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentFlightModel" 
		id="IncomingShipmentFlightResultMap">
		<id column="Flight_ID" property="flightId"/>
		<result column="FlightDetailsKey" property="flightDetailsKey"></result>
		<result column="FlightDetailsSta" property="flightDetailsSta"></result>
		<result column="FlightAtaDay" property="flightAtaDay"></result>
		<result column="FlightDate" property="flightDate"></result>
		<result column="FlightDate" property="sta"></result>
		<result column="FlightDetailsBoardPoint" property="flightDetailsBoardPoint"></result>
		<result column="Piece" property="manifestPieces"></result>
		<result column="Weight" property="manifestWeight"></result>
		<result column="DocumentReceivedFlag" property="documentReceivedFlag"></result>
		<result column="PhotoCopyAwbFlag" property="photoCopyAwbFlag"></result>
		<result column="statusEvents" property="flightFsuStatus"></result>
		<result column="irregularityInfo" property="irregularityInfo"></result>
		<result column="DamagedPieces" property="damagedPieces"></result>
		<result column="shc" property="shc"></result>
		<result column="BreakDownPieces" property="breakdownPieces"></result>
		<result column="BreakDownWeight" property="breakdownWeight"></result>
		<result column="CarrierCode" property="carrierCode"></result>
		<result column="FlightNumber" property="flightNumber"></result>
		<result column="FlightOriginDate" property="flightOriginDate"></result>
		<result column="BookingPieces" property="bookingPieces"></result>
		<result column="BookingWeight" property="bookingWeight"></result>
		<result property="shipmentNumber" column="shipmentNumber"/>
		<result property="shipmentDate" column="shipmentDate"/>
		<association property="shipmentFlightCustomsInfo"
			javaType="com.ngen.cosys.shipment.information.model.ShipmentFlightCustomsInfo"
			select="sqlGetFlightCustomsInfoDetails"
			column="{shipmentNumber=shipmentNumber, shipmentDate=shipmentDate, flightId=Flight_ID}" />		
	</resultMap>


	<select id="sqlGetFlightCustomsInfoDetails"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
		resultMap="IncomingFlightCustomsInfoResultMap">
	<![CDATA[
		with flight as( 
		    select 
				flt.Flight_ID,
				flt.FlightKey,legs.DateSTA flightDate,
				Flt_OperativeFlight_Attributes.CustomsFlightNumber
			from 
		        Flt_OperativeFlight flt inner join 
		        Flt_OperativeFlight_Legs legs
					on flt.Flight_ID = legs.Flight_ID and 
		                legs.FlightOffPoint = #{tenantAirport} inner join
				Flt_OperativeFlight_Attributes
					on Flt_OperativeFlight_Attributes.Flight_ID = flt.Flight_ID and 
							Flt_OperativeFlight_Attributes.FlightType = 'I'
		    where 
		          flt.Flight_ID = #{flightId}
		)
		select 
			cast(string_agg(cast(CustomsInfo.BOE as NVARCHAR(MAX)), char(10) + char(13)) as NVARCHAR(MAX)) as BOE,
    		cast(string_agg(cast(CustomsInfo.OC as NVARCHAR(MAX)), char(10) + char(13))as NVARCHAR(MAX)) as OC,
		    sum(CustomsInfo.CAV) as CAV,
		    sum(CustomsInfo.TotalDuty) as TotalDuty,
		    max(CustomsInfo.rfe) as rfe,
		    max(CustomsInfo.ffe) as ffe,
		    CustomsInfo.EDONumber as EDONumber,
		    CustomsInfo.EDODate as EDODate
		from(	
			select 
				distinct
				   isnull(WithFlight.CustomsImportDocumentNumber, WithoutFlight.CustomsImportDocumentNumber) as BOE,
				   isnull(WithFlight.CustomsClearanceNumber, WithoutFlight.CustomsClearanceNumber) as OC,
				   isnull(WithFlight.CustomsAssessedValue, WithoutFlight.CustomsAssessedValue) as CAV,
				   isnull(WithFlight.CustomsTotalDutyAmount, WithoutFlight.CustomsTotalDutyAmount) as TotalDuty,
				   Com_Inspection.InspectionRequestedOnDt as rfe,
				   Com_Inspection.MovedToInspectionDt as ffe,
				   shipmentVerification.AirlineDeliveryAuthorizationNo as EDONumber,
				   shipmentVerification.AirlineDeliveryAuthorizationDt as EDODate
			from
		       Shipment_Master left join                 
		       (select 
		                     Imp_ShipmentVerification.AirlineDeliveryAuthorizationNo,
		                     Imp_ShipmentVerification.AirlineDeliveryAuthorizationDt,
		                      flight.CustomsFlightNumber, 
		                      Imp_ShipmentVerification.ShipmentId,
		                      flight.FlightKey,
		                      flight.FlightDate
		              from 
		                      Imp_ShipmentVerification inner join
		                      flight 
		                             on imp_shipmentVerification.FlightId = flight.Flight_ID
		       ) shipmentVerification
		              on Shipment_Master.ShipmentId = shipmentVerification.ShipmentId left join
		       Customs_ImportShipment WithoutFlight
		              on Shipment_Master.ShipmentNumber = WithoutFlight.ShipmentNumber  left join
		       Customs_ImportShipment WithFlight
		              on Shipment_Master.ShipmentNumber = WithFlight.ShipmentNumber and
		                      shipmentVerification.CustomsFlightNumber = WithFlight.CustomsImportFlightNumber left join
		       Com_Inspection
		              on     Shipment_Master.ShipmentNumber = Com_Inspection.ShipmentNumber and
		                      cast(Shipment_Master.ShipmentDate as date) = cast(Com_Inspection.ShipmentDate as date) and
		                      shipmentVerification.FlightKey = Com_Inspection.FlightKey and
		                      cast(shipmentVerification.FlightDate as date) = cast(Com_Inspection.FlightDate as date)
			where 
		       Shipment_Master.ShipmentNumber = #{shipmentNumber} and 
		       Shipment_Master.ShipmentDate = cast(#{shipmentDate} as date)
		) CustomsInfo
		group by			
		    CustomsInfo.EDONumber,
		    CustomsInfo.EDODate
	]]>		
	</select>

	<resultMap
		type="com.ngen.cosys.shipment.information.model.ShipmentFlightCustomsInfo"
		id="IncomingFlightCustomsInfoResultMap">
		<result column="RFE" property="rfe"></result>
		<result column="FFE" property="ffe"></result>
		<result column="BOE" property="boe"></result>
		<result column="OC" property="oc"></result>
		<result column="CAV" property="cav"></result>
		<result column="TotalDuty" property="totalDuty"></result>
		<result column="EDONumber" property="edoNumber"></result>
		<result column="EDODate" property="edoDate"></result>
	</resultMap>
	
	<!-- Damage Information for a ShipmentId/FlightId Query -->
	
	<select id="sqlGetDamageInfo"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
		resultMap="DamageInfoResultMap">
		select 
			Com_DamageInfo.FlightId,
			Com_DamageInfo.ReferenceId,
			Com_DamageLineItems.NatureOfDamage,
			Com_DamageLineItems.DamagedPieces,
			Com_DamageLineItems.Occurrence,
			Com_DamageLineItems.Severity
		from
			Com_DamageInfo inner join
			Com_DamageLineItems 
				on Com_DamageInfo.DamageInfoId = Com_DamageLineItems.DamageInfoId
		where
			Com_DamageInfo.ReferenceId = #{shipmentId} 
		<if test="flightId != null">
			and Com_DamageInfo.FlightId = #{flightId}
		</if>
	</select>
	
	
	<!-- Damage Information for a ShipmentId/FlightId Result Map -->
	
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentDamageInfoModel" 
		id="DamageInfoResultMap">
	 	<id column="FlightId" property="flightId"/>
		<result column="ReferenceId" property="referenceId"></result>
		<result column="NatureOfDamage" property="natureOfDamage"></result>
		<result column="DamagedPieces" property="damagedPieces"></result>
		<result column="Occurrence" property="occurrence"></result>
		<result column="Severity" property="severity"></result>	
	</resultMap>
	
	
	<!-- TRM Information Query -->
	
	<select id="sqlGetTrmInfo" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
			resultMap="TrmInfoResultMap">
		select 
			Transhipment_TransferManifestByAWB.TRMNumber,
			Transhipment_TransferManifestByAWB.CarrierCodeFrom,
			Transhipment_TransferManifestByAWB.CarrierCodeTo,
			Transhipment_TransferManifestByAWB.FinalizedFlag,
			Transhipment_TransferManifestByAWB.FinalizedBy,
			Transhipment_TransferManifestByAWB.FinalizedDate,
			Transhipment_TransferManifestByAWBInfo.Pieces,
			Transhipment_TransferManifestByAWBInfo.Weight
		From 
			Transhipment_TransferManifestByAWB inner join
			Transhipment_TransferManifestByAWBInfo
				on Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId
		where			
			Transhipment_TransferManifestByAWBInfo.ShipmentNumber = #{shipmentNumber} and 
			Transhipment_TransferManifestByAWBInfo.ShipmentDate = #{shipmentDate}
	</select>
	
	<!-- TRM Information Result Map -->
	
	<resultMap type="com.ngen.cosys.shipment.information.model.ShipmentTransferManifestModel" id="TrmInfoResultMap">
		<result column="TRMNumber" property="trmNumber"></result>
		<result column="CarrierCodeFrom" property="transfereeCarrier"></result>
		<result column="CarrierCodeTo" property="receivingCarrier"></result>
		<result column="FinalizedFlag" property="finalized"></result>
		<result column="FinalizedBy" property="finalizedBy"></result>
		<result column="FinalizedDate" property="finalizedAt"></result>
		<result column="Pieces" property="pieces"></result>
		<result column="Weight" property="weight"></result>
	</resultMap>
	
	
	<!--Freight Out information for a outgoing shipment Query -->
	
	<select id="sqlGetFreightOutInfo"
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
			resultMap="FreightOutInfoResultMap">
	<![CDATA[
		select
			*
		from(
			select 
			    Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightOriginDate,
				Flt_OperativeFlight.FlightKey,	
				Flt_OperativeFlight_Legs.DateSTD,
				sum(Pieces) freightOutPieces,
				sum(Weight) freightOutWeight,
				(
					select
						string_agg(Shipment_Remarks.ShipmentRemarks, ' ') ShipmentRemarks
					from
						Shipment_Remarks 
					where 
						Shipment_Remarks.RemarkType = 'DEP' and
						Shipment_Remarks.ShipmentNumber = #{shipmentNumber} and
						Shipment_Remarks.ShipmentDate = #{shipmentDate} and
						Shipment_Remarks.Flight_ID = Shipment_FreightOut.FlightId
				) DEPRemarks,
				(select
						string_agg(Shipment_FreightOutSHC.SpecialHandlingCode, ' ')
					from(
						select
							distinct Shipment_FreightOutSHC.SpecialHandlingCode
						from
							Shipment_FreightOutSHC inner join
							Shipment_FreightOut innerShipment_FreightOut
								on Shipment_FreightOutSHC.ShipmentFreightOutId = innerShipment_FreightOut.ShipmentFreightOutId							
						where
							innerShipment_FreightOut.FlightId = Shipment_FreightOut.FlightId and
							innerShipment_FreightOut.ShipmentId = Shipment_FreightOut.ShipmentId
					)Shipment_FreightOutSHC
				) as shc
			from 
				Shipment_FreightOut inner join
				Flt_OperativeFlight 
					on Shipment_FreightOut.FlightId = Flt_OperativeFlight.Flight_ID inner join
				Flt_OperativeFlight_Legs
					on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and 
						Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport}
			where
				Shipment_FreightOut.ShipmentId = #{shipmentId} and
				not exists(
					select 
						null
					from
						Transhipment_TransferManifestByAWB inner join						
						Transhipment_TransferManifestByAWBInfo
							on Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId inner join
						Mst_Carrier 
							on Mst_Carrier.CarrierCode = Transhipment_TransferManifestByAWB.CarrierCodeTo
					where
						(Mst_Carrier.GroundHandlerCode = 'DNATA' or Mst_Carrier.GroundHandlerCode is null) and
						(Shipment_FreightOut.ReferenceDetails = Transhipment_TransferManifestByAWB.TRMNumber 
							OR Shipment_FreightOut.TRMNumber = Transhipment_TransferManifestByAWB.TRMNumber) and
						Transhipment_TransferManifestByAWBInfo.ShipmentNumber = #{shipmentNumber} and
						Transhipment_TransferManifestByAWBInfo.ShipmentDate = #{shipmentDate}
				) and
				Shipment_FreightOut.DeliveryOrderNo is null
			group by
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightOriginDate,
				Flt_OperativeFlight_Legs.DateSTD,
				Flt_OperativeFlight.FlightKey,
				Flt_OperativeFlight_Legs.DateSTD,
				Shipment_FreightOut.FlightId,
				Shipment_FreightOut.ShipmentId
			union
			select 
			 Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightOriginDate,
				Flt_OperativeFlight.FlightKey,	
				Flt_OperativeFlight_Legs.DateSTA as DateSTD,
				sum(Pieces) freightOutPieces,
				sum(Weight) freightOutWeight,
				(
					select
						string_agg(Shipment_Remarks.ShipmentRemarks, ' ') ShipmentRemarks
					from
						Shipment_Remarks 
					where 
						Shipment_Remarks.RemarkType = 'NON' and
						Shipment_Remarks.ShipmentNumber = #{shipmentNumber} and
						Shipment_Remarks.ShipmentDate = #{shipmentDate} and
						Shipment_Remarks.Flight_ID = Shipment_FreightOut.FlightId
				) DEPRemarks,
				(select
						string_agg(Shipment_FreightOutSHC.SpecialHandlingCode, ' ')
					from(
						select
							distinct Shipment_FreightOutSHC.SpecialHandlingCode
						from
							Shipment_FreightOutSHC inner join
							Shipment_FreightOut innerShipment_FreightOut
								on Shipment_FreightOutSHC.ShipmentFreightOutId = innerShipment_FreightOut.ShipmentFreightOutId							
						where
							innerShipment_FreightOut.FlightId = Shipment_FreightOut.FlightId and
							innerShipment_FreightOut.ShipmentId = Shipment_FreightOut.ShipmentId
					)Shipment_FreightOutSHC
				) as shc
			from 
				Shipment_FreightOut inner join
				Flt_OperativeFlight 
					on Shipment_FreightOut.FlightId = Flt_OperativeFlight.Flight_ID inner join
				Flt_OperativeFlight_Legs
					on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and 
						Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport}
			where
				Shipment_FreightOut.ShipmentId = #{shipmentId} and
				not exists(
					select
						1
					from
						Flt_OperativeFlight_Legs
					where
						Flt_OperativeFlight_Legs.Flight_ID = Flt_OperativeFlight.Flight_ID and
						Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport}
				) and
				not exists(
					select
						null
					from
						Transhipment_TransferManifestByAWB inner join
						Transhipment_TransferManifestByAWBInfo
							on Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId
					where
						(Shipment_FreightOut.ReferenceDetails = Transhipment_TransferManifestByAWB.TRMNumber 
                                         OR Shipment_FreightOut.TRMNumber = Transhipment_TransferManifestByAWB.TRMNumber) and
						Transhipment_TransferManifestByAWBInfo.ShipmentNumber = #{shipmentNumber} and
						Transhipment_TransferManifestByAWBInfo.ShipmentDate = #{shipmentDate}
				) and
				Shipment_FreightOut.DeliveryOrderNo is null
			group by
			 	Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
				Flt_OperativeFlight.Flight_ID,
				Flt_OperativeFlight.FlightOriginDate,
				Flt_OperativeFlight.FlightKey,
				Flt_OperativeFlight_Legs.DateSTA,
				Shipment_FreightOut.FlightId,
				Shipment_FreightOut.ShipmentId
			union
			select 
			    null as CarrierCode,
				null as FlightNumber,
				null as Flight_ID,
				null as FlightOriginDate,
				Transhipment_TransferManifestByAWB.TRMNumber as FlightKey,	
				Transhipment_TransferManifestByAWB.FinalizedDate as DateSTD,
				sum(Shipment_FreightOut.Pieces) freightOutPieces,
				sum(Shipment_FreightOut.Weight) freightOutWeight,
				null as DEPRemarks,
				(select
						string_agg(Shipment_FreightOutSHC.SpecialHandlingCode, ' ')
					from(
						select
							distinct Shipment_FreightOutSHC.SpecialHandlingCode
						from
							Shipment_FreightOutSHC inner join
							Shipment_FreightOut innerShipment_FreightOut
								on Shipment_FreightOutSHC.ShipmentFreightOutId = innerShipment_FreightOut.ShipmentFreightOutId							
						where
							innerShipment_FreightOut.FlightId = Shipment_FreightOut.FlightId and
							innerShipment_FreightOut.ShipmentId = Shipment_FreightOut.ShipmentId
					)Shipment_FreightOutSHC
				) as shc
			from 
				Shipment_FreightOut inner join				
                Transhipment_TransferManifestByAWB
					on (Shipment_FreightOut.ReferenceDetails = Transhipment_TransferManifestByAWB.TRMNumber 
                                         OR Shipment_FreightOut.TRMNumber = Transhipment_TransferManifestByAWB.TRMNumber) inner join
				Transhipment_TransferManifestByAWBInfo
					on Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId and
						Transhipment_TransferManifestByAWBInfo.ShipmentNumber = #{shipmentNumber} and
						Transhipment_TransferManifestByAWBInfo.ShipmentDate = #{shipmentDate} inner join
                Mst_Carrier 
        	        on Transhipment_TransferManifestByAWB.CarrierCodeTo = Mst_Carrier.CarrierCode
			where
				Shipment_FreightOut.ShipmentId = #{shipmentId} and
				not exists(
					select
						null
					from
						Flt_OperativeFlight inner join
						Flt_OperativeFlight_Legs
							on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
								Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport}
					where
						Flt_OperativeFlight.Flight_ID = Shipment_FreightOut.FlightId

				) and
				Shipment_FreightOut.DeliveryOrderNo is null
			group by
				Transhipment_TransferManifestByAWB.TRMNumber,
				Transhipment_TransferManifestByAWB.FinalizedDate,
				Shipment_FreightOut.FlightId,
				Shipment_FreightOut.ShipmentId
			union 
			select 
			    null as CarrierCode,
				null as FlightNumber,
				null as Flight_ID,
				null as FlightOriginDate,
			   'NON' as FlightKey,	
				CreatedDateTime as DateSTD,
				Pieces freightOutPieces,
				Weight freightOutWeight,				
				(
					select
						string_agg(Shipment_Remarks.ShipmentRemarks, ' ') ShipmentRemarks
					from
						Shipment_Remarks 
					where 
						Shipment_Remarks.RemarkType = 'NON' and
						Shipment_Remarks.ShipmentNumber = #{shipmentNumber} and
						Shipment_Remarks.ShipmentDate = #{shipmentDate} 
				) DEPRemarks,
				(select
						string_agg(Shipment_FreightOutSHC.SpecialHandlingCode, ' ')
					from(
						select
							distinct Shipment_FreightOutSHC.SpecialHandlingCode
						from
							Shipment_FreightOutSHC inner join
							Shipment_FreightOut innerShipment_FreightOut
								on Shipment_FreightOutSHC.ShipmentFreightOutId = innerShipment_FreightOut.ShipmentFreightOutId							
						where
							innerShipment_FreightOut.FlightId = Shipment_FreightOut.FlightId and
							innerShipment_FreightOut.ShipmentId = Shipment_FreightOut.ShipmentId
					)Shipment_FreightOutSHC
				) as shc
			from 
				Shipment_FreightOut 
			where
				Shipment_FreightOut.ShipmentId = #{shipmentId} and
				Shipment_FreightOut.TRMNumber is null and
				Shipment_FreightOut.FlightId is null and
				Shipment_FreightOut.DeliveryOrderNo is null 
			)FreighoutInfo
			order by
				FreighoutInfo.DateSTD
	]]>	 	
	</select>
	
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentFreightOutInfoModel" 
		id="FreightOutInfoResultMap">
		<result column="FlightKey" property="flightKey"></result>
		<result column="DateSTD" property="freightOutflightDate" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"></result>
		<result column="freightOutPieces" property="freightOutPieces"></result>
		<result column="freightOutWeight" property="freightOutWeight"></result>
		<result column="DEPRemarks" property="remarks"></result>
		<result column="shc" property="shc"></result>
        <result column="CarrierCode" property="carrierCode"></result>
		<result column="FlightNumber" property="flightNumber"></result>
		<result column="Flight_ID" property="flightId"></result>
		<result column="FlightOriginDate" property="flightOriginDate"></result>
	</resultMap>
	
	
	<!-- eAcceptance Shipment Information Query -->
	
	<select id="sqlGetEacceptanceInfo" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
	 		resultMap="EacceptanceInfoResultMap">
	
		select 
			Exp_eAcceptanceServiceInformation.ServiceNumber,
			Exp_eAcceptanceServiceInformation.ServiceCreationDateTime,
			Exp_eAcceptanceServiceInformation.AcceptanceType,
			Exp_eAcceptanceHandlingDefAccpt.AcceptanceDescription,
			Exp_eAcceptanceDocumentInformation.Piece,
			Exp_eAcceptanceDocumentInformation.Weight,
			Exp_eAcceptanceDocumentInformation.Status,
			Exp_eAcceptanceDocumentInformation.RequestedTemperatureRange,
			Exp_eAcceptanceDocumentInformation.TruckType,
			Exp_eAcceptanceDocumentInformation.EreceiptTriggerCount,
			Exp_eAcceptanceDocumentInformation.CarrierCode,
			#{checkDocumentAccepted} checkDocumentAccepted,
			case
				when Shipment_CheckListStatusNotCompleted.CompletedStatusCount > 0 then
					'PENDING'
				when (Shipment_CheckListStatusCompleted.CompletedStatusCount = 0 and
						Shipment_CheckListStatusNotCompleted.CompletedStatusCount = 0) then
					''
				when  Shipment_CheckListStatusCompleted.CompletedStatusCount > 0 then
					'COMPLETED'
			end CheckListStatus,
			case when 
		            (isnull(Exp_eAcceptanceDocumentInformation.Rejected,0) = 0 and
		            	(isnull(Exp_eAcceptanceDocumentInformation.PartConfirm,0) = 1 OR
		            		isnull(Exp_eAcceptanceDocumentInformation.FinalizeWeight,0) = 1) and
		            		(isnull(Exp_eAcceptanceDocumentInformation.Returned,0) = 0 ) and
							isnull(Shipment_Master.Locked, 0) = 0 and
						  isnull((select
                                        sum(Inventory.a)
                                    from(select
                                                count(1) a
                                            from
                                                Shipment_Inventory
                                            where
                                                Shipment_Inventory.Shipment_ID = Shipment_Master.ShipmentId and
                                                isnull(Shipment_Inventory.Locked, 0) = 0
                                            union
                                            select
                                                count(1) a
                                            from
                                                Shipment_FreightOut
                                            where
                                                Shipment_FreightOut.ShipmentId = Shipment_Master.ShipmentId
                                        ) Inventory), 0) > 0) 
                                         <if test ="checkDocumentAccepted == true" >
				                             AND Exp_EAcceptanceDocumentInformation.Accepted = 1
				                         </if>
                           then
		                1
		            else
		                0
		    end ReadyForLoad,
		    (
				select
					string_agg(Exp_eAcceptanceDocumentInfoSHC.SpecialHandlingCode, ' ') shc
				from	
					Exp_eAcceptanceDocumentInfoSHC
				where
					Exp_eAcceptanceDocumentInfoSHC.DocumentInformationId = Exp_eAcceptanceDocumentInformation.DocumentInformationId
			) as shc,
			case
				when Exp_eAcceptanceServiceInformation.AcceptanceType = 'PRE_LODGE_SHIPMENT' then
					(select
							cast(Agt_PrelodgeExportDocuments.DocumentPieces as  varchar) + '/' + 
								cast(Agt_PrelodgeExportDocuments.DocumentWeight as  varchar)
						from
							Agt_PrelodgeExportDocuments inner join
							Agt_PrelodgeExportService
								on Agt_PrelodgeExportDocuments.PrelodgeServiceId = Agt_PrelodgeExportService.PrelodgeServiceId
						where
							Agt_PrelodgeExportDocuments.ShipmentNumber = Exp_eAcceptanceDocumentInformation.ShipmentNumber and
							Agt_PrelodgeExportDocuments.ShipmentDate = Exp_eAcceptanceDocumentInformation.ShipmentDate and
							Agt_PrelodgeExportService.PrelodgeServiceNo = Exp_eAcceptanceServiceInformation.ServiceNumber) 
				when Exp_eAcceptanceServiceInformation.AcceptanceType = 'E_READY_SHIPMENTS' then
					(select
							cast(Shipment_FreightWayBill.Pieces as  varchar) + '/' + 
								cast(Shipment_FreightWayBill.Weight as  varchar)
						from
							Shipment_FreightWayBill
						where
							Shipment_FreightWayBill.AwbNumber = Exp_eAcceptanceDocumentInformation.ShipmentNumber and
							Shipment_FreightWayBill.AwbDate = Exp_eAcceptanceDocumentInformation.ShipmentDate) 
				when Exp_eAcceptanceServiceInformation.AcceptanceType = 'NAWB_SHIPMENT' then
					(select
							cast(Exp_NeutralAWB_Master.Pieces as  varchar) + '/' + 
								cast(Exp_NeutralAWB_Master.Weight as  varchar)
						from
							Exp_NeutralAWB_Master
						where
							Exp_NeutralAWB_Master.AwbNumber = Exp_eAcceptanceDocumentInformation.ShipmentNumber and
							Exp_NeutralAWB_Master.AwbDate = Exp_eAcceptanceDocumentInformation.ShipmentDate) 
				else
					cast(Exp_eAcceptanceDocumentInformation.Piece as  varchar) + '/' + 
								cast(Exp_eAcceptanceDocumentInformation.Weight as  varchar)
				end DeclaredPieceWeight
		from 
			Exp_eAcceptanceDocumentInformation inner join
			Exp_eAcceptanceServiceInformation
				on Exp_eAcceptanceDocumentInformation.ServiceInformationId = Exp_eAcceptanceServiceInformation.ServiceInformationId left join
			Shipment_Master
				on Exp_eAcceptanceDocumentInformation.ShipmentNumber = Shipment_Master.ShipmentNumber and
					Exp_eAcceptanceDocumentInformation.ShipmentDate = Shipment_Master.ShipmentDate inner join
			Exp_eAcceptanceHandlingDefAccpt
				on Exp_eAcceptanceServiceInformation.AcceptanceType = Exp_eAcceptanceHandlingDefAccpt.AcceptanceType left join
			(
				select 					
					Shipment_CheckListStatus.ShipmentNumber,
					Shipment_CheckListStatus.ShipmentDate,
					count(1) CompletedStatusCount
				from 
					Shipment_CheckListStatus inner join
					Com_CheckListTypes
						on Shipment_CheckListStatus.ComCheckListTypesId = Shipment_CheckListStatus.ComCheckListTypesId
				where					
					Shipment_CheckListStatus.Status in ('COMPLETED')
				group by
					Shipment_CheckListStatus.ShipmentNumber,
					Shipment_CheckListStatus.ShipmentDate
			)Shipment_CheckListStatusCompleted
				on  Shipment_CheckListStatusCompleted.ShipmentNumber = Exp_eAcceptanceDocumentInformation.ShipmentNumber and
					Shipment_CheckListStatusCompleted.ShipmentDate = Exp_eAcceptanceDocumentInformation.ShipmentDate left join
			(
				select 					
					Shipment_CheckListStatus.ShipmentNumber,
					Shipment_CheckListStatus.ShipmentDate,
					count(1) CompletedStatusCount
				from 
					Shipment_CheckListStatus inner join
					Com_CheckListTypes
						on Shipment_CheckListStatus.ComCheckListTypesId = Shipment_CheckListStatus.ComCheckListTypesId
				where					
					Shipment_CheckListStatus.Status not in ('COMPLETED')
				group by
					Shipment_CheckListStatus.ShipmentNumber,
					Shipment_CheckListStatus.ShipmentDate
			)Shipment_CheckListStatusNotCompleted
				on  Shipment_CheckListStatusNotCompleted.ShipmentNumber = Exp_eAcceptanceDocumentInformation.ShipmentNumber and
					Shipment_CheckListStatusNotCompleted.ShipmentDate = Exp_eAcceptanceDocumentInformation.ShipmentDate
		where
			Exp_eAcceptanceDocumentInformation.ShipmentNumber = #{shipmentNumber} and
			Exp_eAcceptanceDocumentInformation.ShipmentDate = #{shipmentDate}		
	</select>
	
	<!-- eAcceptance Shipment Information Result Map -->
	<!--  Need to add inventory details -->
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentAcceptanceModel" 
		id="EacceptanceInfoResultMap">
		<result column="ServiceNumber" property="eAcceptance"></result>
		<result column="ServiceCreationDateTime" property="serviceCreationDateTime" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"></result>
		<result column="Piece" property="acceptedPiece"></result>
		<result column="Weight" property="acceptedWeight"></result>
		<result column="AcceptanceDescription" property="acceptanceType"></result>
		<result column="Status" property="acceptanceStatus"></result>
		<result column="CheckListStatus" property="checkList"></result>
		<result column="RequestedTemperatureRange" property="requestedTemperatureRange"></result>
		<result column="TruckType" property="truckType"></result>
		<result column="ReadyForLoad" property="readyForLoad"></result>
		<result column="shc" property="shc"></result>
		<result column="DeclaredPieceWeight" property="declaredPieceWeight"></result>
		<result column="EreceiptTriggerCount" property="ereceiptTriggerCount"></result>
		<result column="CarrierCode" property="carrierCode"></result>
		<!-- <result column="checkDocumentAccepted" property="checkDocumentAccepted"></result>  -->
	</resultMap>

	<!-- Export Loading Booking info Query -->
	
	<select id="sqlExportLoadingInfo" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentFlightModel" 
			resultMap="LoadingInfoResultMap">
	<![CDATA[
		select
			Exp_AssignedULDTrolleyToFlight.FlightId,
			Exp_AssignedULDTrolleyToFlight.ULDTrolleyNumber,
			Exp_LoadedShipmentInfo.ShipmentId,
			sum(Exp_LoadedShipmentInfo.Pieces) loadedPieces,
			sum(Exp_LoadedShipmentInfo.Weight) loadedWeight,
			case
				when(Exp_AssignedULDTrolleyToFlight.LoadingCompletedOn is not null) then
					1
				else
					0
				end buildupComplete,			
			case
				when (select
							count(1)
						from
							Exp_Screening
						where
							Exp_Screening.ShipmentNumber = Shipment_Master.ShipmentNumber and
							Exp_Screening.ShipmentDate = Shipment_Master.ShipmentDate and
							Exp_Screening.ScreeningEndDate is not null
					) > 0 then
						'COMPLETED'
				when (
					select
							count(1)
						from
							Exp_Screening
						where
							Exp_Screening.ShipmentNumber = Shipment_Master.ShipmentNumber and
							Exp_Screening.ShipmentDate = Shipment_Master.ShipmentDate and
							Exp_Screening.ScreeningEndDate is null
				) > 0 then
					'PENDING'
				when (
					select
							count(1)
						from
							Exp_Screening
						where
							Exp_Screening.ShipmentNumber = Shipment_Master.ShipmentNumber and
							Exp_Screening.ShipmentDate = Shipment_Master.ShipmentDate 
				) = 0 then
					NULL	
			end as flightScreeningCompleted,			
			(
				select
					string_agg(Exp_LoadedShipmentSHCInfo.SpecialHandlingCode,' ') SpecialHandlingCode
				from(
					select
						distinct Exp_LoadedShipmentSHCInfo.SpecialHandlingCode
					from
						Exp_LoadedShipmentInfo innerLoadedShipmentInfo inner join
						Exp_LoadedShipmentSHCInfo
							on innerLoadedShipmentInfo.LoadedShipmentInfoId = Exp_LoadedShipmentSHCInfo.LoadedShipmentInfoId
					where
						innerLoadedShipmentInfo.AssUldTrolleyId = Exp_AssignedULDTrolleyToFlight.AssUldTrolleyId and
						innerLoadedShipmentInfo.ShipmentId = Exp_LoadedShipmentInfo.ShipmentId) Exp_LoadedShipmentSHCInfo
			) as shc				
		from
			Shipment_Master inner join
			Exp_LoadedShipmentInfo
				on Shipment_Master.ShipmentId = Exp_LoadedShipmentInfo.ShipmentId inner join
			Exp_AssignedULDTrolleyToFlight
				on Exp_LoadedShipmentInfo.AssUldTrolleyId = Exp_AssignedULDTrolleyToFlight.AssUldTrolleyId
		where
			Shipment_Master.ShipmentId = #{shipmentId} and
			Exp_AssignedULDTrolleyToFlight.FlightId = #{flightId}
		group by
			Exp_AssignedULDTrolleyToFlight.FlightId,
			Exp_AssignedULDTrolleyToFlight.ULDTrolleyNumber,
			Exp_LoadedShipmentInfo.ShipmentId,
			Exp_AssignedULDTrolleyToFlight.LoadingCompletedOn,
			Shipment_Master.ShipmentNumber,
			Shipment_Master.ShipmentDate,			
			Exp_AssignedULDTrolleyToFlight.AssUldTrolleyId
	]]>	
	</select>

	<!-- Export Loading Booking info Result Map -->
	<!-- Need to add some more field -->
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentLoadingInfoModel" 
		id="LoadingInfoResultMap">
		<id column="FlightId" property="flightId"/>
		<id column="ShipmentId" property="shipmentId"/>
		<result column="ULDTrolleyNumber" property="assignedUldOrTrolley"></result>
		<result column="loadedPieces" property="loadedPieces"></result>
		<result column="loadedWeight" property="loadedWeight"></result>
		<result column="buildupComplete" property="buildupComplete"></result>
		<result column="offloadPieces" property="offLoadedPieces"></result>
		<result column="offloadWeight" property="offLoadedWeight"></result>
		<result column="flightScreeningCompleted" property="flightScreeningCompleted"></result>
		<result column="flightFsuStatus" property="flightFsuStatus"></result>
		<result column="shc" property="shc"></result>
	</resultMap>
	
	<!--  Service charge query -->
	
	<select id="sqlGetServiceCharge" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
			resultMap="ServiceChargeInfoResultMap">	
	 	select 
	 		ServiceType,
	 		Quantity,
	 		Duration,
	 		Amount,
	 		Paid,
	 		ReceiptNumber,
	 		WaivedNumber
	 	from 
	 		Billing_Waiver
	 	where ShipmentNumber = #{shipmentNumber}	
	 		and ShipmentDate = #{shipmentDate}	
	</select>
	
	<!-- Service charge Result Map -->
	
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentBillingModel" 
		id="ServiceChargeInfoResultMap">
		<result column="ServiceType" property="serviceType"></result>
		<result column="Quantity" property="quantity"></result>
		<result column="Duration" property="duration"></result>
		<result column="Amount" property="amount"></result>
		<result column="Paid" property="paid"></result>
		<result column="ReceiptNumber" property="receiptNumber"></result>
		<result column="WaivedAmount" property="waivedAmount"></result>
	</resultMap>
	
	
	<!--  House info details -->
	
	<select id="sqlGetShipmentHouseInfo" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
			resultMap="HouseInfoResultMap">
		SELECT 
		      ShipmentId
		      ,ShipmentType
		      ,Number
		      ,Pieces
 		 FROM 
 		 	Shipment_HouseInformation	
 		where 
 			ShipmentId = #{shipmentId}
 	</select>
	
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentHouseInfoModel" 
		id="HouseInfoResultMap">
		<id column="ShipmentId" property="shipmentId"/>
		<result column="ShipmentType" property="houseInfoShipmentType"></result>
		<result column="Number" property="houseInfoTagNumber"></result>
		<result column="Number" property="houseInfoRfidTagId"></result>
		<result column="Pieces" property="houseInfoRfidTagPieces"></result>
	</resultMap>
	
	<!--  House info summary details -->
	
	<select id="sqlGetHouseSummary" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
			resultMap="HouseInfoSummaryResultMap">
		SELECT 
		      case 
		      	when (ShipmentType = 'COU') then
		      		'Courier Tag'
		      	when (ShipmentType = 'XPS') then
		      		'XPS Tag'
		      end shipmentType,		
		      count(1) as HouseCount
 		 FROM 
 		 	Shipment_HouseInformation	
 		where 
 			ShipmentId = #{shipmentId}
 		group by ShipmentType
 	</select>
	
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentHouseInfoSummaryModel" 
		id="HouseInfoSummaryResultMap">
		<id column="ShipmentId" property="shipmentId"/>
		<result column="ShipmentType" property="houseInfoShipmentType"></result>
		<result column="HouseCount" property="houseInfoCount"></result>
	</resultMap>
	
	<select id="sqlGetFWBMessageInfo" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
			resultMap="FWBMessageResultMap">
		select 
			SubMessageType,
			Message,
			SentOn
		from 
			Interface_OutgoingMessageLog 
		where 
			ShipmentNumber = #{shipmentNumber} and 
			ShipmentDate = #{shipmentDate} and
			MessageType = 'FWB' and
			Status = 'SENT'
		union		
		select
			*
		from(
			select 
				TOP 1
				SubMessageType,
				Message,
				ReceivedOn as SentOn
			from 
				Interface_IncomingMessageLog 
			where 
				ShipmentNumber = #{shipmentNumber} and 
				ShipmentDate = #{shipmentDate} and
				MessageType = 'FWB' and
				Status = 'PROCESSED'
			order by
				ReceivedOn desc
		)IncomingLog
 	</select>
	
	
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentInfoMessageModel" 
		id="FWBMessageResultMap">
		<result column="SubMessageType" property="messageType"></result>
		<result column="Message" property="message"></result>
		<result column="SentOn" property="messageSentOn"></result>
	</resultMap>
	
	
	<select id="sqlGetFSUMessageInfo" 
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
		resultMap="FSUMessageResultMap">
		select
			*
		from(	
			select 					
				Interface_OutgoingMessageLog.SubMessageType + ' (' + Interface_OutgoingMessageLog.InterfacingSystem + ')' as SubMessageType,
				Interface_OutgoingMessageLog.Message,
				AcknowledgementReceivedOn as SentOn
			from 
				Interface_OutgoingMessageLog 
			where 
				Interface_OutgoingMessageLog.ShipmentNumber = #{shipmentNumber} and
				Interface_OutgoingMessageLog.ShipmentDate = #{shipmentDate} and
				Interface_OutgoingMessageLog.MessageType = 'FSU' and
				(Interface_OutgoingMessageLog.Status = 'Sent' or Interface_OutgoingMessageLog.Status = '' or Interface_OutgoingMessageLog.Status is null)
			union
			select 
				Interface_IncomingMessageLog.SubMessageType + ' (' + Interface_IncomingMessageLog.InterfacingSystem + ')' as SubMessageType,
				Interface_IncomingMessageLog.Message,
				Interface_IncomingMessageLog.ReceivedOn as SentOn
			from 
				Interface_IncomingMessageLog 
			where 
				Interface_IncomingMessageLog.ShipmentNumber = #{shipmentNumber} and
				Interface_IncomingMessageLog.ShipmentDate = #{shipmentDate} and
				Interface_IncomingMessageLog.MessageType = 'FSU' and
				Interface_IncomingMessageLog.Status = 'PROCESSED'
		)FSUMessageInfo
		order by
			FSUMessageInfo.SentOn desc		
 	</select>
	
	
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentInfoMessageModel" 
		id="FSUMessageResultMap">
		<result column="SubMessageType" property="messageType"></result>
		<result column="Message" property="message"></result>
		<result column="SentOn" property="messageSentOn"  javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"></result>
	</resultMap>
	
	
	<select id="sqlGetFHLMessageInfo" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
			resultMap="FHLMessageResultMap">
		select 
			SubMessageType,
			Message,
			SentOn
		from 
			Interface_OutgoingMessageLog 
		where 
			ShipmentNumber = #{shipmentNumber} and 
			ShipmentDate = #{shipmentDate} and
			MessageType = 'FHL' and
			Status = 'SENT'
		union
		select 
			SubMessageType,
			Message,
			ReceivedOn as SentOn
		from 
			Interface_IncomingMessageLog 
		where 
			ShipmentNumber = #{shipmentNumber} and 
			ShipmentDate = #{shipmentDate} and
			MessageType = 'FHL' and
			Status = 'PROCESSED'
 	</select>
	
	
	<resultMap 
		type="com.ngen.cosys.shipment.information.model.ShipmentInfoMessageModel" 
		id="FHLMessageResultMap">
		<result column="SubMessageType" property="messageType"></result>
		<result column="Message" property="message"></result>
		<result column="SentOn" property="messageSentOn"></result>
	</resultMap>
	
	
	<select id="sqlGetShipmentInfoShipmentRemarks"
		resultType="com.ngen.cosys.shipment.awb.model.ShipmentRemarksModel"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		select 
			Shipment_Remarks.ShipmentRemarks as shipmentRemarks
		From 
			Shipment_Remarks
		Where			
			Shipment_Remarks.ShipmentNumber = #{shipmentNumber} and
			Shipment_Remarks.ShipmentDate = #{shipmentDate} and
			Shipment_Remarks.Flight_ID is null and
			Shipment_Remarks.ShipmentRemarks != '' and
			Shipment_Remarks.ShipmentRemarks is not null and
			Shipment_Remarks.RemarkType not in ('EWR')		
		order by
			Shipment_Remarks.Created_DateTime desc
	</select>
	
	<select id="sqlGetShipmentFlightInfoShipmentRemarks"
		resultType="com.ngen.cosys.shipment.awb.model.ShipmentRemarksModel"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentFlightModel">
		select 
			Shipment_Remarks.ShipmentRemarks as shipmentRemarks
		From 
			Shipment_Remarks inner join
			Shipment_Master
				on Shipment_Remarks.ShipmentNumber = Shipment_Master.ShipmentNumber and
					Shipment_Remarks.ShipmentDate = Shipment_Master.ShipmentDate
		Where			
			Shipment_Master.ShipmentId = #{shipmentId} and
			Shipment_Remarks.Flight_ID = #{flightId} and
			Shipment_Remarks.ShipmentRemarks is not null
	</select>
	
	<select id="sqlGetShipmentAcceptanceShipmentRemarks"
		resultType="com.ngen.cosys.shipment.awb.model.ShipmentRemarksModel"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentAcceptanceModel">
		select 
			Exp_eAcceptanceRemarks.Details as shipmentRemarks
		from
			Exp_eAcceptanceServiceInformation inner join			
			Exp_eAcceptanceDocumentInformation			
				on Exp_eAcceptanceServiceInformation.ServiceInformationId = Exp_eAcceptanceDocumentInformation.ServiceInformationId inner join
			Exp_eAcceptanceRemarks
				on Exp_eAcceptanceDocumentInformation.DocumentInformationId = Exp_eAcceptanceRemarks.DocumentInformationId
		Where			
			Exp_eAcceptanceDocumentInformation.ShipmentNumber = #{shipmentNumber} and
			Exp_eAcceptanceDocumentInformation.ShipmentDate = #{shipmentDate}
	</select>
	
	
	
	<!-- delete delivery req auth details starts -->
	
	<delete id="deleteDeliveryReqAuthDetailsFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Imp_DeliveryRequestLocalAuthorityDetails 
		WHERE ImpDeliveryRequestLocalAuthorityInformationId IN (SELECT impDelReqAuthData.ImpDeliveryRequestLocalAuthorityInformationId FROM Imp_DeliveryRequestLocalAuthorityDetails impDelReqAuthData
	 	join Imp_DeliveryRequestLocalAuthorityInformation impauthinfo on 
			impauthinfo.ImpDeliveryRequestLocalAuthorityInformationId=impDelReqAuthData.ImpDeliveryRequestLocalAuthorityInformationId
			join Imp_DeliveryRequest impDevReq on impDevReq.ImpDeliveryRequestId=impauthinfo.ImpDeliveryRequestId
		where 
			impDevReq.ShipmentID = #{shipmentId})
	</delete>
	
	<!-- delete delivery req auth details end -->
	
	
	
	<!-- delete delivery req auth info starts -->
	
	<delete id="deleteDeliveryReqAuthInfoFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Imp_DeliveryRequestLocalAuthorityInformation WHERE ImpDeliveryRequestId IN (
		 SELECT impDelReq.ImpDeliveryRequestId FROM
			Imp_DeliveryRequest impDelReq join Imp_DeliveryRequestLocalAuthorityInformation impDelAuth 
			ON impDelReq.ImpDeliveryRequestId=impDelAuth.ImpDeliveryRequestId 
		where 
			impDelReq.ShipmentID = #{shipmentId})
	</delete>
	
	<!-- delete delivery req auth info end -->
	
	
	<!-- delete delivery req starts -->
	
	<delete id="deleteDeliveryReqFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete 
		from 
			Imp_DeliveryRequest
		 where
		    ShipmentID = #{shipmentId}
	</delete>
	
	<delete id="deleteDeliveryFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete 
		from 
			Imp_Delivery
		 where
		    ShipmentID = #{shipmentId}
	</delete>
	
	<!-- delete delivery req end -->
	
	<!-- delete breakdown starts -->
	
	<delete id="deleteBreakdownShcFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Imp_BreakDownStorageSHCInfo WHERE ImpBreakDownStorageInfoId IN (SELECT shc.ImpBreakDownStorageInfoId FROM Imp_BreakDownStorageSHCInfo shc join Imp_BreakDownStorageInfo info on 
			shc.ImpBreakDownStorageInfoId=info.ImpBreakDownStorageInfoId
			join Imp_BreakdownULDTrolleyinfo trolley on trolley.ImpBreakDownULDTrolleyInfoId=info.ImpBreakDownULDTrolleyInfoId
			join Imp_ShipmentVerification shp on shp.ImpShipmentVerificationId=trolley.ImpShipmentVerificationId
		where 
			shp.ShipmentID = #{shipmentId})
	</delete>
	
	
	<delete id="deleteBreakdownHouseInfoFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Imp_BreakDownHouseInfo WHERE ImpBreakDownStorageInfoId IN (SELECT brkdninfo.ImpBreakDownStorageInfoId FROM Imp_BreakDownHouseInfo brkdninfo 
			join Imp_BreakDownStorageInfo brkdnstinfo on brkdnstinfo.ImpBreakDownStorageInfoId=brkdninfo.ImpBreakDownStorageInfoId
			join Imp_BreakdownULDTrolleyinfo trolley on trolley.ImpBreakDownULDTrolleyInfoId=brkdnstinfo.ImpBreakDownULDTrolleyInfoId
			join Imp_ShipmentVerification shp on shp.ImpShipmentVerificationId=trolley.ImpShipmentVerificationId
		where 
			shp.ShipmentID = #{shipmentId})
	</delete>
	
	
	
	<delete id="deleteBreakdownStorageFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Imp_BreakDownStorageInfo WHERE ImpBreakDownULDTrolleyInfoId IN (SELECT info.ImpBreakDownULDTrolleyInfoId FROM Imp_BreakDownStorageInfo info 
			join Imp_BreakdownULDTrolleyinfo trolley on trolley.ImpBreakDownULDTrolleyInfoId=info.ImpBreakDownULDTrolleyInfoId
			join Imp_ShipmentVerification shp on shp.ImpShipmentVerificationId=trolley.ImpShipmentVerificationId
		where 
			shp.ShipmentID = #{shipmentId})
	</delete>
	
	
	<delete id="deleteBreakdownTrolleyFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Imp_BreakdownULDTrolleyinfo WHERE ImpShipmentVerificationId IN (SELECT trolley.ImpShipmentVerificationId FROM  Imp_BreakdownULDTrolleyinfo trolley
			join Imp_ShipmentVerification shp on shp.ImpShipmentVerificationId=trolley.ImpShipmentVerificationId
		where
			 shp.ShipmentID = #{shipmentId})
	</delete>
	
	<!-- delete breakdown end -->
	
	
	<delete id="deleteShpVerDocInfoFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Imp_ShipmentVerificationDocumentInfo WHERE 
			 ImpShipmentVerificationId 
			 IN ( SELECT impShpDocInfo.ImpShipmentVerificationId 
				FROM Imp_ShipmentVerificationDocumentInfo impShpDocInfo
				 join Imp_ShipmentVerification impShpInfo on 
						impShpDocInfo.ImpShipmentVerificationId=impShpInfo.ImpShipmentVerificationId
		where 
			impShpInfo.ShipmentID = #{shipmentId})
	</delete>
	
	
	<!-- delete shipment verification  starts -->
	
	<delete id="deleteBreakdownShpVerFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from 
			Imp_ShipmentVerification 
		where 
			ShipmentID = #{shipmentId}
	</delete>
	
	<!-- delete shipment verification  end -->
	
	
	<!-- delete shipment inventory  starts -->
	
	<delete id="deleteShpInvShcFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Shipment_inventoryshc WHERE ShipmentInventoryId IN (SELECT invShc.ShipmentInventoryId FROM
			Shipment_inventoryshc invShc join Shipment_inventory shpInv 
			ON invShc.ShipmentInventoryId=shpInv.ShipmentInventory_Id 
		where 
			shpInv.Shipment_ID = #{shipmentId})
	</delete>
	
	
	<delete id="deleteShpInvFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from 
			Shipment_inventory  
		where
			Shipment_ID = #{shipmentId}
	</delete>
	
	
	<!-- delete shipment inventory  end -->
	
	
	<!-- delete shipment arrival manifest starts -->
	
	<delete id="deleteArrManShpShcFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
	<![CDATA[
		delete from Imp_ArrivalManifestByShipmentSHC WHERE ImpArrivalManifestShipmentInfoId in (
			select
				arrShc.ImpArrivalManifestShipmentInfoId 
			from
				Imp_ArrivalManifestByShipmentSHC arrShc inner join  
				Imp_ArrivalmanifestShipmentinfo arrSI
					on arrShc.ImpArrivalManifestShipmentInfoId = arrSI.ImpArrivalManifestShipmentInfoId inner join 
				Imp_ArrivalmanifestULD arrUld
					on arrSI.ImpArrivalManifestULDId = arrUld.ImpArrivalManifestULDId inner join 
				Imp_ArrivalmanifestBySegment arrSeg
					on arrUld.ImpArrivalManifestBySegmentId = arrSeg.ImpArrivalManifestBySegmentId inner join 
				Imp_ArrivalManifestByFlight arrFlight
					on arrSeg.ImpArrivalManifestByFlightId = arrFlight.ImpArrivalManifestByFlightId
			where  
				arrSI.ShipmentNumber = #{shipmentNumber} and
				arrSI.ShipmentDate = #{shipmentDate}
		)
	]]>
	</delete>
	
	<delete id="deleteArrManShpOnwordMovementFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
	<![CDATA[
		delete from Imp_ArrivalManifestShipmentOnwardMovement WHERE ImpArrivalManifestShipmentInfoId in (
			select
				Imp_ArrivalManifestShipmentOnwardMovement.ImpArrivalManifestShipmentInfoId 
			from
				Imp_ArrivalManifestShipmentOnwardMovement inner join  
				Imp_ArrivalmanifestShipmentinfo arrSI
					on Imp_ArrivalManifestShipmentOnwardMovement.ImpArrivalManifestShipmentInfoId = arrSI.ImpArrivalManifestShipmentInfoId inner join 
				Imp_ArrivalmanifestULD arrUld
					on arrSI.ImpArrivalManifestULDId = arrUld.ImpArrivalManifestULDId inner join 
				Imp_ArrivalmanifestBySegment arrSeg
					on arrUld.ImpArrivalManifestBySegmentId = arrSeg.ImpArrivalManifestBySegmentId inner join 
				Imp_ArrivalManifestByFlight arrFlight
					on arrSeg.ImpArrivalManifestByFlightId = arrFlight.ImpArrivalManifestByFlightId
			where  
				arrSI.ShipmentNumber = #{shipmentNumber} and
				arrSI.ShipmentDate = #{shipmentDate}
		)
	]]>
	</delete>
	
	<delete id="deleteArrMansiFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
	<![CDATA[
		delete from Imp_ArrivalmanifestShipmentinfo WHERE ImpArrivalManifestShipmentInfoId in (
			select 
				arrSI.ImpArrivalManifestShipmentInfoId 
			from
				Imp_ArrivalmanifestShipmentinfo arrSI inner join 
				Imp_ArrivalmanifestULD arrUld
					on arrSI.ImpArrivalManifestULDId = arrUld.ImpArrivalManifestULDId inner join 
				Imp_ArrivalmanifestBySegment arrSeg
					on arrUld.ImpArrivalManifestBySegmentId = arrSeg.ImpArrivalManifestBySegmentId inner join 
				Imp_ArrivalManifestByFlight arrFlight
					on arrSeg.ImpArrivalManifestByFlightId = arrFlight.ImpArrivalManifestByFlightId
				where  
					arrSI.ShipmentNumber = #{shipmentNumber} and
					arrSI.ShipmentDate = #{shipmentDate}
		)	
	]]>
	</delete>
		
	<delete id="deleteArrManUldFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
	<![CDATA[		
		delete from Imp_ArrivalmanifestULD WHERE ImpArrivalManifestULDId in (
			select 
				arrUld.ImpArrivalManifestULDId 
			from
				Imp_ArrivalmanifestULD arrUld inner join 
				Imp_ArrivalmanifestBySegment arrSeg
					on arrUld.ImpArrivalManifestBySegmentId = arrSeg.ImpArrivalManifestBySegmentId inner join 
				Imp_ArrivalManifestByFlight arrFlight
					on arrSeg.ImpArrivalManifestByFlightId = arrFlight.ImpArrivalManifestByFlightId inner join
				Imp_ShipmentVerification shpVerf
					on arrFlight.FlightId = shpVerf.FlightId
			where
				shpVerf.ShipmentId = #{shipmentId} and
				not exists(
					select
						null
					from
						Imp_ArrivalmanifestShipmentinfo
					where
						Imp_ArrivalmanifestShipmentinfo.ImpArrivalManifestULDId = arrUld.ImpArrivalManifestULDId
				)
		)
	]]>
	</delete>
	
	<delete id="deleteshpOtherChginfoFromSI"
		 parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		 delete from
		 	 Shipment_OtherChargeInfo 
		 where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteshpshcInfoFromSI"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from
		 	 Shipment_MasterSHC 
		 where ShipmentId = #{shipmentId}
	</delete>
	
	
	<delete id="deleteshpshcHandlingInfoFromSI"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from
		 	 Shipment_MasterSHCHandlingGroup 
		 where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteshpCusConInfoFromSI"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Shipment_MasterCustomerContactInfo WHERE ShipmentCustomerAddInfoId IN (
			SELECT shpCusConInfo.ShipmentCustomerAddInfoId FROM
			Shipment_MasterCustomerContactInfo shpCusConInfo join Shipment_MasterCustomerAddressInfo shpCusAddInfo 
			ON shpCusConInfo.ShipmentCustomerAddInfoId=shpCusAddInfo.ShipmentCustomerAddInfoId join Shipment_MasterCustomerInfo shpCusInfo
			ON  shpCusInfo.ShipmentCustomerInfoId =shpCusAddInfo.ShipmentCustomerInfoId
		where 
			shpCusInfo.ShipmentID = #{shipmentId})
	</delete>
	
	
	<delete id="deleteshpCusAddInfoFromSI"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Shipment_MasterCustomerAddressInfo WHERE ShipmentCustomerAddInfoId IN (
		SELECT shpCusAddInfo1.ShipmentCustomerAddInfoId FROM Shipment_MasterCustomerAddressInfo shpCusAddInfo1
			join Shipment_MasterCustomerInfo shpCusInfo1
			ON  shpCusAddInfo1.ShipmentCustomerInfoId =shpCusInfo1.ShipmentCustomerInfoId
		where 
			shpCusInfo1.ShipmentID = #{shipmentId})
	</delete>
	
	
	<delete id="deleteshpCusInfoFromSI"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Shipment_MasterCustomerInfo  
		where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteshpMstHandAreaFromSI"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Shipment_MasterHandlingArea where ShipmentId = #{shipmentId}
	</delete>
	
	
	<delete id="deleteshpMstRouteInfoFromSI"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Shipment_MasterRoutingInfo where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteshpLocAuthReqDetailsFromSI"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete 
		from 
			Custom_ShipmentLocalAuthorityRequirementDetail where CustomShipmentLocalAuthorityRequirementDetailId in (
		select
			 authreqDeatils.CustomShipmentLocalAuthorityRequirementDetailId
		 from Custom_ShipmentLocalAuthorityRequirementDetail  authreqDeatils join  Custom_ShipmentLocalAuthorityRequirement authreq
		 on authreqDeatils.CustomShipmentLocalAuthorityRequirementId = authreq.CustomShipmentLocalAuthorityRequirementId
		 join Custom_ShipmentInfo custinfo
		 on authreq.CustomShipmentInfoId = custinfo.CustomShipmentInfoId 
		 where custinfo.shipmentNumber = #{shipmentNumber})
	</delete>
	
	<delete id="deleteshpLocAuthReqsFromSI"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete 
		from 
			Custom_ShipmentLocalAuthorityRequirement where CustomShipmentLocalAuthorityRequirementId in (
		select
			authreq.CustomShipmentLocalAuthorityRequirementId
		 from  Custom_ShipmentLocalAuthorityRequirement authreq  join Custom_ShipmentInfo custinfo
		 on authreq.CustomShipmentInfoId = custinfo.CustomShipmentInfoId 
		 where custinfo.shipmentNumber = #{shipmentNumber})
	</delete>
	
	<delete id="deleteshpMstCustAddInfo"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete 
		from 
			Custom_ShipmentCustomerAddressInfo where CustomShipmentCustomerInfoId in (
		select
			 custAddInfo.CustomShipmentCustomerInfoId
		 from Custom_ShipmentCustomerAddressInfo  custAddInfo join  Custom_ShipmentCustomerInfo custShpInfo
		 on custAddInfo.CustomShipmentCustomerInfoId = custShpInfo.CustomShipmentCustomerInfoId
		 join Custom_ShipmentInfo custinfo
		 on custShpInfo.CustomShipmentInfoId = custinfo.CustomShipmentInfoId 
		 where custinfo.shipmentNumber = #{shipmentNumber})
	</delete>
	
	
	
	<delete id="deleteshpMstCustInfo"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete 
		from 
			Custom_ShipmentCustomerInfo where CustomShipmentInfoId in (
			select
				 custShpInfo.CustomShipmentInfoId
			 from Custom_ShipmentCustomerInfo custShpInfo
			 join Custom_ShipmentInfo custinfo
			 on custShpInfo.CustomShipmentInfoId = custinfo.CustomShipmentInfoId 
			 where custinfo.shipmentNumber = #{shipmentNumber})
	</delete>
	

	<delete id="deleteshpCustInfo"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Custom_ShipmentInfo where shipmentNumber = #{shipmentNumber}
	</delete>
	
	<delete id="deleteIrregularities"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from shipment_irregularity where ShipmentNumber = #{shipmentNumber} and ShipmentDate = #{shipmentDate}
	</delete>
	
	<delete id="deleteCancelledSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Shipment_Master where ShipmentId  = #{shipmentId}
	</delete>
	
	<update id="sqlUpdatePrelodgeExportDocuments"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
	<![CDATA[
		UPDATE Agt_PrelodgeExportDocuments SET ShipmentStatus = 'OPEN'
		 		WHERE ShipmentNumber = #{shipmentNumber} and ShipmentDate = #{shipmentDate}
	]]>
	</update>
	
	<update id="sqlUpdatePrelodgeExportService"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
	<![CDATA[
		UPDATE Agt_PrelodgeExportService SET ServiceStatus = 'OPEN'
		 	WHERE PrelodgeServiceId = (select top 1 PrelodgeServiceId FROM Agt_PrelodgeExportDocuments 
		 				 WHERE ShipmentNumber = #{shipmentNumber} and ShipmentDate = #{shipmentDate})
	]]>
	</update>
	
	<delete id="sqlDeleteAcceptanceServiceInformation" 
	      parameterType="java.math.BigInteger">
	<![CDATA[
		delete from Exp_eAcceptanceServiceInformation 
		where ServiceInformationId = #{serviceInformationId} and
		not exists(
			select
				null
			from
				Exp_eAcceptanceDocumentInformation
			where
				Exp_eAcceptanceDocumentInformation.ServiceInformationId = #{serviceInformationId}
		)
	]]>
	 </delete>
	 
	<select id="sqlGetShipmentStatus" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
			resultType="int">
			select
				sum(LocationInfo.RecordCount)
			from(select
					count(1) as RecordCount
				from
					Shipment_Inventory
				where
					Shipment_Inventory.Shipment_ID = #{shipmentId} 
				union
				select
					count(1) as RecordCount
				from
					Shipment_FreightOut
				where
					Shipment_FreightOut.ShipmentId = #{shipmentId} 
			)LocationInfo
 	</select>
	
	<select id="sqlGetDocComStatus" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentDocumentBreadkdownStatusModel" 
			resultMap="DocumentStatusResultMap">
		select 
		  	DocumentVerificationCompletedAt
		 from  
		 	Imp_FlightEvents where flightid = #{flightId}
 	</select>
 	
 	<resultMap type="com.ngen.cosys.shipment.information.model.ShipmentDocumentBreadkdownStatusModel" 
 		id="DocumentStatusResultMap">
 		<result column="DocumentVerificationCompletedAt" property="docComStatus" />
 	</resultMap>
	

	<select id="sqlGetDocAndBrkdwnStatus" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentDocumentBreadkdownStatusModel" 
			resultMap="BreakdownComStatusResultMap">
		select 
		  	BreakDownCompletedAt
		 from  
		 	Imp_FlightEvents where flightid = #{flightId}
 	</select>
 	
 	<resultMap type="com.ngen.cosys.shipment.information.model.ShipmentDocumentBreadkdownStatusModel" 
 		id="BreakdownComStatusResultMap">
 		<result column="BreakDownCompletedAt" property="brkDwnComStatus" />
 	</resultMap>
 	
 	<select id="sqlGetNoaDetails" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoSearchReq" 
			resultMap="NoaDetailsResultMap">
		SELECT	REPLACE(REPLACE(REPLACE(REPLACE(Event_OutboundServiceMessageLog.MessageRecipients,'To',''), ':', ''), '[', ''), ']', '') AS noaemail,
				Event_OutboundServiceMessageLog.CreatedDateTime as noadate
		FROM	Event_OutboundServiceMessageReferenceLog
			INNER JOIN
				Event_OutboundServiceMessageLog
			ON	Event_OutboundServiceMessageLog.OutboundServiceMessageLogId 
					= Event_OutboundServiceMessageReferenceLog.OutboundServiceMessageLogId
		WHERE	Event_OutboundServiceMessageReferenceLog.MessageReferenceNumber = #{shipmentNumber}
		AND		Event_OutboundServiceMessageLog.MessageType = 'EMAIL'
		AND		Event_OutboundServiceMessageLog.MessageSubject IN ('SHIPMENT ARRIVAL NOTICE - [DO NOT REPLY]','SHIPMENT ARRIVAL NOTICE - E-FREIGHT SHIPMENT - [DO NOT REPLY]','SHIPMENT ARRIVAL NOTICE - E-AWB SHIPMENT - [DO NOT REPLY]')
		AND		Event_OutboundServiceMessageLog.MessageStatus IN ('INITIATED','SENT')
 	</select>
 	
 	<select id="sqlGetEWarehouseReceiptDetails" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoSearchReq" 
			resultMap="NoaDetailsResultMap">
			select			
				(
				SELECT case when SHR.shpremarks is null then '' else ' : ' + SHR.shpremarks end
				FROM (
				select 
					string_agg(Shipment_Remarks.ShipmentRemarks,' ') AS shpremarks
				From 
					Shipment_Remarks
				Where			
					Shipment_Remarks.ShipmentNumber = #{shipmentNumber} and
					Shipment_Remarks.ShipmentDate = #{shipmentDate} and
					Shipment_Remarks.Flight_ID is null and
					Shipment_Remarks.ShipmentRemarks != '' and
					Shipment_Remarks.ShipmentRemarks is not null and
					Shipment_Remarks.RemarkType = 'EWR') AS SHR) +
				replace(replace(replace(replace(replace(MessageRecipients,'To',''), ':', ''), '[', ''), ']', ''), ',', ',  ') as noaemail, 
				CreatedDateTime as noadate
			from
				Event_OutboundServiceMessageLog
			where 
				Event_OutboundServiceMessageLog.OutboundServiceMessageLogId = (
				select 
					max(OutboundServiceMessageLogId) OutboundServiceMessageLogId	
				from 
					Event_OutboundServiceMessageLog		
				where
					messagetype='EMAIL'
					and MessagePayload  like 'E-WareHouse Receipt%'
					and MessageReference = #{shipmentNumber}
					and MessageStatus in ('INITIATED','SENT')
			)
 	</select>
 	
 	
 	<resultMap type="com.ngen.cosys.shipment.information.model.ShipmentNoaListModel" 
 		id="NoaDetailsResultMap">
 		<result column="noaemail" property="noaemail" />
 		<result column="noadate" property="noadate" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
 	</resultMap>
 	
 	
 	<select id="sqlGetExportShpStatus" 
			parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" 
			resultType="int">
			select
				 count(1) from shipment_master,Exp_LoadedShipmentInfo
			where
				shipment_master.ShipmentId=Exp_LoadedShipmentInfo.ShipmentId
				and shipment_master.ShipmentNumber = #{shipmentNumber}
				and shipment_master.ShipmentDate= #{shipmentDate}
			
 	</select>
 	
 	<delete id="deleteShpInvHusFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Shipment_InventoryHouse WHERE ShipmentInventoryId IN (SELECT shpInv.ShipmentInventory_Id FROM
			Shipment_master shpmst join Shipment_inventory shpInv 
			ON shpmst.ShipmentId=shpInv.Shipment_ID  
		where 
			shpmst.ShipmentID = #{shipmentId})
	</delete>
	
	<delete id="deleteShpMstLocAuthDetailsFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Shipment_MasterLocalAuthorityDetails WHERE ShipmentMasterLocalAuthInfoId IN (
		SELECT shpMstAuthInfo.ShipmentMasterLocalAuthInfoId FROM
			Shipment_master shpmst join Shipment_MasterLocalAuthorityInfo shpMstAuthInfo
			ON shpmst.ShipmentId=shpMstAuthInfo.Shipmentid
		where 
			shpmst.ShipmentID = #{shipmentId})
	</delete>
	
	<delete id="deleteShpMstLocAuthInfoFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Shipment_MasterLocalAuthorityInfo where shipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteShpExpWeighDimitemsFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceWeighingDimLineItems WHERE DocumentInformationId IN (
		select expdocinfo.DocumentInformationId from Exp_eAcceptanceDocumentInformation expdocinfo 
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
	
	
	<delete id="deleteShpExpWeighDimFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceWeighingDim WHERE DocumentInformationId IN (
		select expdocinfo.DocumentInformationId from Exp_eAcceptanceDocumentInformation expdocinfo 
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpWeighFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceWeighing WHERE DocumentInformationId IN (
		select expdocinfo.DocumentInformationId from Exp_eAcceptanceDocumentInformation expdocinfo 
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
 	
 	
	<delete id="deleteShpExpStorageWeighFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceStorageWeight WHERE DocumentInformationId IN (
		select expdocinfo.DocumentInformationId from Exp_eAcceptanceDocumentInformation expdocinfo 
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpAuthDetailsFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceLocalAuthDetails WHERE LocalAuthorityInfoId IN (
		select expweigh.LocalAuthorityInfoId from Exp_eAcceptanceDocumentInformation expdocinfo 
		join Exp_eAcceptanceLocalAuthInformation  expweigh
		on expdocinfo.DocumentInformationId = expweigh.DocumentInformationId
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpAuthInfoFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceLocalAuthInformation WHERE DocumentInformationId IN (
		select expdocinfo.DocumentInformationId from Exp_eAcceptanceDocumentInformation expdocinfo 
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpHusInfoFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceHouseInformation WHERE DocumentInformationId IN (
		select expdocinfo.DocumentInformationId from Exp_eAcceptanceDocumentInformation expdocinfo		
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
		
	<delete id="deleteShpExpDryIceInfoFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceDryIceInformation WHERE DocumentInformationId IN (
		select expdocinfo.DocumentInformationId from Exp_eAcceptanceDocumentInformation expdocinfo		
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpShcInfoFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceDocumentInfoSHC WHERE DocumentInformationId IN (
		select expdocinfo.DocumentInformationId from Exp_eAcceptanceDocumentInformation expdocinfo 		
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpDocInfoFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceDocumentInformation
		where ShipmentNumber =  #{shipmentNumber} and ShipmentDate = #{shipmentDate}
	</delete>
	
	<delete id="deleteShpExpBkgDeltaShcFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_BookingDeltaSHC WHERE ExpBookingDeltaId IN (
		select expdocinfo.ExpBookingDeltaId from Exp_BookingDelta expdocinfo 
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
	
	
	<delete id="deleteShpExpBkgDeltaFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_BookingDelta
		where ShipmentNumber =  #{shipmentNumber} and ShipmentDate = #{shipmentDate}
	</delete>
	
	<delete id="deleteShpExpBkgDemFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_ShipmentPartBookingDimension WHERE PartBookingId IN (
		select bookdetails.PartBookingId from Exp_ShipmentPartBookingDetail bookdetails  join Exp_ShipmentBooking booking 
		on booking.BookingId  = bookdetails.BookingId
		where ShipmentNumber =  #{shipmentNumber} and ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpPartBkgShcFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_ShipmentPartBookingDetailSHC WHERE PartBookingId IN (
		select bookdetails.PartBookingId from Exp_ShipmentPartBookingDetail bookdetails
		 join Exp_ShipmentBooking booking 
		on booking.BookingId  = bookdetails.BookingId
		where ShipmentNumber =  #{shipmentNumber} and ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpPartBkgDetsFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_ShipmentPartBookingDetail WHERE BookingId IN (
		select bookinfo.BookingId from Exp_ShipmentBooking bookinfo 
		where ShipmentNumber =  #{shipmentNumber} and ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpFltBkgDemFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_ShipmentFlightBookingDimension WHERE FlightBookingId IN (
		select bookdetails.FlightBookingId from Exp_ShipmentFlightBookingDetail bookdetails
		 join Exp_ShipmentBooking booking 
		on booking.BookingId  = bookdetails.BookingId
		where ShipmentNumber =  #{shipmentNumber} and ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpFltBkgShcFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_ShipmentFlightBookingDetailSHC WHERE FlightBookingId IN (
		select bookdetails.FlightBookingId from Exp_ShipmentFlightBookingDetail bookdetails 
		 join Exp_ShipmentBooking booking 
		on booking.BookingId  = bookdetails.BookingId
		where ShipmentNumber =  #{shipmentNumber} and ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpFltBkgDelFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_ShipmentFlightBookingDetail WHERE BookingId IN (
		select bookinfo.BookingId from Exp_ShipmentBooking bookinfo 
		where ShipmentNumber =  #{shipmentNumber} and ShipmentDate = #{shipmentDate})
	</delete>
	
	<delete id="deleteShpExpFltBkgFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_ShipmentBooking
		where ShipmentNumber =  #{shipmentNumber} and ShipmentDate = #{shipmentDate}
	</delete>
	
	<delete id="deleteShpExpFltBkgPartFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
			 delete from Exp_ShipmentFlightPartDetail where 
			FlightBookingId in(
			select FlightBookingId from   Exp_ShipmentFlightBookingDetail inner join 
			Exp_ShipmentBooking shipbooking on
			shipbooking.BookingId=Exp_ShipmentFlightBookingDetail.BookingId
			where shipbooking.ShipmentNumber= #{shipmentNumber}  and shipbooking.ShipmentDate=#{shipmentDate}) 
	</delete>
	
	<delete id="deleteShpExpFltBkgPartRemarkFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from  Exp_ShipmentBookingRemarks where 
		FlightBookingId in(
		select FlightBookingId from   Exp_ShipmentFlightBookingDetail inner join
		Exp_ShipmentBooking shipbooking on
		shipbooking.BookingId=Exp_ShipmentFlightBookingDetail.BookingId
		where shipbooking.ShipmentNumber= #{shipmentNumber} and shipbooking.ShipmentDate= #{shipmentDate}
		)
	</delete>
	<!-- delete shipment arrival manifest  end -->
	
	<delete id="deleteShipmentStatusUpdateEvent" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Shipment_StatusUpdateEvent where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventInboundShipmentBreakDownCompleteStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_InboundShipmentBreakDownCompleteStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventInboundShipmentDocumentCompleteStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_InboundShipmentDocumentCompleteStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventInboundShipmentDocumentReleaseStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_InboundShipmentDocumentReleaseStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventInboundShipmentPiecesEqualsToBreakDownPiecesStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_InboundShipmentPiecesEqualsToBreakDownPiecesStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundLoadShipmentStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundLoadShipmentStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundShipmentAssignedToFlightStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundShipmentAssignedToFlightStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundShipmentCargoAcceptanceCompleteStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundShipmentCargoAcceptanceCompleteStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundShipmentCargoAcceptanceRejectedStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundShipmentCargoAcceptanceRejectedStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundShipmentCargoAcceptanceReturnedStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundShipmentCargoAcceptanceReturnedStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundShipmentFlightCompletedStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundShipmentFlightCompletedStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundShipmentManifestedStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundShipmentManifestedStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundShipmentOffloadedStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundShipmentOffloadedStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundShipmentPartiallyAcceptedPiecesStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundShipmentPartiallyAcceptedPiecesStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundShipmentPiecesEqualsToAcceptedPiecesStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundShipmentPiecesEqualsToAcceptedPiecesStore where ShipmentId = #{shipmentId}
	</delete>
		
	<delete id="deleteEventOutboundShipmentScreeningStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundShipmentScreeningStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventOutboundUnloadShipmentStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_OutboundUnloadShipmentStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventTranshipmentThroughTransitFinalizedByShipmentStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_TranshipmentThroughTransitFinalizedByShipmentStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteEventTranshipmentTransferManifestUnFinalizedStore" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Event_TranshipmentTransferManifestUnFinalizedStore where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deletefromShpRmrk" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Shipment_Remarks where ShipmentId = #{shipmentId}
	</delete>

	<delete id="deleteShpCdhDocMstFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Cdh_DocumentMaster where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteShpWorkListFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_WorkingListShipment where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteExpOffLoadFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_OffloadShipmentInfo where ShipmentId = #{shipmentId}
	</delete>
	
	<delete id="deleteImpDelAuthFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Imp_DeliveryLocalAuthorityInformation WHERE ImpDeliveryId IN (SELECT shpInv.ImpDeliveryId FROM
			Imp_DeliveryLocalAuthorityInformation shpmst join Imp_Delivery shpInv 
			ON shpmst.ImpDeliveryId=shpInv.ImpDeliveryId  
		where 
			shpInv.ShipmentID = #{shipmentId})
	</delete>
	
	<delete id="deleteShpCdhDocDiscrepancyFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Cdh_DocumentDiscrepancy where ShipmentId = #{shipmentId}
	</delete>
	
	<select id="sqlGetPartShipmentInfo" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
		resultMap="PartShipmentInfoResultMap">
		<![CDATA[
		select 
			PartInfo.PartSuffix,				
			PartInfo.FlightKey,
			PartInfo.DateSTD,
			PartInfo.PartPieces,
			PartInfo.PartWeight,
			PartInfo.FlightBoardPoint,
			PartInfo.FlightOffPoint	
		from (select 	
				Exp_ShipmentPartBookingDetail.PartSuffix,
				Flt_OperativeFlight.FlightKey,
				case
					when Flt_OperativeFlight_Segments.FlightOffPoint = #{tenantAirport} then
						Flt_OperativeFlight_Segments.DateSTA
					else
						Flt_OperativeFlight_Segments.DateSTD
					end DateSTD,
				Exp_ShipmentPartBookingDetail.PartPieces,
				Exp_ShipmentPartBookingDetail.PartWeight,
				Flt_OperativeFlight_Segments.FlightBoardPoint,
				Flt_OperativeFlight_Segments.FlightOffPoint,
				2000 PartOrder				
			from 
				Exp_ShipmentBooking inner join
				Exp_ShipmentPartBookingDetail
					on Exp_ShipmentBooking.BookingId = Exp_ShipmentPartBookingDetail.BookingId left join
				Exp_ShipmentFlightPartDetail
					on Exp_ShipmentPartBookingDetail.PartBookingId = Exp_ShipmentFlightPartDetail.PartBookingId left join
				Exp_ShipmentFlightBookingDetail
					on Exp_ShipmentFlightPartDetail.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId left join
				Flt_OperativeFlight
					on Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight.Flight_ID left join
				Flt_OperativeFlight_Segments	
					on Exp_ShipmentFlightBookingDetail.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId and
						Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Segments.Flight_ID
			where 
				Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber} and
				Exp_ShipmentBooking.ShipmentDate = #{shipmentDate} and
				Exp_ShipmentPartBookingDetail.PartSuffix = 'P'
			union all
			select 	
				case
					when Exp_ShipmentPartBookingDetail.PartSuffix like 'OAL%' then
						null
					else
						Exp_ShipmentPartBookingDetail.PartSuffix 
					end PartSuffix,
				Flt_OperativeFlight.FlightKey,
				case
					when Flt_OperativeFlight_Segments.FlightOffPoint = #{tenantAirport} then
						Flt_OperativeFlight_Segments.DateSTA
					else
						Flt_OperativeFlight_Segments.DateSTD
					end DateSTD,
				Exp_ShipmentPartBookingDetail.PartPieces,
				Exp_ShipmentPartBookingDetail.PartWeight,
				Flt_OperativeFlight_Segments.FlightBoardPoint,				
				Flt_OperativeFlight_Segments.FlightOffPoint,
				DENSE_RANK() OVER(ORDER BY Exp_ShipmentPartBookingDetail.PartSuffix desc) PartOrder
			from 
				Exp_ShipmentBooking inner join
				Exp_ShipmentPartBookingDetail
					on Exp_ShipmentBooking.BookingId = Exp_ShipmentPartBookingDetail.BookingId left join
				Exp_ShipmentFlightPartDetail
					on Exp_ShipmentPartBookingDetail.PartBookingId = Exp_ShipmentFlightPartDetail.PartBookingId left join
				Exp_ShipmentFlightBookingDetail
					on Exp_ShipmentFlightPartDetail.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId left join
				Flt_OperativeFlight
					on Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight.Flight_ID left join
				Flt_OperativeFlight_Segments	
					on Exp_ShipmentFlightBookingDetail.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId and
						Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Segments.Flight_ID
			where 
				Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber} and
				Exp_ShipmentBooking.ShipmentDate = #{shipmentDate} and
				Exp_ShipmentPartBookingDetail.PartSuffix <> 'P'
		)PartInfo
		order by
			PartInfo.PartOrder desc, DateSTD asc
		]]>		
	</select>
	
	<resultMap id="PartShipmentInfoResultMap"
		type="com.ngen.cosys.shipment.information.model.ShipmentFlightModel">		
		<result column="PartSuffix" property="currentPartSuffix"/>		
		<result column="FlightKey" property="flightDetailsKey"/>
		<result column="DateSTD" property="flightDetailsSta"/>
		<result column="PartPieces" property="bookingPieces"/>
		<result column="PartWeight" property="bookingWeight"/>
		<result column="FlightBoardPoint" property="flightDetailsBoardPoint"/>
		<result column="FlightOffPoint" property="flightOffPoint"/>
	</resultMap>
	
	<insert id="insertcancelremark"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		INSERT INTO Shipment_Remarks
           (ShipmentNumber
           ,ShipmentDate
           ,RemarkType
           ,ShipmentRemarks
           ,CreatedUser_Code
           ,Created_DateTime
           ,ShipmentType)
        VALUES
		(#{shipmentNumber},#{shipmentDate},'CAN', #{cancelShipmentRmrk} , #{createdBy},#{createdOn},#{shipmentType})
	</insert>
	
	
	<update id="updateAwbStockDetails" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		UPDATE Com_AWBStockDetails
  		 SET
	       [Reserved] = null
	      ,[ReservedBy] = null
	      ,[ReservedOn] = null
	      ,[Issued] = null
	      ,[IssuedOn] = null
	      ,[Cancelled] = #{modifiedOn}
	      ,[LastUpdatedUser_Code] = #{modifiedBy}
	      ,[LastUpdated_DateTime] = #{modifiedOn}
 		WHERE AWBNumber = #{shipmentNumber}
	</update>
	
	<select id="sqlGetuserPwd" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
		resultType="String">
		select EncryptPassword from  Adm_UserProfile where UserLoginCode  = #{userLoginCode}	
    </select>
	
	<delete id="deleteExportScreeningReason"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Exp_ScreeningReason where ScreeningFlightId in (
			select ScreeningFlightId from Exp_Screening where ShipmentId = #{shipmentId})
	</delete>
	
	<delete id="deleteExportScreening"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
		delete from Exp_Screening where ShipmentId = #{shipmentId}
	</delete>
	
	<select id="sqlGetShipmentLoadedOrNot" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
		resultType="java.math.BigInteger">
		select count(*) from Exp_LoadedShipmentInfo where  ShipmentId = #{shipmentId}	
    </select>
    
    
    <select id="sqlFetchEpouchDocuments" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
			resultType="com.ngen.cosys.shipment.information.model.EpouchFileModel">
	<![CDATA[
		SELECT 	
			distinct
			UploadedDocId AS "uploadDocId",
			Com_UploadedDocumentStore.ReferenceId AS "referenceId", 
			Com_UploadedDocumentStore.Document AS "document", 
			Com_UploadedDocumentStore.DocumentName AS "documentName", 
			Com_UploadedDocumentStore.DocumentSize AS "documentSize", 
			Com_UploadedDocumentStore.DocumentFormat AS "documentFormat", 
			DocumentDescription AS "documentDescription", 
			isnull(Com_UploadedDocumentStore.DocumentType, Agt_ePouchUploadedDocumentTypeInfo.DocumentType) AS "documentType", 
			isnull(Com_UploadedDocumentStore.DocumentTypeDescription, Agt_ePouchUploadedDocumentTypeInfo.Description) AS "documentTypeDescription", 
			Com_UploadedDocumentStore.Remarks AS "remarks",
			Com_UploadedDocumentStore.EntityType AS "entityType", 
			Com_UploadedDocumentStore.EntityKey AS "entityKey", 
			Com_UploadedDocumentStore.EntityDate AS "entityDate",
			Com_UploadedDocumentStore.FlightId AS "flightId",
			Com_UploadedDocumentStore.AssociatedTo AS "associatedTo", 
			Com_UploadedDocumentStore.Stage AS "stage",
			Com_UploadedDocumentStore.CreatedUserCode AS userCode, 
			Com_UploadedDocumentStore.CreatedDateTime AS documentTime
		FROM	
			Com_UploadedDocumentStore left join
			Agt_ePouchUploadedDocuments
				on Com_UploadedDocumentStore.UploadedDocId = Agt_ePouchUploadedDocuments.UploadedDocumentId left join
			Agt_ePouchUploadedDocumentTypeInfo
				on Agt_ePouchUploadedDocuments.AgentePouchUploadedDocumentTypeInfoId = Agt_ePouchUploadedDocumentTypeInfo.AgentePouchUploadedDocumentTypeInfoId
		where 
			EntityType = 'POUCH' AND 
			EntityKey = #{shipmentNumber}
	]]>
	</select>
	
	<select id="checkShipmentIsAddedOrNot" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
		resultType="java.lang.Integer">
		select count(1) from cdh_documentmaster where shipmentid = #{shipmentId}	
    </select>
	
	<insert id="insertCdhDocumentMaster" parameterType="com.ngen.cosys.shipment.model.CdhDocumentmaster">
      MERGE Cdh_DocumentMaster AS Cdh_DocumentMaster1 USING
          (SELECT #{shipmentid} shipmentid) AS Cdh_DocumentMaster2 
             ON Cdh_DocumentMaster1.shipmentid=Cdh_DocumentMaster2.shipmentid
      WHEN MATCHED THEN
             UPDATE 
                    
                    SET CopyNo = #{copyno}
                    ,DocumentStatus = 'Received'
                    ,CdhPigeonHoleLocationId = #{cdhpigeonholelocationid}
                    ,CdhFlightPouchId = #{cdhflightpouchid}
                    ,StoredDate =  #{storeddate}
                    ,ReceivedDate = getdate()
                    ,ReturnedDate = #{returneddate}
                    ,NotifiedDate = #{notifieddate}
                    ,DiscrepancyFlag = #{discrepancyflag}
                    ,Remarks = #{remarks}
                    ,Destination = #{destination}
                    ,DeleteReasonCode = #{deletereasoncode}
                    ,DeleteFlag = #{deleteflag}
                    ,DeleteRemarks = #{deleteremarks}
                    ,CarrierCode = #{carriercode}
                    ,FlightOffPoint = #{flightoffpoint}
                    ,LabelPartDate = GETDATE()
                    ,LastUpdatedUserCode = #{modifiedBy}
                    ,LastUpdatedDateTime = getdate()                                                                                                          
                    ,ShipmentId = #{shipmentid}
                                                                                      
      WHEN NOT MATCHED THEN
             INSERT (CopyNo, DocumentStatus, CdhPigeonHoleLocationId, CdhFlightPouchId, 
                     StoredDate, ReceivedDate, ReturnedDate, NotifiedDate, discrepancyflag
                     ,Remarks, Destination, DeleteReasonCode, DeleteFlag, DeleteRemarks, 
                     CarrierCode, FlightOffPoint, LabelpartDate, CreatedUserCode , CreatedDateTime , ShipmentId)
              Values(#{copyno}, 'Received', #{cdhpigeonholelocationid}, 
              		 #{cdhflightpouchid}, 
                     #{storeddate}, getdate(), #{returneddate}, #{notifieddate}, #{discrepancyflag}, #{remarks}, #{destination}, 
                     #{deletereasoncode}, #{deleteflag}, #{deleteremarks}, #{carriercode}, #{flightoffpoint},
                     GETDATE(), #{createdBy} , getdate(), #{shipmentid});
     </insert>
     
     <select id="getPigeonHoleLocationId" parameterType="com.ngen.cosys.shipment.model.CdhDocumentmaster"
		resultType="java.math.BigInteger">
		SELECT 
			CASE 
				WHEN(Origin not in (#{tenantAirport}, #{tenantCity}) AND Destination not in (#{tenantAirport}, #{tenantCity})) 
				THEN (select top 1 cast(CdhPigeonHoleLocationId as int) from Cdh_PigeonHoleLocation  where LocationName = 'Transit')
				WHEN(Origin in (#{tenantAirport}, #{tenantCity})) 
				THEN (select top 1 cast(CdhPigeonHoleLocationId as int) from Cdh_PigeonHoleLocation  where LocationName = 'Truck Dock')
			END
		FROM shipment_master WHERE shipmentId = #{shipmentid}	
    </select>
    
    <!-- FHL Queries -->    
   	<delete id="sqlDeleteShipmentInformationHouseShcs"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightHouseListByHAWBSHC where ShipmentFreightHouseListByHAWBId in (   			
   			select 
   				Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByHAWBId 
   			from 
   				Shipment_FreightHouseListByAWB inner join
   				Shipment_FreightHouseListByHAWB
   					on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
   			where 
   				Shipment_FreightHouseListByAWB.AwbNumber = #{shipmentNumber} and 
   				Shipment_FreightHouseListByAWB.AwbDate = #{shipmentDate}   		
   		)
   	]]>
   	</delete>
   
   	<delete id="sqlDeleteShipmentInformationHouseDescriptions"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightHouseListByHAWBDescriptionOfGoods where ShipmentFreightHouseListByHAWBId in (   			
   			select 
   				Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByHAWBId 
   			from 
   				Shipment_FreightHouseListByAWB inner join
   				Shipment_FreightHouseListByHAWB
   					on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
   			where 
   				Shipment_FreightHouseListByAWB.AwbNumber = #{shipmentNumber} and 
   				Shipment_FreightHouseListByAWB.AwbDate = #{shipmentDate}   		
   		)
   	]]>
   	</delete>
   
   	<delete id="sqlDeleteShipmentInformationHouseTariffs"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightHouseListByHAWBHarmonisedTariffScheduleInfo where ShipmentFreightHouseListByHAWBId in (   			
   			select 
   				Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByHAWBId 
   			from 
   				Shipment_FreightHouseListByAWB inner join
   				Shipment_FreightHouseListByHAWB
   					on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
   			where 
   				Shipment_FreightHouseListByAWB.AwbNumber = #{shipmentNumber} and 
   				Shipment_FreightHouseListByAWB.AwbDate = #{shipmentDate}   		
   		)
   	]]>
   	</delete>
   
   	<delete id="sqlDeleteShipmentInformationHouseOtherCustomInfo"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightHouseListByHAWBOtherCustomsInfo where ShipmentFreightHouseListByHAWBId in (   			
   			select 
   				Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByHAWBId 
   			from 
   				Shipment_FreightHouseListByAWB inner join
   				Shipment_FreightHouseListByHAWB
   					on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
   			where 
   				Shipment_FreightHouseListByAWB.AwbNumber = #{shipmentNumber} and 
   				Shipment_FreightHouseListByAWB.AwbDate = #{shipmentDate}   		
   		)
   	]]>
   	</delete>
   
   	<delete id="sqlDeleteShipmentInformationHouseCustomerAddressContacts"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightHouseListByHAWBCustomerContactInfo where ShipmentFHLByHAWBCustomerAddressInfoId in (
   			select 
   				Shipment_FreightHouseListByHAWBCustomerAddressInfo.ShipmentFHLByHAWBCustomerAddressInfoId
   			from 
   				Shipment_FreightHouseListByAWB inner join
   				Shipment_FreightHouseListByHAWB
   					on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId inner join
   				Shipment_FreightHouseListByHAWBCustomerInfo
   					on Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByHAWBId = Shipment_FreightHouseListByHAWBCustomerInfo.ShipmentFreightHouseListByHAWBId inner join
   				Shipment_FreightHouseListByHAWBCustomerAddressInfo
   					on Shipment_FreightHouseListByHAWBCustomerInfo.ShipmentFHLByHAWBCustomerInfoId = Shipment_FreightHouseListByHAWBCustomerAddressInfo.ShipmentFHLByHAWBCustomerInfoId
   			where 
   				Shipment_FreightHouseListByAWB.AwbNumber = #{shipmentNumber} and 
   				Shipment_FreightHouseListByAWB.AwbDate = #{shipmentDate}   
   		)
   	]]>
   	</delete>
   
   	<delete id="sqlDeleteShipmentInformationHouseCustomerAddress"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightHouseListByHAWBCustomerAddressInfo where ShipmentFHLByHAWBCustomerInfoId in (   			
   			select 
   				Shipment_FreightHouseListByHAWBCustomerInfo.ShipmentFHLByHAWBCustomerInfoId 
   			from 
   				Shipment_FreightHouseListByAWB inner join
   				Shipment_FreightHouseListByHAWB
   					on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId inner join
   				Shipment_FreightHouseListByHAWBCustomerInfo
   					on Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByHAWBId = Shipment_FreightHouseListByHAWBCustomerInfo.ShipmentFreightHouseListByHAWBId
   			where 
   				Shipment_FreightHouseListByAWB.AwbNumber = #{shipmentNumber} and 
   				Shipment_FreightHouseListByAWB.AwbDate = #{shipmentDate}   		
   		)
   	]]>
   	</delete>
   
   	<delete id="sqlDeleteShipmentInformationHouseCustomer"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightHouseListByHAWBCustomerInfo where ShipmentFreightHouseListByHAWBId in (   			
   			select 
   				Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByHAWBId 
   			from 
   				Shipment_FreightHouseListByAWB inner join
   				Shipment_FreightHouseListByHAWB
   					on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
   			where 
   				Shipment_FreightHouseListByAWB.AwbNumber = #{shipmentNumber} and 
   				Shipment_FreightHouseListByAWB.AwbDate = #{shipmentDate}   		
   		)
   	]]>
   	</delete>
   
   	<delete id="sqlDeleteShipmentInformationHouseOtherCharges"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightHouseListByHAWBChargeDeclaration where ShipmentFreightHouseListByHAWBId in (   			
   			select 
   				Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByHAWBId 
   			from 
   				Shipment_FreightHouseListByAWB inner join
   				Shipment_FreightHouseListByHAWB
   					on Shipment_FreightHouseListByAWB.ShipmentFreightHouseListByAWBId = Shipment_FreightHouseListByHAWB.ShipmentFreightHouseListByAWBId
   			where 
   				Shipment_FreightHouseListByAWB.AwbNumber = #{shipmentNumber} and 
   				Shipment_FreightHouseListByAWB.AwbDate = #{shipmentDate}   		
   		)
   	]]>
   	</delete>
    
   	<delete id="sqlDeleteShipmentInformationHouse"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightHouseListByHAWB where ShipmentFreightHouseListByAWBId in (
   			select ShipmentFreightHouseListByAWBId from Shipment_FreightHouseListByAWB where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
   	</delete>
   
   	<delete id="sqlDeleteShipmentInformationHouseAWB"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightHouseListByAWB where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   	]]>
	</delete>
	
    <!-- FWB Queries -->
    
   	<delete id="sqlDeleteShipmentInformationFWBOSISSRInfo"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillSSROSIInfo where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBShipmentReferenceInformation"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillShipmentReferenceInformation where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBSHC"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillSHC where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBSenderReference"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillSenderReference where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBRouting"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillRouting where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>	
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBRateDescriptionOtherInfo"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillRateDescriptionOtherInfo where ShipmentFreightWayBillRateDescriptionId in (
   			select 
   				Shipment_FreightWayBillRateDescription.ShipmentFreightWayBillRateDescriptionId 
   			from 
   				Shipment_FreightWayBill inner join
   				Shipment_FreightWayBillRateDescription
   					on  Shipment_FreightWayBill.ShipmentFreightWayBillId = Shipment_FreightWayBillRateDescription.ShipmentFreightWayBillId
   			where 
   				Shipment_FreightWayBill.AwbNumber = #{shipmentNumber} and 
   				Shipment_FreightWayBill.AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBRateDescription"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillRateDescription where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBPPDCOL"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillPPDCOL where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBOtherParticipantInformation"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillOtherParticipantInformation where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBOtherCustomsInfo"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillOtherCustomsInfo where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBOtherCharges"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillOtherCharges where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBNominatedHandlingParty"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillNominatedHandlingParty where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBFlightBooking"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillFlightBooking where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBCustomerContactInfo"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillCustomerContactInfo where ShipmentFreightWayBillCustomerAddressInfoId in (
   			select
   	 			Shipment_FreightWayBillCustomerAddressInfo.ShipmentFreightWayBillCustomerAddressInfoId
   	 		from 
   	 			Shipment_FreightWayBill inner join
   	 			Shipment_FreightWayBillCustomerInfo
   	 				on Shipment_FreightWayBill.ShipmentFreightWayBillId = Shipment_FreightWayBillCustomerInfo.ShipmentFreightWayBillId inner join
   	 			Shipment_FreightWayBillCustomerAddressInfo
   	 				on Shipment_FreightWayBillCustomerInfo.ShipmentFreightWayBillCustomerInfoId = Shipment_FreightWayBillCustomerAddressInfo.ShipmentFreightWayBillCustomerInfoId
   	 		where
   	 			Shipment_FreightWayBill.AwbNumber = #{shipmentNumber} and 
   	 			Shipment_FreightWayBill.AwbDate = #{shipmentDate} 
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBCustomerAddressInfo"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   	 	delete from Shipment_FreightWayBillCustomerAddressInfo where ShipmentFreightWayBillCustomerInfoId in (
   	 		select
   	 			Shipment_FreightWayBillCustomerInfo.ShipmentFreightWayBillCustomerInfoId
   	 		from 
   	 			Shipment_FreightWayBill inner join
   	 			Shipment_FreightWayBillCustomerInfo
   	 				on Shipment_FreightWayBill.ShipmentFreightWayBillId = Shipment_FreightWayBillCustomerInfo.ShipmentFreightWayBillId
   	 		where
   	 			Shipment_FreightWayBill.AwbNumber = #{shipmentNumber} and 
   	 			Shipment_FreightWayBill.AwbDate = #{shipmentDate}   	 	
   	 	)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationShipmentInformationFWBCustomerInfo"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillCustomerInfo where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		) 
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBChargeDeclaration"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillChargeDeclaration where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
    <delete id="sqlDeleteShipmentInformationFWBCCCCharges"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillCCCharges where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBAgentInfo"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillAgentInfo where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWBAccountingInformation"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBillAccountingInformation where ShipmentFreightWayBillId in (
   			select ShipmentFreightWayBillId from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   		)
   	]]>
	</delete>
	
	<delete id="sqlDeleteShipmentInformationFWB"
   		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">
   	<![CDATA[
   		delete from Shipment_FreightWayBill where AwbNumber = #{shipmentNumber} and AwbDate = #{shipmentDate}
   	]]>
	</delete>
	<delete id="deleteShpExpRemarkInfoFromSI" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel">	
		delete from Exp_eAcceptanceRemarks WHERE DocumentInformationId IN (
		select expdocinfo.DocumentInformationId from Exp_eAcceptanceDocumentInformation expdocinfo 		
		where expdocinfo.ShipmentNumber =  #{shipmentNumber} and expdocinfo.ShipmentDate = #{shipmentDate})
	</delete>
	
	<select id="sqlQueryGetPiecesInfoForPurge" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
	resultMap="piecesInfoForPurgeResultMap">
	select  mst.Pieces,
		isNull((select Sum(Pieces) from Shipment_Inventory inv  where inv.Shipment_ID=mst.ShipmentId group by inv.Shipment_ID),0) as invPieces,
		isNull((select Sum(Pieces) from Shipment_FreightOut frt where frt.ShipmentID=mst.ShipmentId group by frt.ShipmentID),0) as frtPieces,
		isNull((select Sum(Pieces) from Shipment_Irregularity irr where irr.ShipmentNumber=#{shipmentNumber}  and irr.ShipmentDate=#{shipmentDate} and CargoIrregularityCode = 'MSCA' group by irr.ShipmentNumber,irr.ShipmentDate),0) as mscaPieces,
		isNull((select Sum(Pieces) from Shipment_Irregularity irr where irr.ShipmentNumber=#{shipmentNumber}  and irr.ShipmentDate=#{shipmentDate} and CargoIrregularityCode = 'MSAW' group by irr.ShipmentNumber,irr.ShipmentDate),0) as msawPieces
		from shipment_master mst where  ShipmentNumber=#{shipmentNumber}  and ShipmentDate=#{shipmentDate}
	</select>
	<resultMap type="com.ngen.cosys.shipment.information.model.ShipmentFlightModel" id="piecesInfoForPurgeResultMap">
	<result column="ShipmentId" property="shipmentId"></result>
		<result column="invPieces" property="inventoryPieces"></result>
		<result column="frtPieces" property="freightOutPieces"></result>
		<result column="mscaPieces" property="missingCargoPieces"></result>
		<result column="msawPieces" property="missingAWBPieces"></result>
		<result column="Pieces" property="awbPiece"></result>
	</resultMap>
    <insert id="sqlQueryInsertArchivalShipmentFlight">
    INSERT INTO Archival_ShipmentFlight
           (ShipmentId
           ,ShipmentNumber
           ,ShipmentDate
           ,ShipmentElapsedDays
           ,Flight_Id
           ,CarrierCode
           ,FlightNumber
           ,FlightKey
           ,FlightOriginDate
           ,FlightDate
           ,ArchivalDate
           ,ArchivedBy
           ,ArchivalReason)
     VALUES
           (#{shipmentId},
		   #{shipmentNumber},
		   #{shipmentDate},
		   (select ArchivalDays from ARCHIVAL_DAYS where ArchivalModule='ShipmentFlight'),
		   #{flightId},
		   #{carrierCode},
		   #{flightNumber},
		   #{flightKey},
		   #{flightOriginDate},
		   #{flightDate},
		   getDate(),
		   #{archivedBy},
		   #{reasonForPurge})
    </insert>
    <select id="sqlQueryExecuteProcedureToMerge" statementType="CALLABLE" >
    	{call ARCHIVAL_SHPFLT()}   
    </select>
    <select id="sqlQueryGetUrlForClearingShipmentDateCache" resultType="java.lang.String">
   	 select ParameterValueChar from App_SystemParameters where ParameterCode = 'REMOVE_SHIPMENT_DATE_CACHE_API_SERVER'
    </select>
    <select id="sqlQUeryCheckRemarksTypeIfNON" 
	parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
	resultType="java.lang.String">
	select top(1) RemarkType from Shipment_Remarks 
	where ShipmentId=#{shipmentId} order by Created_DateTime desc
	</select>
	<select id="sqlQueryCheckIfAnyPurgeIsInProgress" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
	resultType="java.math.BigInteger">
	select count(shipmentId)  purgeInProgress from Archival_ShipmentFlight
	</select>
	<select id="sqlQueryFetchBookingFFRFlightInfo"
	parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
	resultType="com.ngen.cosys.shipment.information.model.ShipmentFlightModel">
	<![CDATA[select
     Flt_OperativeFlight.Flight_ID as flightId,
     Flt_OperativeFlight.CarrierCode as carrierCode,
     Flt_OperativeFlight.FlightNumber as flightNumber,
     Flt_OperativeFlight.FlightOriginDate as flightOriginDate,
     Flt_OperativeFlight_Legs.DateSTD as flightDate
 from
     Exp_ShipmentBooking inner join
     Exp_ShipmentFlightBookingDetail
         on Exp_ShipmentBooking.BookingId = Exp_ShipmentFlightBookingDetail.BookingId inner join
     Flt_OperativeFlight
         on Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight.Flight_ID inner join
     Flt_OperativeFlight_Legs
         on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID
 where
     Exp_ShipmentFlightBookingDetail.FlightBoardPoint <> #{tenantAirport} and
     Exp_ShipmentFlightBookingDetail.FlightOffPoint <> #{tenantAirport} and
     Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber}]]>
	</select>
	
	<select id="sqlGetCancelShipmentForCancel"
	parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
	resultType="com.ngen.cosys.events.payload.ShipmentCancellationStoreEvent">
	select
       Exp_ShipmentBooking.ShipmentNumber,
       Exp_ShipmentBooking.ShipmentDate,
       #{shipmentType} as ShipmentType,
       Exp_ShipmentBooking.Origin,
       Exp_ShipmentBooking.Destination,
       Exp_ShipmentBooking.NatureOfGoodsDescription,
       Exp_ShipmentBooking.Pieces as TotalPieces,
       Exp_ShipmentBooking.GrossWeight as TotalWeight, 
       Exp_ShipmentPartBookingDetail.PartSuffix,
       Exp_ShipmentPartBookingDetail.PartPieces as Pieces,
       Exp_ShipmentPartBookingDetail.PartWeight as Weight,
       Flt_OperativeFlight.Flight_ID as FlightId,
       Flt_OperativeFlight.FlightKey,
       cast(Flt_OperativeFlight_Segments.DateSTD as date) as DateSTD,
       Flt_OperativeFlight_Segments.FlightBoardPoint,
       Flt_OperativeFlight_Segments.FlightOffPoint,
       Exp_ShipmentPartBookingDetail.Volume,
       Exp_ShipmentPartBookingDetail.VolumeUnitCode as VolumeCode
	from
       Exp_ShipmentBooking inner join
       Exp_ShipmentPartBookingDetail
              on Exp_ShipmentBooking.BookingId = Exp_ShipmentPartBookingDetail.BookingId inner join
       Exp_ShipmentFlightPartDetail
              on Exp_ShipmentPartBookingDetail.PartBookingId = Exp_ShipmentFlightPartDetail.PartBookingId inner join
       Exp_ShipmentFlightBookingDetail
              on Exp_ShipmentFlightPartDetail.FlightBookingId = Exp_ShipmentFlightBookingDetail.FlightBookingId inner join
       Flt_OperativeFlight
              on Exp_ShipmentFlightBookingDetail.FlightId = Flt_OperativeFlight.Flight_ID inner join
       Flt_OperativeFlight_Segments
              on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Segments.Flight_ID and
                     Exp_ShipmentFlightBookingDetail.FlightSegmentId = Flt_OperativeFlight_Segments.FlightSegmentId
	where
       Exp_ShipmentBooking.ShipmentNumber = #{shipmentNumber} and
       Exp_ShipmentBooking.ShipmentDate = cast(#{shipmentDate} as date) and
       Flt_OperativeFlight_Segments.FlightBoardPoint = #{tenantAirport}
	</select>
	
	<select id="sqlGetCancelShipmentRemarks"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoSearchReq" 
		resultType="java.lang.String">
		      select 
			     Top 1 ShipmentRemarks
				  from 
				    shipment_remarks 
				  where 
				     shipmentnumber= #{shipmentNumber} and 
				     ShipmentDate=#{shipmentDate} and
				     remarktype='CAN'
				     order by Created_DateTime desc
		
	</select>
	
	<select id="sqlGetShipmentInformationAcceptanceServiceInformation"
		parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel"
		resultType="java.math.BigInteger">
	<![CDATA[
		select 
			Exp_eAcceptanceServiceInformation.ServiceInformationId 
		from 
			Exp_eAcceptanceServiceInformation inner join
			Exp_eAcceptanceDocumentInformation
				on Exp_eAcceptanceServiceInformation.ServiceInformationId = Exp_eAcceptanceDocumentInformation.ServiceInformationId
		where 
			Exp_eAcceptanceDocumentInformation.ShipmentNumber = #{shipmentNumber} and
			Exp_eAcceptanceDocumentInformation.ShipmentDate = #{shipmentDate}
	]]>
	</select>
	
    <select id="getSystemParameterValue" parameterType="java.lang.String" resultType="java.lang.String">
   		 select ParameterValueChar from App_SystemParameters where ParameterCode = #{code}
    </select>
    
     <select id="fetchHandoverLocation" parameterType="com.ngen.cosys.shipment.information.model.ShipmentInfoModel" resultType="com.ngen.cosys.shipment.information.model.HandoverLocation">   		                      
		 select  
				isnull((hdr.ShipmentNumber+
			    hdr.PartSuffix+
				dtl.HoLocation),(hdr.ShipmentNumber+
				dtl.HoLocation)) identityKeyForImage,
				dtl.HoLocation as shipmentLocation

		from  
		        Shipment_SpecialCargoHandoverHdrLog hdr
				INNER JOIN Shipment_SpecialCargoHandoverDtlLog dtl
				ON hdr.SpecialCargoHandoverHdrId  =dtl.SpecialCargoHandoverHdrId
		where 
		     hdr.ShipmentNumber =  #{shipmentNumber}
		     and hdr.ShipmentDate = #{shipmentDate}
    </select>
    
    	<select id="getAWBDimensionDetails"
	parameterType="java.lang.Integer"
	resultType="com.ngen.cosys.shipment.information.model.DimensionInfoModel">
	select bookingDimensionId,bookingId,Pieces,Weight,Length,Width,Height,UnitCode,Volume,VolumeUnitCode 
	from Exp_shipmentbookingDimension where BookingId = #{bookingId};
	</select>
    
    <insert id="saveShipmentDimensions" parameterType="com.ngen.cosys.shipment.information.model.DimensionInfoModel">
		INSERT
		INTO
		Exp_ShipmentBookingDimension(BookingId,TransactionSequenceNo,
		Pieces,Weight,WeightUnitCode,Length,Width,Height,UnitCode, Volume, VolumeUnitCode,ShipmentNumber,ShipmentDate,UserType, CreatedUserCode,CreatedDateTime)
		VALUES(#{bookingId},#{transactionSequenceNo}, #{pieces},
		#{weight},#{weightUnitCode},#{length},#{width},#{height},#{unitCode}, #{volume}, #{volumeUnitCode},#{shipmentNumber},#{shipmentDate},#{userType}, #{createdBy},SYSDATETIME())
	</insert>
	
	<select id="getDimensionId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		Select BookingDimensionId from Exp_ShipmentBookingDimension where bookingId= #{bookingId}
	</select>
	
	<select id="getBookingId" parameterType="java.lang.String" resultType="com.ngen.cosys.shipment.information.model.DimensionInfoModel">
		Select BookingId,WeightUnitCode from Exp_ShipmentBooking  where ShipmentNumber = #{shipmentNumber}
	</select>
	
	<delete id="deleteShipemntDimensions" parameterType="java.lang.Integer" >
		Delete from Exp_ShipmentBookingDimension where BookingDimensionId =#{dimIds};
	</delete>
	
	<select id="validateCarrierGroup" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) from Mst_CarrierGroup inner join Mst_AssociateCarrierWithGroup on Mst_AssociateCarrierWithGroup.Mst_CarrierGroup_ID = Mst_CarrierGroup.Mst_CarrierGroup_ID and
		Mst_CarrierGroup.CarrierGroupCode = 'SQ' where Mst_AssociateCarrierWithGroup.CarrierCode = #{carrierCode}
	</select>
	
	<select id="fetchAllDetails" parameterType="com.ngen.cosys.shipment.information.model.ShipmentAndBookingDetails" resultType="com.ngen.cosys.shipment.information.model.ShipmentAndBookingDetails">
			select 
       * 
	from (select
			(	select substring(
		(SELECT '/' + fromPoint FROM
		Shipment_MasterRoutingInfo where
		master.ShipmentId=ShipmentId 
		order by Shipment_MasterRoutingInfo.ShipmentMasterRoutingId
		FOR XML
		PATH('') ), 2, 1000) as
		proposedRouting
		FROM shipment_master master
		where master.ShipmentNumber=#{shipmentNumber} ) as proposedRouting,
              T1.BookingId AS
              bookingId, T1.ShipmentNumber AS
              shipmentNumber,
			  T1.shipmentDate AS shipmentDate,
              t1.BlockSpace AS
              blockSpace,t1.Origin AS
              origin,t1.Destination AS
              destination,t1.Pieces
              AS pieces,t1.GrossWeight
              AS
              grossWeight,t1.WeightUnitCode
              AS
              weightUnitCode,
                           t1.NatureOfGoodsDescription
              AS
              natureOfGoodsDescription,
              t1.ShipperName AS shipperName,
              t1.ServiceFlag AS
              serviceFlag,
              T3.PartBookingId AS partBookingId,
              T3.PartSuffix AS
              partSuffix,
              T3.PartPieces AS partPieces,
              T3.PartWeight AS partWeight,    
              T3.CancelFlag AS cancelFlag,
              (select Exp_ShipmentFlightPartDetail.PartBookingStatusCode from Exp_ShipmentFlightPartDetail where
              Exp_ShipmentFlightPartDetail.FlightBookingId=T2.FlightBookingId
              and Exp_ShipmentFlightPartDetail.PartBookingId=T3.PartBookingId  ) AS partBookingStatusCode,
              T3.PartSource AS partSource,
              T2.Source as source,
              T2.FlightBookingId AS 
              flightBookingId,
              t2.FlightId AS flightId,
              opr.FlightKey as flightKey,
              segments.DateSTD as flightOriginDate,
              segments.FlightBoardPoint AS
              flightBoardPoint,
             segments.FlightOffPoint AS flightOffPoint,
               isnull(T3.ThroughTransitFlag,t2.ThroughTransitFlag) AS throughTransitFlag,
             segments.DateSTD     
              AS
              dateSTD,
             segments.DateSTA AS dateSTA,
              t2.BookingPieces AS
              bookingPieces,
              t2.BookingWeight AS bookingWeight,
              t2.BookingStatusCode
              AS bookingStatusCode,
              null AS bookingCancellationFlag,
              null AS
              bookingCancellationDate,
              null AS bookingCancellationUserCode,
              null AS
              bookingCancellationReasonId,                      
              T3.DensityGroupCode as densityGroupCode,
                T3.Volume as volume,
                T3.VolumeUnitCode as volumeUnitCode,
                T3.VolumetricWeight as volumetricWeight,
                T3.VolumeWeightUnitCode as volumeWeightUnitCode,
                T3.MeasurementUnitCode as measurementUnitCode
              from Exp_ShipmentBooking T1
              join
              Exp_ShipmentPartBookingDetail T3 ON T1.BookingId = T3.BookingId
             left join
              Exp_ShipmentFlightPartDetail T4 ON T3.PartBookingId =
              T4.PartBookingId
              left join Exp_ShipmentFlightBookingDetail T2 ON T4.FlightBookingId =
              T2.FlightBookingId
              left JOIN
              Flt_OperativeFlight opr on
              opr.Flight_ID=T2.FlightId  left join                     
                        Flt_OperativeFlight_Segments segments
                             on opr.Flight_ID = segments.Flight_ID and
                                    T2.FlightSegmentId = segments.FlightSegmentId
              where
              t1.ShipmentNumber=#{shipmentNumber}
       
              union 
              
              select
              (
              	select substring(
		(SELECT '/' + fromPoint FROM
		Shipment_MasterRoutingInfo where
		master.ShipmentId=ShipmentId 
		order by Shipment_MasterRoutingInfo.ShipmentMasterRoutingId
		FOR XML
		PATH('') ), 2, 1000) as
		proposedRouting
		FROM shipment_master master
		where master.ShipmentNumber=#{shipmentNumber}
              ) as proposedRouting,
              T1.BookingId AS
              bookingId, T1.ShipmentNumber AS
              shipmentNumber,
			  T1.shipmentDate AS shipmentDate,
              t1.BlockSpace AS
              blockSpace,t1.Origin AS
              origin,
              t1.Destination AS
              destination,
              t1.Pieces
              AS pieces,t1.GrossWeight
              AS
              grossWeight,t1.WeightUnitCode
              AS
              weightUnitCode, t1.NatureOfGoodsDescription
              AS
              natureOfGoodsDescription,
           	  t1.ShipperName AS shipperName,
              t1.ServiceFlag AS
              serviceFlag,
              null AS partBookingId,
              null AS partSuffix,
              null AS
              partPieces,
              null AS
              partWeight,
              null as cancelFlag,
              null AS partBookingStatusCode,
              null AS partSource,
              T2.Source as source,
              T2.FlightBookingId AS
              flightBookingId,
              t2.FlightId AS flightId,
              opr.FlightKey as
              flightKey,
              segments.DateSTD as flightOriginDate,
             segments.FlightBoardPoint AS
              flightBoardPoint,
              segments.FlightOffPoint AS
              flightOffPoint,
             t2.ThroughTransitFlag AS throughTransitFlag,
              segments.DateSTD     
              AS
              dateSTD,
              segments.DateSTA AS dateSTA,
              t2.BookingPieces AS
              bookingPieces,
              t2.BookingWeight AS
              bookingWeight,
              t2.BookingStatusCode
              AS
              bookingStatusCode,
              t2.BookingCancellationFlag AS
              bookingCancellationFlag,
              t2.BookingCancellationDate AS
              bookingCancellationDate,
              t2.BookingCancellationUserCode AS
              bookingCancellationUserCode,
              t2.BookingCancellationReasonId AS
              bookingCancellationReasonId,
              t2.DensityGroupCode as densityGroupCode,
                t2.Volume as volume,
                t2.VolumeUnitCode as volumeUnitCode,
                t2.VolumetricWeight as volumetricWeight,
                t2.VolumeWeightUnitCode as volumeWeightUnitCode,
                t2.MeasurementUnitCode as measurementUnitCode
 
              from
              Exp_ShipmentBooking T1
              join
              Exp_ShipmentFlightBookingDetail T2 ON
              T1.BookingId = T2.BookingId
              JOIN
              Flt_OperativeFlight opr on
              opr.Flight_ID=T2.FlightId left join                      
                        Flt_OperativeFlight_Segments segments
                             on opr.Flight_ID = segments.Flight_ID and
                                    T2.FlightSegmentId = segments.FlightSegmentId
              where
              t1.ShipmentNumber=#{shipmentNumber}   and
              not exists(select 1
              from
              Exp_ShipmentPartBookingDetail TM
              where
              TM.BookingId =
              T1.BookingId)) A
              Order By partBookingId, A.DateSTD
	</select>
	
	<select id="fetchDimensionDetailsByBookingId" parameterType="java.lang.String" resultType="com.ngen.cosys.shipment.information.model.DimensionDetails">
	SELECT 
	Length lengthPerPiece,
	Height heightPerpiece,
	Width widthPerpiece,
	Pieces numberOfPieces,
	Weight weight
	From Exp_shipmentbookingDimension where BookingId = (SELECT BookingId FROM EXP_ShipmentBooking  where shipmentNumber = #{awbNumber})
	</select>
</mapper>