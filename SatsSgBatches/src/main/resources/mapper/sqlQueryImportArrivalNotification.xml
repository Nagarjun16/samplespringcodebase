<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "mybatis-3-mapper.dtd">
<mapper namespace="ImportArrivalNotificationMapper">

	<resultMap type="com.ngen.cosys.application.model.ImportArrivalNotificationModel" 
		id="ImportArrivalNotificationShipmentsMap">
		<id column="ShipmentType" property="shipmentType"/>
		<id column="CustomerCode" property="customerCode"/>
		<id column="CustomerName" property="customerName"/>
		<result column="EmailAddresses" property="emailAddresses"/>
		<collection 
			property="shipments"
			javaType="List"
			ofType="com.ngen.cosys.application.model.ImportArrivalNotificationModel">
			<result column="ShipmentId" property="shipmentId" />
			<result column="Flight_ID" property="flightId"/>
			<result column="FlightKey" property="flightKey"/>
			<result column="FlightDate" property="flightDate"/>
			<result column="ShipmentNumber" property="shipmentNumber"/>
			<result column="ShipmentDate" property="shipmentDate"/>
			<result column="Number" property="houseNumber"/>
			<result column="housePieces" property="housePieces"/>
			<result column="houseWeight" property="houseWeight"/>
			<result column="Origin" property="origin"/>
			<result column="Destination" property="destination"/>
			<result column="ShipmentPieces" property="shipmentPieces"/>
			<result column="ShipmentWeight" property="shipmentWeight"/>
			<result column="DocumentReceived" property="documentReceived"/>
			<result column="Pieces" property="pieces"/>
			<result column="Weight" property="weight"/>
			<result column="Terminal" property="terminal"/>
			<result column="ConsigneeName" property="consigneeName"/>		
		</collection>
	</resultMap>

	<select id="sqlGetImportArrivalNotificationShipments" parameterType="Map"
		resultMap="ImportArrivalNotificationShipmentsMap">
	<![CDATA[
		With GetCurrentTime As(
      select 
        convert(datetime,SWITCHOFFSET(converT(datetimeoffset,getdate()),
          (select current_utc_offset FROM sys.time_zone_info where name = 
           (select ParameterValueChar from App_SystemParameters where upper(ParameterCode)=upper('Station_timezone'))
               )) ) CurrentTime
              )
              select 
                      InboundShipmentInfo.Flight_ID,
                      InboundShipmentInfo.FlightKey,
                      InboundShipmentInfo.FlightDate,
                      InboundShipmentInfo.ShipmentId,
                      InboundShipmentInfo.ShipmentNumber,
					  InboundShipmentInfo.Number,
                      InboundShipmentInfo.ShipmentDate,
                      InboundShipmentInfo.Origin,
                      InboundShipmentInfo.Destination,
                      InboundShipmentInfo.Pieces as ShipmentPieces,
                      InboundShipmentInfo.Weight as ShipmentWeight,
					  InboundShipmentInfo.housePieces,
					  InboundShipmentInfo.houseWeight,
                      InboundShipmentInfo.DocumentReceived,
                      InboundShipmentInfo.BreakDownPieces as Pieces,
                      InboundShipmentInfo.BreakDownWeight as Weight,
                      InboundShipmentInfo.IrregularityPieces,
                      InboundShipmentInfo.ManifestPieces,
                      InboundShipmentInfo.CustomerCode,
                      InboundShipmentInfo.CustomerName,
                      InboundShipmentInfo.ConsigneeName,
                      (select
                             string_agg(Customer_NotificationDtl.NotificationTypeDetail, ',') as EmailAddresses
                      from
                             Customer_Notification inner join
                             Customer_NotificationDtl
                                    on Customer_Notification.CustomerNotificationId = Customer_NotificationDtl.CustomerNotificationId
                      where
                             Customer_Notification.CustomerId = Customer_Master.Customer_ID and
                             Customer_Notification.NotificationTypeCode = 'EMI'
                                           
                      )EmailAddresses,
                      (
                             select
                                    string_agg(ShipmentHandlingArea.HandlingArea, '/')
                             from(select
                                           distinct HandlingArea
                                    from
                                           Shipment_Inventory
                                    where
                                           Shipment_Inventory.Shipment_ID = InboundShipmentInfo.ShipmentId
                                    union
                                    select
                                           distinct HandlingArea
                                    from
                                           Shipment_FreightOut
                                    where
                                           Shipment_FreightOut.ShipmentId = InboundShipmentInfo.ShipmentId
                             )ShipmentHandlingArea
                      ) as Terminal,
                      case
                             when (select 1 from Shipment_MasterSHC where Shipment_MasterSHC.ShipmentId = InboundShipmentInfo.ShipmentId and Shipment_MasterSHC.SpecialHandlingCode = 'EAW') > 0 then
                                    'EAW'
                             when (select 1 from Shipment_MasterSHC where Shipment_MasterSHC.ShipmentId = InboundShipmentInfo.ShipmentId and Shipment_MasterSHC.SpecialHandlingCode = 'EAP') > 0 then
                                    'EAP'
                             else
                                    'GEN'
                             end ShipmentType
              from(
                      select
                             Flt_OperativeFlight.Flight_ID,
                             Flt_OperativeFlight.FlightKey,
                             Flt_OperativeFlight_Legs.DateSTA as FlightDate,
                             Shipment_Master.ShipmentId,
                             Shipment_Master.ShipmentNumber,
                             Shipment_Master.ShipmentDate,
                             Shipment_Master.Origin,
                             Shipment_Master.Destination,
                             Shipment_Master.Pieces,
                             Shipment_Master.Weight,
							 null Number,
							 null as housePieces,
							 null as houseWeight,
                             Shipment_MasterCustomerInfo.CustomerName as ConsigneeName,
                             case
                                    when (Imp_ShipmentVerification.DocumentReceivedFlag = 1 OR
                                                  Imp_ShipmentVerification.DocumentPouchReceivedFlag = 1 or Imp_ShipmentVerification.PhotoCopyAwbFlag= 1) then
                                           1
                                    else
                                           0
                                    end DocumentReceived,
                             Imp_ShipmentVerification.BreakDownPieces,
                             Imp_ShipmentVerification.BreakDownWeight,
                             case 
                                    when (AppointedAgentInfo.CustomerCode = 'IXX') then
                                           Shipment_MasterCustomerInfo.CustomerCode
                                    else
                                           AppointedAgentInfo.CustomerCode 
                                    end CustomerCode,
                             case 
                                    when (AppointedAgentInfo.CustomerCode = 'IXX') then
                                           Shipment_MasterCustomerInfo.CustomerName
                                    else
                                           AppointedAgentInfo.CustomerShortName 
                                    end CustomerName,
                             (select
                                           sum(Shipment_Irregularity.Pieces)
                                    from
                                           Shipment_Irregularity
                                    where
                                           Shipment_Irregularity.Flight_ID = Imp_ShipmentVerification.FlightId and
                                           Shipment_Irregularity.ShipmentNumber = Shipment_Master.ShipmentNumber and
                                           Shipment_Irregularity.ShipmentDate = Shipment_Master.ShipmentDate and
                                           Shipment_Irregularity.CargoIrregularityCode in ('MSCA', 'FDCA')
                             ) IrregularityPieces,
                             (
                                    select
                                           sum(Imp_ArrivalManifestShipmentInfo.Piece)
                                    from
                                           Imp_ArrivalManifestByFlight inner join
                                           Imp_ArrivalManifestBySegment
                                                  on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId = Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId inner join
                                           Imp_ArrivalManifestULD
                                                  on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
                                           Imp_ArrivalManifestShipmentInfo
                                                  on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId
                                    where
                                           Imp_ArrivalManifestByFlight.FlightId = Imp_ShipmentVerification.FlightId and
                                           Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Shipment_Master.ShipmentNumber and
                                           Imp_ArrivalManifestShipmentInfo.ShipmentDate = Shipment_Master.ShipmentDate
                             ) ManifestPieces
                      from
                             Imp_ShipmentVerification inner join
                             Flt_OperativeFlight
                                    on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID inner join
                             Flt_OperativeFlight_Legs
                                    on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
                                           Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} inner join
                             Shipment_Master
                                    on Imp_ShipmentVerification.ShipmentId = Shipment_Master.ShipmentId 
									   and Shipment_Master.HandledByMasterHouse='M' inner join
                             Shipment_MasterCustomerInfo
                                    on Shipment_Master.ShipmentId = Shipment_MasterCustomerInfo.ShipmentId and
                                           Shipment_MasterCustomerInfo.CustomerType = 'CNE' left join
                             Customer_Master       AppointedAgentInfo
                                    on Shipment_MasterCustomerInfo.AppointedAgent = AppointedAgentInfo.Customer_ID
                      where  
                             (Imp_ShipmentVerification.NOA is null OR Imp_ShipmentVerification.NOA = 0) and
                             Shipment_Master.Destination in ( #{tenantAirport} , #{tenantCity} ) and  
                              Imp_ShipmentVerification.BreakDownPieces > 0 
                            and exists(
                                    select
                                           1
                                    from
                                           Imp_ShipmentVerification ShpVer
                                    where
                                           ShpVer.ShipmentId = Imp_ShipmentVerification.ShipmentId and
                                           (ShpVer.DocumentReceivedFlag = 1 OR 
                                                                           ShpVer.DocumentPouchReceivedFlag = 1 OR
                                                                           ShpVer.PhotoCopyAwbFlag= 1)
                             ) and
                              coalesce(Flt_OperativeFlight_Legs.DateSTA, Flt_OperativeFlight_Legs.DateSTA) > cast('15JUL2019 00:00:00' as datetime) 
					
					union all
					  select
                             Flt_OperativeFlight.Flight_ID,
                             Flt_OperativeFlight.FlightKey,
                             Flt_OperativeFlight_Legs.DateSTA as FlightDate,
                             Shipment_Master.ShipmentId,
                             Shipment_Master.ShipmentNumber,
                             Shipment_Master.ShipmentDate,
                             Shipment_Master.Origin,
                             Shipment_Master.Destination,
                             Shipment_Master.Pieces,
                             Shipment_Master.Weight,
							 Shipment_HouseInformation.Number,
							 Shipment_HouseInformation.Pieces as housePieces,
							 Shipment_HouseInformation.Weight as houseWeight,
                             Shipment_MasterCustomerInfo.CustomerName as ConsigneeName,
                             case
                                    when (Imp_ShipmentVerification.DocumentReceivedFlag = 1 OR
                                                  Imp_ShipmentVerification.DocumentPouchReceivedFlag = 1 or Imp_ShipmentVerification.PhotoCopyAwbFlag= 1) then
                                           1
                                    else
                                           0
                                    end DocumentReceived,
                             Imp_ShipmentVerification.BreakDownPieces,
                             Imp_ShipmentVerification.BreakDownWeight,
                             case 
                                    when (AppointedAgentInfo.CustomerCode = 'IXX') then
                                           Shipment_MasterCustomerInfo.CustomerCode
                                    else
                                           AppointedAgentInfo.CustomerCode 
                                    end CustomerCode,
                             case 
                                    when (AppointedAgentInfo.CustomerCode = 'IXX') then
                                           Shipment_MasterCustomerInfo.CustomerName
                                    else
                                           AppointedAgentInfo.CustomerShortName 
                                    end CustomerName,
                             (select
                                           sum(Shipment_Irregularity.Pieces)
                                    from
                                           Shipment_Irregularity
                                    where
                                           Shipment_Irregularity.Flight_ID = Imp_ShipmentVerification.FlightId and
                                           Shipment_Irregularity.ShipmentNumber = Shipment_Master.ShipmentNumber and
                                           Shipment_Irregularity.ShipmentDate = Shipment_Master.ShipmentDate and
                                           Shipment_Irregularity.CargoIrregularityCode in ('MSCA', 'FDCA')
                             ) IrregularityPieces,
                             (
                                    select
                                           sum(Imp_ArrivalManifestShipmentInfo.Piece)
                                    from
                                           Imp_ArrivalManifestByFlight inner join
                                           Imp_ArrivalManifestBySegment
                                                  on Imp_ArrivalManifestByFlight.ImpArrivalManifestByFlightId = Imp_ArrivalManifestBySegment.ImpArrivalManifestByFlightId inner join
                                           Imp_ArrivalManifestULD
                                                  on Imp_ArrivalManifestBySegment.ImpArrivalManifestBySegmentId = Imp_ArrivalManifestULD.ImpArrivalManifestBySegmentId inner join
                                           Imp_ArrivalManifestShipmentInfo
                                                  on Imp_ArrivalManifestULD.ImpArrivalManifestULDId = Imp_ArrivalManifestShipmentInfo.ImpArrivalManifestULDId
                                    where
                                           Imp_ArrivalManifestByFlight.FlightId = Imp_ShipmentVerification.FlightId and
                                           Imp_ArrivalManifestShipmentInfo.ShipmentNumber = Shipment_Master.ShipmentNumber and
                                           Imp_ArrivalManifestShipmentInfo.ShipmentDate = Shipment_Master.ShipmentDate
                             ) ManifestPieces
                      from
                             Imp_ShipmentVerification inner join
                             Flt_OperativeFlight
                                    on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID inner join
                             Flt_OperativeFlight_Legs
                                    on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID and
                                           Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} inner join
                             Shipment_Master
                                    on Imp_ShipmentVerification.ShipmentId = Shipment_Master.ShipmentId 
									and Shipment_Master.HandledByMasterHouse='H' inner join
							 Shipment_HouseInformation 
									on Shipment_HouseInformation.ShipmentId = Shipment_Master.ShipmentId inner join
                             Shipment_MasterCustomerInfo
                                    on Shipment_Master.ShipmentId = Shipment_MasterCustomerInfo.ShipmentId and
                                           Shipment_MasterCustomerInfo.CustomerType = 'CNE' left join
                             Customer_Master       AppointedAgentInfo
                                    on Shipment_MasterCustomerInfo.AppointedAgent = AppointedAgentInfo.Customer_ID
                      where  
                             (Imp_ShipmentVerification.NOA is null OR Imp_ShipmentVerification.NOA = 0) and
                             Shipment_Master.Destination in ( #{tenantAirport} , #{tenantCity} ) and  
                             Imp_ShipmentVerification.BreakDownPieces > 0 
                            and exists(
                                    select
                                           1
                                    from
                                           Imp_ShipmentVerification ShpVer
                                    where
                                           ShpVer.ShipmentId = Imp_ShipmentVerification.ShipmentId and
                                           (ShpVer.DocumentReceivedFlag = 1 OR 
                                                                           ShpVer.DocumentPouchReceivedFlag = 1 OR
                                                                           ShpVer.PhotoCopyAwbFlag= 1)
                             ) and
                              coalesce(Flt_OperativeFlight_Legs.DateSTA, Flt_OperativeFlight_Legs.DateSTA) > cast('15JUL2019 00:00:00' as datetime) 
					
              )InboundShipmentInfo inner join
                      Customer_Master
                             on InboundShipmentInfo.CustomerCode = Customer_Master.CustomerCode and
                                    Customer_Master.DeRegisterDate is null
              where
                      exists(select
                             1
                      from
                             Customer_Notification inner join
                             Customer_NotificationDtl
                                    on Customer_Notification.CustomerNotificationId = Customer_NotificationDtl.CustomerNotificationId
                      where
                             Customer_Notification.CustomerId = Customer_Master.Customer_ID and
                             Customer_Notification.NotificationTypeCode = 'EMI' 
                      )
              group by
                     InboundShipmentInfo.Flight_ID,
                      InboundShipmentInfo.FlightKey,
                      InboundShipmentInfo.FlightDate,
                      InboundShipmentInfo.ShipmentId,
                      InboundShipmentInfo.ShipmentNumber,
                      InboundShipmentInfo.ShipmentDate,
                      InboundShipmentInfo.Origin,
                      InboundShipmentInfo.Destination,
                      InboundShipmentInfo.Pieces,
                      InboundShipmentInfo.Weight,
                      InboundShipmentInfo.DocumentReceived,
                      InboundShipmentInfo.BreakDownPieces,
                      InboundShipmentInfo.BreakDownWeight,
                      InboundShipmentInfo.IrregularityPieces,
                      InboundShipmentInfo.ManifestPieces,
                      InboundShipmentInfo.CustomerCode,
                      InboundShipmentInfo.CustomerName,
                      InboundShipmentInfo.ConsigneeName,
                      Customer_Master.Customer_ID,
					  InboundShipmentInfo.housePieces,
					  InboundShipmentInfo.houseWeight,
					  InboundShipmentInfo.Number
              having
                      ((isnull(ManifestPieces, 0) > 0 and InboundShipmentInfo.BreakDownPieces = isnull(IrregularityPieces, 0) + isnull(ManifestPieces, 0))
                             OR (isnull(ManifestPieces, 0) = 0 and InboundShipmentInfo.BreakDownPieces = isnull(IrregularityPieces, 0)))
		
	]]>
	</select>
	
	<update id="sqlQueryUpdateShipmentVerificationNOAStatus"
		parameterType="com.ngen.cosys.application.model.ImportArrivalNotificationModel">
		update Imp_ShipmentVerification
             set
                    NOA = 1,
                    LastUpdatedUserCode = #{createdBy},
                    LastUpdatedDateTime = getdate()
             where
                    FlightId = #{flightId} and
                    ShipmentId = #{shipmentId} and
                    exists(
                                 SELECT 
                                       1
                                 FROM   
                                        Event_OutboundServiceMessageReferenceLog INNER JOIN
                                        Event_OutboundServiceMessageLog
                                              ON     Event_OutboundServiceMessageLog.OutboundServiceMessageLogId = Event_OutboundServiceMessageReferenceLog.OutboundServiceMessageLogId
                                 WHERE  
                                 Event_OutboundServiceMessageReferenceLog.MessageReferenceNumber = #{shipmentNumber}
                                       AND           Event_OutboundServiceMessageLog.MessageType = 'EMAIL'
                                       AND           Event_OutboundServiceMessageLog.MessageSubject IN ('SHIPMENT ARRIVAL NOTICE - [DO NOT REPLY]','SHIPMENT ARRIVAL NOTICE - E-FREIGHT SHIPMENT - [DO NOT REPLY]','SHIPMENT ARRIVAL NOTICE - E-AWB SHIPMENT - [DO NOT REPLY]')
                                       AND           Event_OutboundServiceMessageLog.MessageStatus IN ('INITIATED','SENT'))

	</update>
	
</mapper>