<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CiQReportQueryMapper">

	<resultMap id="ciqReportScheduledConfigMap"
		type="com.ngen.cosys.ciq.report.model.NotificationSchedule">
		<result column="CiqReportType" property="reportName" />
		<result column="GeneratedBy" property="reportFrequency" />
		<result column="FSUMessageType" property="messageType" />
		<result column="CarrierCode" property="carrierCode" />
		<result column="GeneratedOn" property="generatedOn" />
		<result column="CiqRptGenDay" property="dayInMonth" />
		<result column="CiqRptGenTime" property="configuredTime" />
		<result column="CiqRptGenWeek" property="weekOfTheDay" />
		<result column="TransitFlag" property="transitFlag" />
		<!-- CiQ Report member configured details -->
		<collection property="notificationMembers" javaType="List"
			ofType="com.ngen.cosys.ciq.report.model.NotificationMember" select="selectCiQReportNotificationMemberDetails"
			column="{reportName=CiqReportType,reportFrequency=GeneratedBy,messageType=FSUMessageType,carrierCode = CarrierCode}" />
	</resultMap>

	<resultMap id="ciqReportNotificationMemberDetailsMap"
		type="com.ngen.cosys.ciq.report.model.NotificationMember">
		<result column="CiqReportType" property="reportName" />
		<result column="GeneratedBy" property="reportFrequency" />
		<result column="FSUMessageType" property="messageType" />
		<result column="CargoiQEmailNotificationMembersInfoId"
			property="notificationMemberId" />
		<result column="CargoiQEmailNotificationScheduleId" property="notificationScheduleId" />
		<result column="EmailTo" property="emailId" />
		<result column="PartyType" property="partyType" />
	</resultMap>

	<!-- CiQ Report Schedule Configuration -->
	<select id="sqlSelectCiQReportScheduledConfig" parameterType="java.lang.String"
		resultMap="ciqReportScheduledConfigMap">
	
			SELECT	DISTINCT CargoiQ_EmailNotificationSchedule.CiqReportType, 
					CargoiQ_EmailNotificationSchedule.FSUMessageType,
					CargoiQ_EmailNotificationSchedule.CarrierCode, 
					UPPER(#{frequency}) AS GeneratedBy,
					CargoiQ_EmailNotificationSchedule.GeneratedOn, 
					CargoiQ_EmailNotificationSchedule.CiqRptGenDay, 
					CargoiQ_EmailNotificationSchedule.CiqRptGenTime, 
					CargoiQ_EmailNotificationSchedule.CiqRptGenWeek,
					CargoiQ_EmailNotificationSchedule.TransitFlag
			FROM	CargoiQ_EmailNotificationSchedule
			WHERE	UPPER(CargoiQ_EmailNotificationSchedule.GeneratedBy) like '%' + #{frequency} + '%'
			    -- AND  CargoiQ_EmailNotificationSchedule.CiqReportType ='FSU Messaging Exception Report'		
	</select>

	<!-- CiQ Report Notification Member Details -->
	<select id="selectCiQReportNotificationMemberDetails" resultMap="ciqReportNotificationMemberDetailsMap">
		
			SELECT	CargoiQ_EmailNotificationSchedule.CiqReportType,
					UPPER(CargoiQ_EmailNotificationSchedule.GeneratedBy) AS GeneratedBy,
					CargoiQ_EmailNotificationMembersInfo.CargoiQEmailNotificationMembersInfoId,
					CargoiQ_EmailNotificationMembersInfo.CargoiQEmailNotificationScheduleId,
					CargoiQ_EmailNotificationMembersInfo.EmailTo,
					CargoiQ_EmailNotificationSchedule.PartyType
			FROM	CargoiQ_EmailNotificationMembersInfo
				INNER JOIN
					CargoiQ_EmailNotificationSchedule
				ON	CargoiQ_EmailNotificationSchedule.CargoiQEmailNotificationScheduleId 
						= CargoiQ_EmailNotificationMembersInfo.CargoiQEmailNotificationScheduleId
			WHERE	CargoiQ_EmailNotificationSchedule.CiqReportType = #{reportName}
			        AND	UPPER(CargoiQ_EmailNotificationSchedule.GeneratedBy) like '%' + #{reportFrequency} + '%'
                 <if test = "messageType !=null and messageType != ''" >
			            AND FSUMessageType = #{messageType}
			        </if>
			        <if test = "carrierCode !=null and carrierCode != ''" >
			            AND CarrierCode = #{carrierCode}
			        </if>		
			        <if test="reportFrequency == 'M'.toString()">
			        	AND Monthly = 1
			        </if>
			        <if test="reportFrequency == 'W'.toString()">
			        	AND Weekly = 1
			        </if>
			        <if test="reportFrequency == 'D'.toString()">
			        	AND Daily = 1
			        </if>
			
	</select>

	<insert id="sqlInsertCiQReportLog" parameterType="com.ngen.cosys.ciq.report.model.CiQReportLog"
		useGeneratedKeys="true" keyColumn="CargoiQEmailReportLogId" keyProperty="reportLogId" >
		<![CDATA[
			INSERT INTO CargoiQ_EmailReportLog 
			(
				ReportName, ReportFrequency,ReportGeneratedTime,FSUMessageType,CarrierCode, Status,
				CreatedUserCode, CreatedDateTime, LastUpdatedUserCode, LastUpdatedDateTime, TransitFlag
			)
			VALUES
			(
				#{reportName}, #{reportFrequency},GETDATE(),#{messageType},#{carrierCode}, #{status},
				'BATCH', GETDATE(), NULL, NULL, #{transitFlag}
			)
		]]>
	</insert>

	<update id="sqlUpdateCiQReportLog" parameterType="com.ngen.cosys.ciq.report.model.CiQReportLog">
		<![CDATA[
			UPDATE 	CargoiQ_EmailReportLog 
			SET		ReportGeneratedTime = GETDATE(),
					Status = #{status},
					LastUpdatedUserCode = 'BATCH',
					LastUpdatedDateTime = GETDATE()
			WHERE	CargoiQEmailReportLogId = #{reportLogId}
		]]>
	</update>

	<select id="sqlSelectCiQReportLog" parameterType="com.ngen.cosys.ciq.report.model.CiQReportLog"
		resultType="java.lang.Boolean">

	SELECT CASE WHEN COUNT(1) = 0 
	AND isnull((select ParameterValueChar from App_SystemParameters where ParameterCode = 'CIQ_BATCH_ACTIVATION'), 0) = 1 THEN 0 ELSE 1 END
	FROM
	CargoiQ_EmailReportLog
	WHERE ReportName = #{reportName}
	AND
	ReportFrequency = #{reportFrequency}
	AND CAST(ISNULL(ReportGeneratedTime, GETDATE()) AS
	DATE) = CAST(GETDATE() AS DATE)
	<if test="messageType !=null and messageType != ''">
		AND FSUMessageType = #{messageType}
	</if>
	<if test="carrierCode !=null and carrierCode != ''">
		AND CarrierCode
		= #{carrierCode}
	</if>
		AND ISNULL(TransitFlag, 0) = #{transitFlag}
	</select>

	
	<select id="sqlIsReportDataExistsRCS" 	parameterType="com.ngen.cosys.ciq.report.model.NotificationSchedule" resultType="java.lang.Boolean">
		select case when count (1) > 0 then 1 else 0 end dataExists from (
				SELECT distinct 
			       'RCS' FSUMessageType,
			       Actualflt.CarrierCode Carrier,
			       Shipment_Master.ShipmentNumber AwbNumber,
				   Shipment_Master.Shipmentid,
			       Shipment_Master.Pieces TotalPcs,
			       Shipment_Master.Weight TotalWgt,
			       case when OutMessage.Message is null then NULL else RCSMessageInfo.pieces end MessagePieces,
			       case when OutMessage.Message is null then NULL else RCSMessageInfo.weight end MessageWeight,
			       Actualflt.FlightKey FlightNumber,
				   upper(format(isnull(Actualflt.DateSTD,Actualflt.DateSTD),'dd-MMM-yyyy')) FlightDate,
				   case when Actualflt.FlightType='P' then 'PAX' else 'CGO' end flightType,   
			       Shipment_Master.Origin,
			       Shipment_Master.Destination,
			       #{tenantAirport} Airport,
			       Shipment_Master.PartShipment,
			       isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
			       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,
				   upper(format(isnull(Actualflt.DateSTD,Actualflt.DateSTD),'dd-MMM-yyyy HH:mm')) STD,
				   upper(format(isnull(Actualflt.DateATD,Actualflt.DateSTD),'dd-MMM-yyyy HH:mm')) ATD,
				   case when OutMessage.Message is null
			                         then NULL else 
				   upper(format(convert(datetime, CONVERT(datetimeoffset, RCSMessageInfo.EventCompletedOn)  
				   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm:ss')) end MessageSentTime,
			 		Actualflt.SLATime,
				   case when OutMessage.Message is null
			                         then NULL else 
				  (DATEDIFF(minute,convert(datetime, CONVERT(datetimeoffset, RCSMessageInfo.EventCompletedOn)  
				   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),
					 isnull(Actualflt.DateATD, Actualflt.DateSTD))) end SLA_Difference_Minute,
				   OutMessage.Message,
			      case   
			              when OutMessage.Message is null
			                         then 
			                      'MISSING'
			              when 
					(DATEDIFF(minute,convert(datetime, CONVERT(datetimeoffset, RCSMessageInfo.EventCompletedOn)  
				   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),
					 isnull(Actualflt.DateATD, Actualflt.DateSTD)))
					 &lt; (Actualflt.SLATime) then
			                     'LATE'  
			                else  'On Time'              
			              end SLAStatus 
			from
			       Shipment_Master inner join
			       (
			         SELECT 
			            Exp_ManifestShipmentInfo.ShipmentId,
			           min(Flt_OperativeFlight_Legs.DateSTD) STD
			          from
			            Exp_Manifest inner join
			            Exp_ManifestShipmentInfo
			                on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
			            Flt_OperativeFlight
			                on Exp_Manifest.FlightId = Flt_OperativeFlight.Flight_Id inner join
			            Flt_OperativeFlight_Legs
			                on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id 
			            WHERE
			            Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport}  and
					  	cast(Flt_OperativeFlight_Legs.DateSTD as datetime) between 
					  	cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
			            GROUP BY
			             Exp_ManifestShipmentInfo.ShipmentId
			       )Exp_ManifestShipmentInfo
			              on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId  INNER JOIN
					(select 	 
							Exp_ManifestShipmentInfo.ShipmentId,
								  Flt_OperativeFlight.Flight_ID,
								  Flt_OperativeFlight.CarrierCode,
			                      Flt_OperativeFlight.FlightNumber FlightNumber,
			                      Flt_OperativeFlight.FlightKey FlightKey,
			                      Flt_OperativeFlight.FlightType FlightType,
			                      Flt_OperativeFlight_Legs.DateSTD DateSTD,
			                      Flt_OperativeFlight_Legs.DateATD DateATD,
								  Flt_OperativeFlight_Legs.FlightOffPoint,
			                      CargoiQ_SLAConfiguration.SLATime  SLATime,
							ISNULL(ISNULL( 
								   (select top 1 Name channel 
									from Interface_IncomingOutgoingMessageDefinition a 
									inner join
									Interface_ExternalSystem c 
									 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
									 inner join 
									 Interface_AssociateCustomerWithMessageDefinition d
									 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
									 inner join 
									 Interface_MessageDefinitionByCustomer e 
									 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
									 where messageType='FSU' and SubMessageType='RCS' and CarrierCode=Flt_OperativeFlight.CarrierCode
									 and FlightKey=Flt_OperativeFlight.FlightKey
									 order by name asc), 
									 (select top 1 Name channel 
									  from Interface_IncomingOutgoingMessageDefinition a 
									 inner join
									 Interface_ExternalSystem c 
									 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
									 inner join 
									 Interface_AssociateCustomerWithMessageDefinition d
									 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
									 inner join 
									 Interface_MessageDefinitionByCustomer e 
									 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
									 where messageType='FSU' and SubMessageType='RCS' and CarrierCode=Flt_OperativeFlight.CarrierCode
									 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
									 order by name asc)),
								ISNULL((select top 1 Name channel 
									  from Interface_IncomingOutgoingMessageDefinition a 
									 inner join
									 Interface_ExternalSystem c 
									 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
									 inner join 
									 Interface_AssociateCustomerWithMessageDefinition d
									 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
									 inner join 
									 Interface_MessageDefinitionByCustomer e 
									 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
									 where messageType='FSU' and SubMessageType='RCS' and CarrierCode=Flt_OperativeFlight.CarrierCode
									 order by name asc),
									(select top 1 Name channel 
									 from Interface_IncomingOutgoingMessageDefinition a 
									 inner join
									 Interface_ExternalSystem c 
									 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
									 inner join 
									 Interface_AssociateCustomerWithMessageDefinition d
									 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
									 inner join 
									 Interface_MessageDefinitionByCustomer e 
									 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
									 where messageType='FSU' and SubMessageType='RCS' and CarrierCode='DEFAULT'
									 order by name asc))) as Channel  	
					FROM
						   Exp_Manifest inner join
			                Exp_ManifestShipmentInfo
			                   on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
			                Flt_OperativeFlight
			                   on Exp_Manifest.FlightId = Flt_OperativeFlight.Flight_Id inner join
			               Flt_OperativeFlight_Legs
			                   on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id left join
			                CargoiQ_SLAConfiguration
			                   on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
			                (CargoiQ_SLAConfiguration.FlowType = 'E' OR CargoiQ_SLAConfiguration.FlowType is null) and
			                  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCS' and
			                (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
			                (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightOffPoint)
			              where
			                      Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} 
			          
					)Actualflt on Actualflt.DateSTD=Exp_ManifestShipmentInfo.STD and Actualflt.ShipmentId=Exp_ManifestShipmentInfo.ShipmentId	
			LEFT JOIN
			(select
			            Shipment_StatusUpdateEvent.ShipmentNumber,
						Shipment_StatusUpdateEvent.ShipmentId,
			            Shipment_StatusUpdateEvent.pieces,
			            Shipment_StatusUpdateEvent.weight,
						Shipment_StatusUpdateEvent.EventType,
						Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
						Shipment_StatusUpdateEvent.CreatedUserCode,
						Shipment_StatusUpdateEvent.EventCompletedOn
			                    from
			                             Shipment_StatusUpdateEvent
			                      where
			                             Shipment_StatusUpdateEvent.EventType = 'RCS' and Shipment_StatusUpdateEvent.EventCompletedOn is not null
										  and Shipment_StatusUpdateEvent.IsOutgoing='1' 
							)RCSMessageInfo
			                      on Shipment_Master.Shipmentid = RCSMessageInfo.Shipmentid  and RCSMessageInfo.CreatedUserCode=Actualflt.Channel
			LEFT JOIN
			 (select Interface_OutgoingMessageLog.Message,Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
			                               from
			                                  Interface_OutgoingMessageLog
			                               where
			                                  Interface_OutgoingMessageLog.MessageType = 'FSU' and
			                                  Interface_OutgoingMessageLog.SubMessageType = 'RCS' and 
											  Interface_OutgoingMessageLog.Message is not null								  
			   ) OutMessage on OutMessage.InterfaceOutgoingMessageLogId= RCSMessageInfo.InterfaceOutgoingMessageLogId
			LEFT JOIN
			       (select
			                      distinct Shipment_MasterSHC.ShipmentId,
			                      1 eAWBIndicator
			              from
			                      Shipment_Master inner join
			                      Shipment_MasterSHC
			                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
			                      Mst_AssociateSHCByHandlingGroup
			                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
			                      Mst_SHCHandlingGroup
			                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
			              where
			                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
			                      exists(
			                             select
			                                    1
			                             from
			                                    Shipment_FreightWayBill
			                             where
			                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
			                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
			                      )
			              )EAWShipmentInfo
			                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
			       (select
			                      distinct Shipment_MasterSHC.ShipmentId,
			                      1 RACIndicator
			              from
			                      Shipment_Master inner join
			                      Shipment_MasterSHC
			                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
			                      Mst_AssociateSHCByHandlingGroup
			                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
			                      Mst_SHCHandlingGroup
			                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
			              where
			                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
			              )RACShipmentInfo
			                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId 
			where
			       Shipment_Master.Origin in ( #{tenantAirport} , #{tenantCity} ) and
			       Actualflt.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration where CiqMessageTypeId = 'RCS') and
			       Shipment_Master.ShipmentType in ('AWB') and
			       Shipment_Master.CancelledOn is null 
				 	 and OutMessage.Message is not null and 
					 (DATEDIFF(minute,convert(datetime, CONVERT(datetimeoffset, RCSMessageInfo.EventCompletedOn)  
				   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),
					 isnull(Actualflt.DateATD, Actualflt.DateSTD)))
					 &lt; (Actualflt.SLATime) 
			UNION
			
			SELECT distinct 
			       'RCS' FSUMessageType,
			       Actualflt.CarrierCode Carrier,
			       Shipment_Master.ShipmentNumber AwbNumber,
				   Shipment_Master.Shipmentid,
			       Shipment_Master.Pieces TotalPcs,
			       Shipment_Master.Weight TotalWgt,
			       case when OutMessage.Message is null then NULL else RCSMessageInfo.pieces end MessagePieces,
			       case when OutMessage.Message is null then NULL else RCSMessageInfo.weight end MessageWeight,
			       Actualflt.FlightKey FlightNumber,
				   upper(format(isnull(Actualflt.DateSTD,Actualflt.DateSTD),'dd-MMM-yyyy')) FlightDate,
				   case when Actualflt.FlightType='P' then 'PAX' else 'CGO' end flightType,   
			       Shipment_Master.Origin,
			       Shipment_Master.Destination,
			       #{tenantAirport} Airport,
			       Shipment_Master.PartShipment,
			       isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
			       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,
				   upper(format(isnull(Actualflt.DateSTD,Actualflt.DateSTD),'dd-MMM-yyyy HH:mm')) STD,
				   upper(format(isnull(Actualflt.DateATD,Actualflt.DateSTD),'dd-MMM-yyyy HH:mm')) ATD,
				   case when OutMessage.Message is null
			                         then NULL else 
				   upper(format(convert(datetime, CONVERT(datetimeoffset, RCSMessageInfo.EventCompletedOn)  
				   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm:ss')) end MessageSentTime,
			 		Actualflt.SLATime,
				   case when OutMessage.Message is null
			                         then NULL else 
				  (DATEDIFF(minute,convert(datetime, CONVERT(datetimeoffset, RCSMessageInfo.EventCompletedOn)  
				   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),
					 isnull(Actualflt.DateATD, Actualflt.DateSTD))) end SLA_Difference_Minute,
				   OutMessage.Message,
			       'MISSING' as SLAStatus 
			from
			       Shipment_Master inner join
			       (
			         SELECT 
			            Exp_ManifestShipmentInfo.ShipmentId,
			           min(Flt_OperativeFlight_Legs.DateSTD) STD
			          from
			            Exp_Manifest inner join
			            Exp_ManifestShipmentInfo
			                on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
			            Flt_OperativeFlight
			                on Exp_Manifest.FlightId = Flt_OperativeFlight.Flight_Id inner join
			            Flt_OperativeFlight_Legs
			                on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id 
			            WHERE
			            Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport}  and
					  	cast(Flt_OperativeFlight_Legs.DateSTD as datetime) between 
					  	cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
			            GROUP BY
			             Exp_ManifestShipmentInfo.ShipmentId
			       )Exp_ManifestShipmentInfo
			              on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId  INNER JOIN
					(select 	 
							Exp_ManifestShipmentInfo.ShipmentId,
								  Flt_OperativeFlight.Flight_ID,
								  Flt_OperativeFlight.CarrierCode,
			                      Flt_OperativeFlight.FlightNumber FlightNumber,
			                      Flt_OperativeFlight.FlightKey FlightKey,
			                      Flt_OperativeFlight.FlightType FlightType,
			                      Flt_OperativeFlight_Legs.DateSTD DateSTD,
			                      Flt_OperativeFlight_Legs.DateATD DateATD,
								  Flt_OperativeFlight_Legs.FlightOffPoint,
			                      CargoiQ_SLAConfiguration.SLATime  SLATime,
							ISNULL(ISNULL( 
								   (select top 1 Name channel 
									from Interface_IncomingOutgoingMessageDefinition a 
									inner join
									Interface_ExternalSystem c 
									 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
									 inner join 
									 Interface_AssociateCustomerWithMessageDefinition d
									 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
									 inner join 
									 Interface_MessageDefinitionByCustomer e 
									 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
									 where messageType='FSU' and SubMessageType='RCS' and CarrierCode=Flt_OperativeFlight.CarrierCode
									 and FlightKey=Flt_OperativeFlight.FlightKey
									 order by name asc), 
									 (select top 1 Name channel 
									  from Interface_IncomingOutgoingMessageDefinition a 
									 inner join
									 Interface_ExternalSystem c 
									 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
									 inner join 
									 Interface_AssociateCustomerWithMessageDefinition d
									 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
									 inner join 
									 Interface_MessageDefinitionByCustomer e 
									 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
									 where messageType='FSU' and SubMessageType='RCS' and CarrierCode=Flt_OperativeFlight.CarrierCode
									 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
									 order by name asc)),
								ISNULL((select top 1 Name channel 
									  from Interface_IncomingOutgoingMessageDefinition a 
									 inner join
									 Interface_ExternalSystem c 
									 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
									 inner join 
									 Interface_AssociateCustomerWithMessageDefinition d
									 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
									 inner join 
									 Interface_MessageDefinitionByCustomer e 
									 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
									 where messageType='FSU' and SubMessageType='RCS' and CarrierCode=Flt_OperativeFlight.CarrierCode
									 order by name asc),
									(select top 1 Name channel 
									 from Interface_IncomingOutgoingMessageDefinition a 
									 inner join
									 Interface_ExternalSystem c 
									 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
									 inner join 
									 Interface_AssociateCustomerWithMessageDefinition d
									 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
									 inner join 
									 Interface_MessageDefinitionByCustomer e 
									 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
									 where messageType='FSU' and SubMessageType='RCS' and CarrierCode='DEFAULT'
									 order by name asc))) as Channel  	
					FROM
						   Exp_Manifest inner join
			                Exp_ManifestShipmentInfo
			                   on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
			                Flt_OperativeFlight
			                   on Exp_Manifest.FlightId = Flt_OperativeFlight.Flight_Id inner join
			               Flt_OperativeFlight_Legs
			                   on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id left join
			                CargoiQ_SLAConfiguration
			                   on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
			                (CargoiQ_SLAConfiguration.FlowType = 'E' OR CargoiQ_SLAConfiguration.FlowType is null) and
			                  CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCS' and
			                (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
			                (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightOffPoint)
			              where
			                      Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} 
			          
					)Actualflt on Actualflt.DateSTD=Exp_ManifestShipmentInfo.STD and Actualflt.ShipmentId=Exp_ManifestShipmentInfo.ShipmentId	
			LEFT JOIN
			(select
			            Shipment_StatusUpdateEvent.ShipmentNumber,
						Shipment_StatusUpdateEvent.ShipmentId,
			            Shipment_StatusUpdateEvent.pieces,
			            Shipment_StatusUpdateEvent.weight,
						Shipment_StatusUpdateEvent.EventType,
						Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
						Shipment_StatusUpdateEvent.CreatedUserCode,
						Shipment_StatusUpdateEvent.EventCompletedOn
			                    from
			                             Shipment_StatusUpdateEvent
			                      where
			                             Shipment_StatusUpdateEvent.EventType = 'RCS' and Shipment_StatusUpdateEvent.EventCompletedOn is not null
										  and Shipment_StatusUpdateEvent.IsOutgoing='1' 
							)RCSMessageInfo
			                      on Shipment_Master.Shipmentid = RCSMessageInfo.Shipmentid  and RCSMessageInfo.CreatedUserCode=Actualflt.Channel
			LEFT JOIN
			 (select Interface_OutgoingMessageLog.Message,Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
			                               from
			                                  Interface_OutgoingMessageLog
			                               where
			                                  Interface_OutgoingMessageLog.MessageType = 'FSU' and
			                                  Interface_OutgoingMessageLog.SubMessageType = 'RCS' and 
											  Interface_OutgoingMessageLog.Message is not null								  
			   ) OutMessage on OutMessage.InterfaceOutgoingMessageLogId= RCSMessageInfo.InterfaceOutgoingMessageLogId
			LEFT JOIN
			       (select
			                      distinct Shipment_MasterSHC.ShipmentId,
			                      1 eAWBIndicator
			              from
			                      Shipment_Master inner join
			                      Shipment_MasterSHC
			                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
			                      Mst_AssociateSHCByHandlingGroup
			                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
			                      Mst_SHCHandlingGroup
			                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
			              where
			                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
			                      exists(
			                             select
			                                    1
			                             from
			                                    Shipment_FreightWayBill
			                             where
			                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
			                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
			                      )
			              )EAWShipmentInfo
			                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
			       (select
			                      distinct Shipment_MasterSHC.ShipmentId,
			                      1 RACIndicator
			              from
			                      Shipment_Master inner join
			                      Shipment_MasterSHC
			                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
			                      Mst_AssociateSHCByHandlingGroup
			                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
			                      Mst_SHCHandlingGroup
			                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
			              where
			                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
			              )RACShipmentInfo
			                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId 
			where
			       Shipment_Master.Origin in ( #{tenantAirport} , #{tenantCity} ) and
			       Actualflt.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration where CiqMessageTypeId = 'RCS') and
			       Shipment_Master.ShipmentType in ('AWB') and
			       Shipment_Master.CancelledOn is null 
					and OutMessage.Message is null
		) data
	</select>
	<select id="sqlIsReportDataExistsNFD" 	parameterType="com.ngen.cosys.ciq.report.model.NotificationSchedule" resultType="java.lang.Boolean">
		select case when count (1) > 0 then 1 else 0 end dataExists from (
			SELECT distinct
				       'NFD' FSUMessageType, 
				       ShipmentVerificationInfo.carriercode Carrier,
				          ShipmentVerificationInfo.flight_id,
				       Shipment_Master.shipmentNumber AwbNumber,
				       Shipment_Master.shipmentid, 
				       Shipment_Master.pieces TotalPcs, 
				       Shipment_Master.weight TotalWgt,
				       MessageEventInfo.Pieces MessagePieces,
				       MessageEventInfo.Weight MessageWeight,
				       isnull(MessageEventInfo.FlightKey,ShipmentVerificationInfo.FlightKey) FlightNumber, 
				       isnull(MessageEventInfo.FlightType, ShipmentVerificationInfo.FlightType)FlightType,    
				       upper(format(isnull(MessageEventInfo.DateATA,ShipmentVerificationInfo.DateATA),'dd-MMM-yyyy')) FlightDate, 
				       Shipment_Master.Origin,
				       Shipment_Master.Destination,
				       #{tenantAirport} Airport,
				       Shipment_Master.PartShipment,
				          isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
				       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,
				       upper(format(isnull(MessageEventInfo.DateSTA,ShipmentVerificationInfo.DateSTA),'dd-MMM-yyyy HH:mm')) STA, 
				       upper(format(isnull(MessageEventInfo.DateATA,ShipmentVerificationInfo.DateATA),'dd-MMM-yyyy HH:mm')) ATA, 
				          upper(format(convert(datetime, CONVERT(datetimeoffset, (select a.EventCompletedOn from
				          (SELECT Shipment_StatusUpdateEvent.EventCompletedOn,
				         ROW_NUMBER() OVER (PARTITION BY shipmentId ORDER BY CreatedDateTime DESC) AS rn
				              FROM Shipment_StatusUpdateEvent where shipmentId=Shipment_Master.shipmentId and Shipment_StatusUpdateEvent.eventType='NFD'
				              and Shipment_StatusUpdateEvent.EventCompletedOn is not null) a where a.rn=1))  
				               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm:ss'))ActualEventTime,
				          MessageEventInfo.SLATime,
				          (DATEDIFF(minute,isnull(MessageEventInfo.DateATA, MessageEventInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, (select a.EventCompletedOn from
				          (SELECT Shipment_StatusUpdateEvent.EventCompletedOn,
				         ROW_NUMBER() OVER (PARTITION BY shipmentId ORDER BY CreatedDateTime DESC) AS rn
				              FROM Shipment_StatusUpdateEvent where shipmentId=Shipment_Master.shipmentId and Shipment_StatusUpdateEvent.eventType='NFD'
				              and Shipment_StatusUpdateEvent.EventCompletedOn is not null) a where a.rn=1) )  
				               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))-isnull(MessageEventInfo.SLATime,0))SLA_Difference_Minute,
				          MessageEventInfo.Message,
				       'LATE' SLAStatus 
				from
				       Shipment_Master inner join
				           (
				         select distinct
				               Imp_ShipmentVerification.ShipmentId,
				               Flt_OperativeFlight.CarrierCode,
				                         Flt_OperativeFlight.Flight_Id,
				                         Flt_OperativeFlight.FlightKey,
				                         Flt_OperativeFlight.FlightType,
				               Flt_OperativeFlight_Legs.DateATA,
				                         Flt_OperativeFlight_legs.DateSTA
				              from
				               Imp_ShipmentVerification inner join  Flt_OperativeFlight
				               on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID and 
				               Imp_ShipmentVerification.breakdownpieces is not null and Imp_ShipmentVerification.breakdownpieces >0
				                         inner join flt_operativeflight_legs on flt_operativeflight_legs.flight_id=Flt_OperativeFlight.flight_id and 
				                         flt_operativeflight_legs.flightOffPoint= #{tenantAirport}
				              )ShipmentVerificationInfo on Shipment_Master.ShipmentId = ShipmentVerificationInfo.ShipmentId left join
				              (
				              select
				                Shipment_StatusUpdateEvent.ShipmentNumber,
				                Shipment_StatusUpdateEvent.ShipmentDate,
				                          Shipment_StatusUpdateEvent.IncomingFlightId,
				                Flt_OperativeFlight.CarrierCode,
				                Flt_OperativeFlight.FlightNumber,
				                Flt_OperativeFlight.FlightKey,
				                Flt_OperativeFlight.FlightType,
				                Flt_OperativeFlight_Legs.DateSTA,
				                Flt_OperativeFlight_Legs.DateATA,
				                Shipment_StatusUpdateEvent.Pieces,
				                             Shipment_StatusUpdateEvent.Weight,               
				                CargoiQ_SLAConfiguration.SLATime,
				                (select
				                    TOP 1 Interface_OutgoingMessageLog.Message
				                    from
				                    Interface_OutgoingMessageLog 
				                    where
				                    Interface_OutgoingMessageLog.ShipmentNumber = Shipment_StatusUpdateEvent.ShipmentNumber and
				                    Interface_OutgoingMessageLog.ShipmentDate = Shipment_StatusUpdateEvent.ShipmentDate  and
				                             Interface_OutgoingMessageLog.CarrierCode=Flt_OperativeFlight.CarrierCode and 
				                             Interface_OutgoingMessageLog.FlightNumber=Flt_OperativeFlight.FlightNumber and 
				                             Interface_OutgoingMessageLog.FlightOriginDate=Flt_OperativeFlight.FlightOriginDate and
				                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
				                                    Interface_OutgoingMessageLog.SubMessageType = 'NFD' and 
				                    Interface_OutgoingMessageLog.Status != 'ERROR'  and  
				                    Interface_OutgoingMessageLog.Message is not null
				                ) Message
				                from
				                    Shipment_StatusUpdateEvent inner join
				                    Flt_OperativeFlight
				                     on Shipment_StatusUpdateEvent.IncomingFlightId = Flt_OperativeFlight.Flight_ID inner join
				                    Flt_OperativeFlight_Legs
				                     on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID left join
				                    CargoiQ_SLAConfiguration
				                     on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
				                    (CargoiQ_SLAConfiguration.FlowType = 'I' OR CargoiQ_SLAConfiguration.FlowType is null) and
				                    CargoiQ_SLAConfiguration.CiqMessageTypeId = 'NFD' and
				                    (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
				                    (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)      
				              where
				                      Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport}
				                    and
				                      Shipment_StatusUpdateEvent.EventType = 'NFD'
				              )MessageEventInfo
				                      on Shipment_Master.ShipmentNumber = MessageEventInfo.ShipmentNumber and
				                         Shipment_Master.ShipmentDate = MessageEventInfo.ShipmentDate  and 
				                                            MessageEventInfo.IncomingFlightId= ShipmentVerificationInfo.Flight_Id 
				                      left join
				       (select
				                      distinct Shipment_MasterSHC.ShipmentId,
				                      1 eAWBIndicator
				              from
				                      Shipment_Master inner join
				                      Shipment_MasterSHC
				                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
				                      Mst_AssociateSHCByHandlingGroup
				                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
				                      Mst_SHCHandlingGroup
				                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
				              where
				                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
				                      exists(
				                             select
				                                    1
				                            from
				                                    Shipment_FreightWayBill
				                             where
				                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
				                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
				                      )
				              )EAWShipmentInfo
				                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
				       (select
				                      distinct Shipment_MasterSHC.ShipmentId,
				                      1 RACIndicator
				              from
				                      Shipment_Master inner join
				                      Shipment_MasterSHC
				                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
				                      Mst_AssociateSHCByHandlingGroup
				                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
				                      Mst_SHCHandlingGroup
				                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
				              where
				                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
				              )RACShipmentInfo
				                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId             
				where 
				       Shipment_Master.Destination in ( #{tenantAirport} , #{tenantCity} ) and
				       Shipment_Master.ShipmentType in ('AWB') and
				       ShipmentVerificationInfo.carriercode in  ('SQ') and 
				       Shipment_Master.CancelledOn is null and
				       cast(ShipmentVerificationInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
				          and convert(datetime, CONVERT(datetimeoffset, (select a.EventCompletedOn from
				          (SELECT Shipment_StatusUpdateEvent.EventCompletedOn,
				         ROW_NUMBER() OVER (PARTITION BY shipmentId ORDER BY CreatedDateTime DESC) AS rn
				              FROM Shipment_StatusUpdateEvent where shipmentId=Shipment_Master.shipmentId and Shipment_StatusUpdateEvent.eventType='NFD'
				              and Shipment_StatusUpdateEvent.EventCompletedOn is not null) a where a.rn=1))  
				               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')) 
				        > dateadd(minute, MessageEventInfo.SLATime, isnull(MessageEventInfo.DateATA, MessageEventInfo.DateSTA))
				              and MessageEventInfo.Message is not null
				UNION
				SELECT distinct
				       'NFD' FSUMessageType, 
				       ShipmentVerificationInfo.carriercode Carrier,
				          ShipmentVerificationInfo.flight_id,
				       Shipment_Master.shipmentNumber AwbNumber,
				       Shipment_Master.shipmentid, 
				       Shipment_Master.pieces TotalPcs, 
				       Shipment_Master.weight TotalWgt,
				       MessageEventInfo.Pieces MessagePieces,
				       MessageEventInfo.Weight MessageWeight,
				       isnull(MessageEventInfo.FlightKey,ShipmentVerificationInfo.FlightKey) FlightNumber, 
				       isnull(MessageEventInfo.FlightType, ShipmentVerificationInfo.FlightType)FlightType,    
				       upper(format(isnull(MessageEventInfo.DateATA,ShipmentVerificationInfo.DateATA),'dd-MMM-yyyy')) FlightDate, 
				       Shipment_Master.Origin,
				       Shipment_Master.Destination,
				       #{tenantAirport} Airport,
				       Shipment_Master.PartShipment,
				          isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
				       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,
				       upper(format(isnull(MessageEventInfo.DateSTA,ShipmentVerificationInfo.DateSTA),'dd-MMM-yyyy HH:mm')) STA, 
				       upper(format(isnull(MessageEventInfo.DateATA,ShipmentVerificationInfo.DateATA),'dd-MMM-yyyy HH:mm')) ATA, 
				          upper(format(convert(datetime, CONVERT(datetimeoffset, (select a.EventCompletedOn from
				          (SELECT Shipment_StatusUpdateEvent.EventCompletedOn,
				         ROW_NUMBER() OVER (PARTITION BY shipmentId ORDER BY CreatedDateTime DESC) AS rn
				              FROM Shipment_StatusUpdateEvent where shipmentId=Shipment_Master.shipmentId and Shipment_StatusUpdateEvent.eventType='NFD'
				              and Shipment_StatusUpdateEvent.EventCompletedOn is not null) a where a.rn=1))  
				               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm:ss'))ActualEventTime,
				          MessageEventInfo.SLATime,
				          (DATEDIFF(minute,isnull(MessageEventInfo.DateATA, MessageEventInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, (select a.EventCompletedOn from
				          (SELECT Shipment_StatusUpdateEvent.EventCompletedOn,
				         ROW_NUMBER() OVER (PARTITION BY shipmentId ORDER BY CreatedDateTime DESC) AS rn
				              FROM Shipment_StatusUpdateEvent where shipmentId=Shipment_Master.shipmentId and Shipment_StatusUpdateEvent.eventType='NFD'
				              and Shipment_StatusUpdateEvent.EventCompletedOn is not null) a where a.rn=1) )  
				               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))-isnull(MessageEventInfo.SLATime,0))SLA_Difference_Minute,
				          MessageEventInfo.Message,
				       case   
				          when MessageEventInfo.Message is null
				       then 
				          'MISSING' else 'I'
				               
				          end SLAStatus 
				from
				       Shipment_Master inner join
				           (
				         select distinct
				               Imp_ShipmentVerification.ShipmentId,
				               Flt_OperativeFlight.CarrierCode,
				                         Flt_OperativeFlight.Flight_Id,
				                         Flt_OperativeFlight.FlightKey,
				                         Flt_OperativeFlight.FlightType,
				               Flt_OperativeFlight_Legs.DateATA,
				                         Flt_OperativeFlight_legs.DateSTA
				              from
				               Imp_ShipmentVerification inner join  Flt_OperativeFlight
				               on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID and 
				               Imp_ShipmentVerification.breakdownpieces is not null and Imp_ShipmentVerification.breakdownpieces >0
				                         inner join flt_operativeflight_legs on flt_operativeflight_legs.flight_id=Flt_OperativeFlight.flight_id and 
				                         flt_operativeflight_legs.flightOffPoint= #{tenantAirport}
				              )ShipmentVerificationInfo on Shipment_Master.ShipmentId = ShipmentVerificationInfo.ShipmentId left join
				              (
				              select
				                Shipment_StatusUpdateEvent.ShipmentNumber,
				                Shipment_StatusUpdateEvent.ShipmentDate,
				                          Shipment_StatusUpdateEvent.IncomingFlightId,
				                Flt_OperativeFlight.CarrierCode,
				                Flt_OperativeFlight.FlightNumber,
				                Flt_OperativeFlight.FlightKey,
				                Flt_OperativeFlight.FlightType,
				                Flt_OperativeFlight_Legs.DateSTA,
				                Flt_OperativeFlight_Legs.DateATA,
				                Shipment_StatusUpdateEvent.Pieces,
				                             Shipment_StatusUpdateEvent.Weight,               
				                CargoiQ_SLAConfiguration.SLATime,
				                (select
				                    TOP 1 Interface_OutgoingMessageLog.Message
				                    from
				                    Interface_OutgoingMessageLog 
				                    where
				                    Interface_OutgoingMessageLog.ShipmentNumber = Shipment_StatusUpdateEvent.ShipmentNumber and
				                    Interface_OutgoingMessageLog.ShipmentDate = Shipment_StatusUpdateEvent.ShipmentDate  and
				                             Interface_OutgoingMessageLog.CarrierCode=Flt_OperativeFlight.CarrierCode and 
				                             Interface_OutgoingMessageLog.FlightNumber=Flt_OperativeFlight.FlightNumber and 
				                             Interface_OutgoingMessageLog.FlightOriginDate=Flt_OperativeFlight.FlightOriginDate and
				                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
				                                    Interface_OutgoingMessageLog.SubMessageType = 'NFD' and 
				                    Interface_OutgoingMessageLog.Status != 'ERROR'  and  
				                    Interface_OutgoingMessageLog.Message is not null
				                ) Message
				                from
				                    Shipment_StatusUpdateEvent inner join
				                    Flt_OperativeFlight
				                     on Shipment_StatusUpdateEvent.IncomingFlightId = Flt_OperativeFlight.Flight_ID inner join
				                    Flt_OperativeFlight_Legs
				                     on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID left join
				                    CargoiQ_SLAConfiguration
				                     on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
				                    (CargoiQ_SLAConfiguration.FlowType = 'I' OR CargoiQ_SLAConfiguration.FlowType is null) and
				                    CargoiQ_SLAConfiguration.CiqMessageTypeId = 'NFD' and
				                    (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
				                    (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)      
				              where
				                      Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport}
				                    and
				                      Shipment_StatusUpdateEvent.EventType = 'NFD' and Shipment_StatusUpdateEvent.CreatedUserCode != 'HTTP'
				              )MessageEventInfo
				                      on Shipment_Master.ShipmentNumber = MessageEventInfo.ShipmentNumber and
				                         Shipment_Master.ShipmentDate = MessageEventInfo.ShipmentDate  and 
				                                            MessageEventInfo.IncomingFlightId= ShipmentVerificationInfo.Flight_Id 
				                      left join
				       (select
				                      distinct Shipment_MasterSHC.ShipmentId,
				                      1 eAWBIndicator
				              from
				                      Shipment_Master inner join
				                      Shipment_MasterSHC
				                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
				                      Mst_AssociateSHCByHandlingGroup
				                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
				                      Mst_SHCHandlingGroup
				                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
				              where
				                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
				                      exists(
				                             select
				                                    1
				                            from
				                                    Shipment_FreightWayBill
				                             where
				                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
				                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
				                      )
				              )EAWShipmentInfo
				                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
				       (select
				                      distinct Shipment_MasterSHC.ShipmentId,
				                      1 RACIndicator
				              from
				                      Shipment_Master inner join
				                      Shipment_MasterSHC
				                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
				                      Mst_AssociateSHCByHandlingGroup
				                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
				                      Mst_SHCHandlingGroup
				                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
				              where
				                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
				              )RACShipmentInfo
				                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId             
				where 
				       Shipment_Master.Destination in ( #{tenantAirport} , #{tenantCity} ) and
				       Shipment_Master.ShipmentType in ('AWB') and
				       ShipmentVerificationInfo.carriercode in  (select distinct airline from CargoiQ_SLAConfiguration where CiqMessageTypeId = 'NFD') and 
				       Shipment_Master.CancelledOn is null and
				       cast(ShipmentVerificationInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
				          and MessageEventInfo.Message is null
			 ) data
	
	</select>
	
	<select id="sqlIsReportDataExistsRCF" 	parameterType="com.ngen.cosys.ciq.report.model.NotificationSchedule" resultType="java.lang.Boolean">
		select case when count (1) > 0 then 1 else 0 end dataExists from (
			SELECT distinct
		       'RCF' FSUMessageType, 
		       ShipmentVerificationInfo.carriercode Carrier,
		          ShipmentVerificationInfo.flight_id,
		       Shipment_Master.shipmentNumber AwbNumber,
		       Shipment_Master.shipmentid, 
		       Shipment_Master.pieces TotalPcs, 
		       Shipment_Master.weight TotalWgt,
		       MessageEventInfo.Pieces MessagePieces,
		       MessageEventInfo.Weight MessageWeight,
		       isnull(MessageEventInfo.FlightKey,ShipmentVerificationInfo.FlightKey) FlightNumber, 
		       isnull(MessageEventInfo.FlightType, ShipmentVerificationInfo.FlightType)FlightType,    
		       upper(format(isnull(MessageEventInfo.DateATA,ShipmentVerificationInfo.DateATA),'dd-MMM-yyyy')) FlightDate, 
		       Shipment_Master.Origin,
		       Shipment_Master.Destination,
		       #{tenantAirport} Airport,
		       Shipment_Master.PartShipment,
		          isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
		       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,
		       upper(format(isnull(MessageEventInfo.DateSTA,ShipmentVerificationInfo.DateSTA),'dd-MMM-yyyy HH:mm')) STA, 
		       upper(format(isnull(MessageEventInfo.DateATA,ShipmentVerificationInfo.DateATA),'dd-MMM-yyyy HH:mm')) ATA, 
		          upper(format(convert(datetime, CONVERT(datetimeoffset, (select a.EventCompletedOn from
		          (SELECT Shipment_StatusUpdateEvent.EventCompletedOn,
		         ROW_NUMBER() OVER (PARTITION BY shipmentId ORDER BY CreatedDateTime DESC) AS rn
		              FROM Shipment_StatusUpdateEvent where shipmentId=Shipment_Master.shipmentId and Shipment_StatusUpdateEvent.eventType='RCF'
		              and Shipment_StatusUpdateEvent.EventCompletedOn is not null) a where a.rn=1))  
		               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm:ss'))ActualEventTime,
		          MessageEventInfo.SLATime,
		          (DATEDIFF(minute,isnull(MessageEventInfo.DateATA, MessageEventInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, (select a.EventCompletedOn from
		          (SELECT Shipment_StatusUpdateEvent.EventCompletedOn,
		         ROW_NUMBER() OVER (PARTITION BY shipmentId ORDER BY CreatedDateTime DESC) AS rn
		              FROM Shipment_StatusUpdateEvent where shipmentId=Shipment_Master.shipmentId and Shipment_StatusUpdateEvent.eventType='RCF'
		              and Shipment_StatusUpdateEvent.EventCompletedOn is not null) a where a.rn=1) )  
		               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))-isnull(MessageEventInfo.SLATime,0))SLA_Difference_Minute,
		          MessageEventInfo.Message,
		       'LATE' SLAStatus 
		from
		       Shipment_Master inner join
		           (
		         select distinct
		               Imp_ShipmentVerification.ShipmentId,
		               Flt_OperativeFlight.CarrierCode,
		                         Flt_OperativeFlight.Flight_Id,
		                         Flt_OperativeFlight.FlightKey,
		                         Flt_OperativeFlight.FlightType,
		               Flt_OperativeFlight_Legs.DateATA,
		                         Flt_OperativeFlight_legs.DateSTA
		              from
		               Imp_ShipmentVerification inner join  Flt_OperativeFlight
		               on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID and 
		               Imp_ShipmentVerification.breakdownpieces is not null and Imp_ShipmentVerification.breakdownpieces >0
		                         inner join flt_operativeflight_legs on flt_operativeflight_legs.flight_id=Flt_OperativeFlight.flight_id and 
		                         flt_operativeflight_legs.flightOffPoint= #{tenantAirport}
		              )ShipmentVerificationInfo on Shipment_Master.ShipmentId = ShipmentVerificationInfo.ShipmentId left join
		              (
		              select
		                Shipment_StatusUpdateEvent.ShipmentNumber,
		                Shipment_StatusUpdateEvent.ShipmentDate,
		                          Shipment_StatusUpdateEvent.IncomingFlightId,
		                Flt_OperativeFlight.CarrierCode,
		                Flt_OperativeFlight.FlightNumber,
		                Flt_OperativeFlight.FlightKey,
		                Flt_OperativeFlight.FlightType,
		                Flt_OperativeFlight_Legs.DateSTA,
		                Flt_OperativeFlight_Legs.DateATA,
		                Shipment_StatusUpdateEvent.Pieces,
		                             Shipment_StatusUpdateEvent.Weight,               
		                CargoiQ_SLAConfiguration.SLATime,
		                (select
		                    TOP 1 Interface_OutgoingMessageLog.Message
		                    from
		                    Interface_OutgoingMessageLog 
		                    where
		                    Interface_OutgoingMessageLog.ShipmentNumber = Shipment_StatusUpdateEvent.ShipmentNumber and
		                    Interface_OutgoingMessageLog.ShipmentDate = Shipment_StatusUpdateEvent.ShipmentDate  and
		                             Interface_OutgoingMessageLog.CarrierCode=Flt_OperativeFlight.CarrierCode and 
		                             Interface_OutgoingMessageLog.FlightNumber=Flt_OperativeFlight.FlightNumber and 
		                             Interface_OutgoingMessageLog.FlightOriginDate=Flt_OperativeFlight.FlightOriginDate and
		                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
		                                    Interface_OutgoingMessageLog.SubMessageType = 'RCF' and 
		                    Interface_OutgoingMessageLog.Status != 'ERROR'  and  
		                    Interface_OutgoingMessageLog.Message is not null
		                ) Message
		                from
		                    Shipment_StatusUpdateEvent inner join
		                    Flt_OperativeFlight
		                     on Shipment_StatusUpdateEvent.IncomingFlightId = Flt_OperativeFlight.Flight_ID inner join
		                    Flt_OperativeFlight_Legs
		                     on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID left join
		                    CargoiQ_SLAConfiguration
		                     on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
		                    (CargoiQ_SLAConfiguration.FlowType = 'I' OR CargoiQ_SLAConfiguration.FlowType is null) and
		                    CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCF' and
		                    (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
		                    (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)      
		              where
		                      Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport}
		                    and
		                      Shipment_StatusUpdateEvent.EventType = 'RCF'
		              )MessageEventInfo
		                      on Shipment_Master.ShipmentNumber = MessageEventInfo.ShipmentNumber and
		                         Shipment_Master.ShipmentDate = MessageEventInfo.ShipmentDate  and 
		                                            MessageEventInfo.IncomingFlightId= ShipmentVerificationInfo.Flight_Id 
		                      left join
		       (select
		                      distinct Shipment_MasterSHC.ShipmentId,
		                      1 eAWBIndicator
		              from
		                      Shipment_Master inner join
		                      Shipment_MasterSHC
		                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
		                      Mst_AssociateSHCByHandlingGroup
		                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
		                      Mst_SHCHandlingGroup
		                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
		              where
		                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
		                      exists(
		                             select
		                                    1
		                            from
		                                    Shipment_FreightWayBill
		                             where
		                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
		                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
		                      )
		              )EAWShipmentInfo
		                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
		       (select
		                      distinct Shipment_MasterSHC.ShipmentId,
		                      1 RACIndicator
		              from
		                      Shipment_Master inner join
		                      Shipment_MasterSHC
		                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
		                      Mst_AssociateSHCByHandlingGroup
		                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
		                      Mst_SHCHandlingGroup
		                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
		              where
		                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
		              )RACShipmentInfo
		                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId             
		where 
		       Shipment_Master.Destination in ( #{tenantAirport} , #{tenantCity} ) and
		       Shipment_Master.ShipmentType in ('AWB') and
		       ShipmentVerificationInfo.carriercode in  ('SQ') and 
		       Shipment_Master.CancelledOn is null and
		       cast(ShipmentVerificationInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
		          and convert(datetime, CONVERT(datetimeoffset, (select a.EventCompletedOn from
		          (SELECT Shipment_StatusUpdateEvent.EventCompletedOn,
		         ROW_NUMBER() OVER (PARTITION BY shipmentId ORDER BY CreatedDateTime DESC) AS rn
		              FROM Shipment_StatusUpdateEvent where shipmentId=Shipment_Master.shipmentId and Shipment_StatusUpdateEvent.eventType='RCF'
		              and Shipment_StatusUpdateEvent.EventCompletedOn is not null) a where a.rn=1))  
		               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')) 
		        > dateadd(minute, MessageEventInfo.SLATime, isnull(MessageEventInfo.DateATA, MessageEventInfo.DateSTA))
		              and MessageEventInfo.Message is not null
		UNION
		SELECT distinct
		       'RCF' FSUMessageType, 
		       ShipmentVerificationInfo.carriercode Carrier,
		          ShipmentVerificationInfo.flight_id,
		       Shipment_Master.shipmentNumber AwbNumber,
		       Shipment_Master.shipmentid, 
		       Shipment_Master.pieces TotalPcs, 
		       Shipment_Master.weight TotalWgt,
		       MessageEventInfo.Pieces MessagePieces,
		       MessageEventInfo.Weight MessageWeight,
		       isnull(MessageEventInfo.FlightKey,ShipmentVerificationInfo.FlightKey) FlightNumber, 
		       isnull(MessageEventInfo.FlightType, ShipmentVerificationInfo.FlightType)FlightType,    
		       upper(format(isnull(MessageEventInfo.DateATA,ShipmentVerificationInfo.DateATA),'dd-MMM-yyyy')) FlightDate, 
		       Shipment_Master.Origin,
		       Shipment_Master.Destination,
		       #{tenantAirport} Airport,
		       Shipment_Master.PartShipment,
		          isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
		       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,
		       upper(format(isnull(MessageEventInfo.DateSTA,ShipmentVerificationInfo.DateSTA),'dd-MMM-yyyy HH:mm')) STA, 
		       upper(format(isnull(MessageEventInfo.DateATA,ShipmentVerificationInfo.DateATA),'dd-MMM-yyyy HH:mm')) ATA, 
		          upper(format(convert(datetime, CONVERT(datetimeoffset, (select a.EventCompletedOn from
		          (SELECT Shipment_StatusUpdateEvent.EventCompletedOn,
		         ROW_NUMBER() OVER (PARTITION BY shipmentId ORDER BY CreatedDateTime DESC) AS rn
		              FROM Shipment_StatusUpdateEvent where shipmentId=Shipment_Master.shipmentId and Shipment_StatusUpdateEvent.eventType='RCF'
		              and Shipment_StatusUpdateEvent.EventCompletedOn is not null) a where a.rn=1))  
		               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm:ss'))ActualEventTime,
		          MessageEventInfo.SLATime,
		          (DATEDIFF(minute,isnull(MessageEventInfo.DateATA, MessageEventInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset, (select a.EventCompletedOn from
		          (SELECT Shipment_StatusUpdateEvent.EventCompletedOn,
		         ROW_NUMBER() OVER (PARTITION BY shipmentId ORDER BY CreatedDateTime DESC) AS rn
		              FROM Shipment_StatusUpdateEvent where shipmentId=Shipment_Master.shipmentId and Shipment_StatusUpdateEvent.eventType='RCF'
		              and Shipment_StatusUpdateEvent.EventCompletedOn is not null) a where a.rn=1) )  
		               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))-isnull(MessageEventInfo.SLATime,0))SLA_Difference_Minute,
		          MessageEventInfo.Message,
		       case   
		          when MessageEventInfo.Message is null
		       then 
		          'MISSING' else 'I'
		               
		          end SLAStatus 
		from
		       Shipment_Master inner join
		           (
		         select distinct
		               Imp_ShipmentVerification.ShipmentId,
		               Flt_OperativeFlight.CarrierCode,
		                         Flt_OperativeFlight.Flight_Id,
		                         Flt_OperativeFlight.FlightKey,
		                         Flt_OperativeFlight.FlightType,
		               Flt_OperativeFlight_Legs.DateATA,
		                         Flt_OperativeFlight_legs.DateSTA
		              from
		               Imp_ShipmentVerification inner join  Flt_OperativeFlight
		               on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID and 
		               Imp_ShipmentVerification.breakdownpieces is not null and Imp_ShipmentVerification.breakdownpieces >0
		                         inner join flt_operativeflight_legs on flt_operativeflight_legs.flight_id=Flt_OperativeFlight.flight_id and 
		                         flt_operativeflight_legs.flightOffPoint= #{tenantAirport}
		              )ShipmentVerificationInfo on Shipment_Master.ShipmentId = ShipmentVerificationInfo.ShipmentId left join
		              (
		              select
		                Shipment_StatusUpdateEvent.ShipmentNumber,
		                Shipment_StatusUpdateEvent.ShipmentDate,
		                          Shipment_StatusUpdateEvent.IncomingFlightId,
		                Flt_OperativeFlight.CarrierCode,
		                Flt_OperativeFlight.FlightNumber,
		                Flt_OperativeFlight.FlightKey,
		                Flt_OperativeFlight.FlightType,
		                Flt_OperativeFlight_Legs.DateSTA,
		                Flt_OperativeFlight_Legs.DateATA,
		                Shipment_StatusUpdateEvent.Pieces,
		                             Shipment_StatusUpdateEvent.Weight,               
		                CargoiQ_SLAConfiguration.SLATime,
		                (select
		                    TOP 1 Interface_OutgoingMessageLog.Message
		                    from
		                    Interface_OutgoingMessageLog 
		                    where
		                    Interface_OutgoingMessageLog.ShipmentNumber = Shipment_StatusUpdateEvent.ShipmentNumber and
		                    Interface_OutgoingMessageLog.ShipmentDate = Shipment_StatusUpdateEvent.ShipmentDate  and
		                             Interface_OutgoingMessageLog.CarrierCode=Flt_OperativeFlight.CarrierCode and 
		                             Interface_OutgoingMessageLog.FlightNumber=Flt_OperativeFlight.FlightNumber and 
		                             Interface_OutgoingMessageLog.FlightOriginDate=Flt_OperativeFlight.FlightOriginDate and
		                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
		                                    Interface_OutgoingMessageLog.SubMessageType = 'RCF' and 
		                    Interface_OutgoingMessageLog.Status != 'ERROR'  and  
		                    Interface_OutgoingMessageLog.Message is not null
		                ) Message
		                from
		                    Shipment_StatusUpdateEvent inner join
		                    Flt_OperativeFlight
		                     on Shipment_StatusUpdateEvent.IncomingFlightId = Flt_OperativeFlight.Flight_ID inner join
		                    Flt_OperativeFlight_Legs
		                     on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID left join
		                    CargoiQ_SLAConfiguration
		                     on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
		                    (CargoiQ_SLAConfiguration.FlowType = 'I' OR CargoiQ_SLAConfiguration.FlowType is null) and
		                    CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCF' and
		                    (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
		                    (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)      
		              where
		                      Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport}
		                    and
		                      Shipment_StatusUpdateEvent.EventType = 'RCF' and Shipment_StatusUpdateEvent.CreatedUserCode != 'HTTP'
		              )MessageEventInfo
		                      on Shipment_Master.ShipmentNumber = MessageEventInfo.ShipmentNumber and
		                         Shipment_Master.ShipmentDate = MessageEventInfo.ShipmentDate  and 
		                                            MessageEventInfo.IncomingFlightId= ShipmentVerificationInfo.Flight_Id 
		                      left join
		       (select
		                      distinct Shipment_MasterSHC.ShipmentId,
		                      1 eAWBIndicator
		              from
		                      Shipment_Master inner join
		                      Shipment_MasterSHC
		                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
		                      Mst_AssociateSHCByHandlingGroup
		                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
		                      Mst_SHCHandlingGroup
		                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
		              where
		                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
		                      exists(
		                             select
		                                    1
		                            from
		                                    Shipment_FreightWayBill
		                             where
		                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
		                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
		                      )
		              )EAWShipmentInfo
		                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
		       (select
		                      distinct Shipment_MasterSHC.ShipmentId,
		                      1 RACIndicator
		              from
		                      Shipment_Master inner join
		                      Shipment_MasterSHC
		                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
		                      Mst_AssociateSHCByHandlingGroup
		                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
		                      Mst_SHCHandlingGroup
		                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
		              where
		                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
		              )RACShipmentInfo
		                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId             
		where 
		       Shipment_Master.Destination in ( #{tenantAirport} , #{tenantCity} ) and
		       Shipment_Master.ShipmentType in ('AWB') and
		       ShipmentVerificationInfo.carriercode in  (select distinct airline from CargoiQ_SLAConfiguration where CiqMessageTypeId = 'RCF') and 
		       Shipment_Master.CancelledOn is null and
		       cast(ShipmentVerificationInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
		          and MessageEventInfo.Message is null
		
		) data
	</select>
	
	<select id="sqlIsReportDataExistsAWD" 	parameterType="com.ngen.cosys.ciq.report.model.NotificationSchedule" resultType="java.lang.Boolean">
		select case when count (1) > 0 then 1 else 0 end dataExists from (
			SELECT distinct
		       'AWD' FSUMessageType, ShipmentVerificationInfo.carriercode Carrier, ShipmentVerificationInfo.flightId, 
			   Shipment_Master.shipmentNumber AwbNumber, Shipment_Master.shipmentid,  Shipment_Master.pieces TotalPcs,  
			   Shipment_Master.weight TotalWgt, MessageEventInfo.Pieces MessagePieces, MessageEventInfo.Weight MessageWeight,
		       ShipmentVerificationInfo.FlightKey FlightNumber,
		       case when ShipmentVerificationInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,  
		       upper(format(ShipmentVerificationInfo.DateSTA,'dd-MMM-yyyy')) FlightDate, 
		       Shipment_Master.Origin, Shipment_Master.Destination, #{tenantAirport} Airport, Shipment_Master.PartShipment, 
		       upper(format(ShipmentVerificationInfo.DateSTA,'dd-MMM-yyyy HH:mm')) STA, 
		       upper(format(ShipmentVerificationInfo.DateATA,'dd-MMM-yyyy HH:mm')) ATA,  
		       isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
		       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,
		
			   UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageEventInfo.EventCompletedOn)  
			   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))ActualEventTime,
		
			   ShipmentVerificationInfo.SLATime,
		
			   (DATEDIFF(minute,isnull(ShipmentVerificationInfo.DateATA, ShipmentVerificationInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset,MessageEventInfo.EventCompletedOn)  
		               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))SLA_Difference_Minute,
		
		       MessageLog.Message,
		      
			  'LATE' SLAStatus
		from
       		Shipment_Master inner join
        (
        select distinct
		        Imp_ShipmentVerification.ShipmentId,
				Imp_ShipmentVerification.ReleasedOn,
				Flt_OperativeFlight.Flight_ID flightId,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
		        Flt_OperativeFlight.FlightKey,
		        Flt_OperativeFlight.FlightType,
		        Flt_OperativeFlight_Legs.DateSTA,
		        Flt_OperativeFlight_Legs.DateATA,               
		        CargoiQ_SLAConfiguration.SLATime,
		ISNULL(ISNULL( 
					   (select top 1 Name channel 
						from Interface_IncomingOutgoingMessageDefinition a 
						inner join
						Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='AWD' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and FlightKey=Flt_OperativeFlight.FlightKey
						 order by name asc), 
						 (select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='AWD' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
						 order by name asc)),
					ISNULL((select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='AWD' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 order by name asc),
						(select top 1 Name channel 
						 from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='AWD' and CarrierCode='DEFAULT'
						 order by name asc))) as Channel
        FROM
        Imp_ShipmentVerification 
		INNER JOIN Flt_OperativeFlight
          on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID 
		  and Imp_ShipmentVerification.breakdownpieces is not null 
		INNER JOIN 
		  Flt_operativeflight_legs on Flt_operativeflight_legs.flight_id=Flt_OperativeFlight.flight_id
			and Flt_operativeflight_legs.flightOffPoint= #{tenantAirport}
		 LEFT JOIN
         CargoiQ_SLAConfiguration
                on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
        (CargoiQ_SLAConfiguration.FlowType = 'I' OR CargoiQ_SLAConfiguration.FlowType is null) and
        CargoiQ_SLAConfiguration.CiqMessageTypeId = 'AWD' and
        (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
        (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)  
		where   
			Flt_operativeflight_legs.flightOffPoint= #{tenantAirport}
       )ShipmentVerificationInfo on Shipment_Master.ShipmentId = ShipmentVerificationInfo.ShipmentId  
	LEFT JOIN
	  (select
	        Shipment_StatusUpdateEvent.ShipmentNumber,
	        Shipment_StatusUpdateEvent.ShipmentDate,
			Shipment_StatusUpdateEvent.ShipmentId,
			Shipment_StatusUpdateEvent.IncomingFlightId,
			Shipment_StatusUpdateEvent.Pieces,
			Shipment_StatusUpdateEvent.Weight,  
			Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
			Shipment_StatusUpdateEvent.CreatedUserCode,
			convert(datetime,format(Shipment_StatusUpdateEvent.EventCompletedOn,'dd-MMM-yyyy HH:mm'))EventCompletedOn     
	      FROM
	         Shipment_StatusUpdateEvent   
	      where
	         Shipment_StatusUpdateEvent.EventType = 'AWD' and Shipment_StatusUpdateEvent.CreatedUserCode != 'HTTP'
	    )MessageEventInfo
	          on Shipment_Master.ShipmentId = MessageEventInfo.ShipmentId and MessageEventInfo.IncomingFlightId=ShipmentVerificationInfo.flightId
			  and MessageEventInfo.CreatedUserCode=ShipmentVerificationInfo.Channel
	LEFT JOIN
		(select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
		        from
		        Interface_OutgoingMessageLog 
		        where
		        Interface_OutgoingMessageLog.MessageType = 'FSU' and
				Interface_OutgoingMessageLog.SubMessageType = 'AWD' and 
		        Interface_OutgoingMessageLog.Status!='ERROR'  and  
		        Interface_OutgoingMessageLog.Message is not null
		 ) MessageLog On MessageEventInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId
	LEFT JOIN			 
       (select
				distinct Shipment_MasterSHC.ShipmentId,
				1 eAWBIndicator
              from
				Shipment_Master inner join
				Shipment_MasterSHC
						on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
				Mst_AssociateSHCByHandlingGroup
						on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
				Mst_SHCHandlingGroup
						on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
                exists(
                    select
                        1
                    from
                        Shipment_FreightWayBill
                    where
                        Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
                        Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
                      )
              )EAWShipmentInfo
                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
			 (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 RACIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
              )RACShipmentInfo
                     on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId   
			  
		where 
		       Shipment_Master.Destination in ( #{tenantAirport} , #{tenantCity} ) and
		       ShipmentVerificationInfo.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration where CiqMessageTypeId = 'AWD')  and
		       Shipment_Master.ShipmentType in ('AWB') and
		       Shipment_Master.CancelledOn is null and
		       cast(ShipmentVerificationInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
			   and  (DATEDIFF(minute,isnull(ShipmentVerificationInfo.DateATA, ShipmentVerificationInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset,MessageEventInfo.EventCompletedOn)  
		            AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
				 >  ShipmentVerificationInfo.SLATime
	UNION
		SELECT distinct
		       'AWD' FSUMessageType, ShipmentVerificationInfo.carriercode Carrier, ShipmentVerificationInfo.flightId, 
				Shipment_Master.shipmentNumber AwbNumber, Shipment_Master.shipmentid,  Shipment_Master.pieces TotalPcs,  
				Shipment_Master.weight TotalWgt, MessageEventInfo.Pieces MessagePieces, MessageEventInfo.Weight MessageWeight,
		       ShipmentVerificationInfo.FlightKey FlightNumber,
		       case when ShipmentVerificationInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,  
		       upper(format(ShipmentVerificationInfo.DateSTA,'dd-MMM-yyyy')) FlightDate, 
		       Shipment_Master.Origin, Shipment_Master.Destination, #{tenantAirport} Airport, Shipment_Master.PartShipment, 
		       upper(format(ShipmentVerificationInfo.DateSTA,'dd-MMM-yyyy HH:mm')) STA, 
		       upper(format(ShipmentVerificationInfo.DateATA,'dd-MMM-yyyy HH:mm')) ATA,  
		       isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
		       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,
		
			   	UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageEventInfo.EventCompletedOn)  
			   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))ActualEventTime,
		
			   ShipmentVerificationInfo.SLATime,
		
				(DATEDIFF(minute,isnull(ShipmentVerificationInfo.DateATA, ShipmentVerificationInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset,MessageEventInfo.EventCompletedOn)  
		               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))SLA_Difference_Minute,
		
		       MessageLog.Message,
		           'MISSING' SLAStatus
	from
       Shipment_Master inner join
        (
        select distinct
		        Imp_ShipmentVerification.ShipmentId,
				Imp_ShipmentVerification.ReleasedOn,
				Flt_OperativeFlight.Flight_ID flightId,
				Flt_OperativeFlight.CarrierCode,
				Flt_OperativeFlight.FlightNumber,
		        Flt_OperativeFlight.FlightKey,
		        Flt_OperativeFlight.FlightType,
		        Flt_OperativeFlight_Legs.DateSTA,
		        Flt_OperativeFlight_Legs.DateATA,               
		        CargoiQ_SLAConfiguration.SLATime,
		ISNULL(ISNULL( 
				(select top 1 Name channel 
				from Interface_IncomingOutgoingMessageDefinition a 
				inner join
				Interface_ExternalSystem c 
					on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
					inner join 
					Interface_AssociateCustomerWithMessageDefinition d
					on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
					inner join 
					Interface_MessageDefinitionByCustomer e 
					on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
					where messageType='FSU' and SubMessageType='AWD' and CarrierCode=Flt_OperativeFlight.CarrierCode
					and FlightKey=Flt_OperativeFlight.FlightKey
					order by name asc), 
					(select top 1 Name channel 
					from Interface_IncomingOutgoingMessageDefinition a 
					inner join
					Interface_ExternalSystem c 
					on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
					inner join 
					Interface_AssociateCustomerWithMessageDefinition d
					on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
					inner join 
					Interface_MessageDefinitionByCustomer e 
					on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
					where messageType='FSU' and SubMessageType='AWD' and CarrierCode=Flt_OperativeFlight.CarrierCode
					and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
					order by name asc)),
			ISNULL((select top 1 Name channel 
					from Interface_IncomingOutgoingMessageDefinition a 
					inner join
					Interface_ExternalSystem c 
					on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
					inner join 
					Interface_AssociateCustomerWithMessageDefinition d
					on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
					inner join 
					Interface_MessageDefinitionByCustomer e 
					on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
					where messageType='FSU' and SubMessageType='AWD' and CarrierCode=Flt_OperativeFlight.CarrierCode
					order by name asc),
				(select top 1 Name channel 
					from Interface_IncomingOutgoingMessageDefinition a 
					inner join
					Interface_ExternalSystem c 
					on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
					inner join 
					Interface_AssociateCustomerWithMessageDefinition d
					on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
					inner join 
					Interface_MessageDefinitionByCustomer e 
					on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
					where messageType='FSU' and SubMessageType='AWD' and CarrierCode='DEFAULT'
					order by name asc))) as Channel
        FROM
        Imp_ShipmentVerification 
		INNER JOIN Flt_OperativeFlight
          on Imp_ShipmentVerification.FlightId = Flt_OperativeFlight.Flight_ID 
		  and Imp_ShipmentVerification.breakdownpieces is not null 
		INNER JOIN 
		  Flt_operativeflight_legs on Flt_operativeflight_legs.flight_id=Flt_OperativeFlight.flight_id
			and Flt_operativeflight_legs.flightOffPoint= #{tenantAirport}
		 LEFT JOIN
         CargoiQ_SLAConfiguration
                on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
        (CargoiQ_SLAConfiguration.FlowType = 'I' OR CargoiQ_SLAConfiguration.FlowType is null) and
        CargoiQ_SLAConfiguration.CiqMessageTypeId = 'AWD' and
        (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
        (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)  
		where   
			Flt_operativeflight_legs.flightOffPoint= #{tenantAirport}
       )ShipmentVerificationInfo on Shipment_Master.ShipmentId = ShipmentVerificationInfo.ShipmentId  
	LEFT JOIN
	  (select
	        Shipment_StatusUpdateEvent.ShipmentNumber,
	        Shipment_StatusUpdateEvent.ShipmentDate,
			Shipment_StatusUpdateEvent.ShipmentId,
			Shipment_StatusUpdateEvent.IncomingFlightId,
			Shipment_StatusUpdateEvent.Pieces,
			Shipment_StatusUpdateEvent.Weight,  
			Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
			Shipment_StatusUpdateEvent.CreatedUserCode,
			convert(datetime,format(Shipment_StatusUpdateEvent.EventCompletedOn,'dd-MMM-yyyy HH:mm'))EventCompletedOn     
	      FROM
	         Shipment_StatusUpdateEvent   
	      where
	         Shipment_StatusUpdateEvent.EventType = 'AWD' and Shipment_StatusUpdateEvent.CreatedUserCode != 'HTTP'
	    )MessageEventInfo
	          on Shipment_Master.ShipmentId = MessageEventInfo.ShipmentId and MessageEventInfo.IncomingFlightId=ShipmentVerificationInfo.flightId
			  and MessageEventInfo.CreatedUserCode=ShipmentVerificationInfo.Channel
	LEFT JOIN
	(select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
	        from
	        Interface_OutgoingMessageLog 
	        where
	        Interface_OutgoingMessageLog.MessageType = 'FSU' and
			Interface_OutgoingMessageLog.SubMessageType = 'AWD' and 
	        Interface_OutgoingMessageLog.Status!='ERROR'  and  
	        Interface_OutgoingMessageLog.Message is not null
	 ) MessageLog On MessageEventInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId
	LEFT JOIN			 
       (select
				distinct Shipment_MasterSHC.ShipmentId,
				1 eAWBIndicator
              from
				Shipment_Master inner join
				Shipment_MasterSHC
						on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
				Mst_AssociateSHCByHandlingGroup
						on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
				Mst_SHCHandlingGroup
						on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
                exists(
                    select
                        1
                    from
                        Shipment_FreightWayBill
                    where
                        Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
                        Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
                      )
              )EAWShipmentInfo
                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
			 (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 RACIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
              )RACShipmentInfo
                     on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId   
			  
		where 
		       Shipment_Master.Destination in ( #{tenantAirport} , #{tenantCity} ) and
		       ShipmentVerificationInfo.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration where CiqMessageTypeId = 'AWD')  and
		       Shipment_Master.ShipmentType in ('AWB') and
		       Shipment_Master.CancelledOn is null and
			   cast(ShipmentVerificationInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime) and
		       MessageLog.Message is null and ShipmentVerificationInfo.ReleasedOn is not null
		) data
	</select>
	
	<select id="sqlIsReportDataExistsDEPWithTrasistFlag1" 	parameterType="com.ngen.cosys.ciq.report.model.NotificationSchedule" resultType="java.lang.Boolean">
		select case when count (1) > 0 then 1 else 0 end dataExists from (
			SELECT distinct 
		      'DEP' FSUMessageType,
		       Exp_ManifestShipmentInfo.carriercode  Carrier,
			   Exp_ManifestShipmentInfo.incomingCarrierCode,	  
		       Shipment_Master.ShipmentNumber AwbNumber,
		       Shipment_Master.Shipmentid,
		       Shipment_Master.Pieces TotalPcs,
		       Shipment_Master.Weight TotalWgt,
		       MessageInfo.pieces MessagePieces,
		       MessageInfo.weight MessageWeight,
			   Exp_ManifestShipmentInfo.Flight_ID,
		       Exp_ManifestShipmentInfo.FlightKey  FlightNumber,
			    case when Exp_ManifestShipmentInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,
		       upper(format(Exp_ManifestShipmentInfo.DateSTD,'dd-MMM-yyyy')) FlightDate,     
		       Shipment_Master.Origin,
		       Shipment_Master.Destination,
		       #{tenantAirport} Airport,
		       Shipment_Master.PartShipment,
			   isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
		       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,   
			   upper(format(Exp_ManifestShipmentInfo.DateSTD,'dd-MMM-yyyy HH:mm')) STD,
		       upper(format(Exp_ManifestShipmentInfo.DateATD,'dd-MMM-yyyy HH:mm')) ATD,
		
			   UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
			   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))MessageSentTime,
		
			   Exp_ManifestShipmentInfo.CiQSLATime,
			   (DATEDIFF(minute,isnull(Exp_ManifestShipmentInfo.DateATD, Exp_ManifestShipmentInfo.DateSTD),
			   convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
			   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))SLA_Difference_Minute,
			   MessageLog.Message,
		       
			   'LATE'  SLAStatus,
		
				 Exp_ManifestShipmentInfo.TransferType Transifer_Transit 
		from
       		Shipment_Master 
	   	INNER JOIN
	    (
           SELECT
					 Shipment_FreightOut.flightid,
                     Shipment_FreightOut.ShipmentId,
                     Flt_OperativeFlight.CarrierCode,
					 (select CarrierCode from Flt_OperativeFlight where flight_id=Shipment_FreightOut.InboundFlightId)incomingCarrierCode,
					case when  Flt_OperativeFlight.CarrierCode=(select CarrierCode from Flt_OperativeFlight where flight_id=Shipment_FreightOut.InboundFlightId)
					then 'TRANSIT'
					when Flt_OperativeFlight.CarrierCode!=(select CarrierCode from Flt_OperativeFlight where flight_id=Shipment_FreightOut.InboundFlightId)
					then 'TRANSFER'
					else 'TRANSFER' end TransferType,
                     Flt_OperativeFlight.FlightNumber,
					 Flt_OperativeFlight.flight_id,
                     Flt_OperativeFlight.FlightKey,
                     Flt_OperativeFlight.FlightType,
                     Flt_OperativeFlight_Legs.DateSTD,
                     Flt_OperativeFlight_Legs.DateATD,
                     Exp_ManifestShipmentInfo.Piece ManifestPieces,
                     Exp_ManifestShipmentInfo.Weight ManifestWeight,
					  ISNULL(ISNULL( 
					   (select top 1 Name channel 
						from Interface_IncomingOutgoingMessageDefinition a 
						inner join
						Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and FlightKey=Flt_OperativeFlight.FlightKey
						 order by name asc), 
						 (select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
						 order by name asc)),
					ISNULL((select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 order by name asc),
						(select top 1 Name channel 
						 from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode='DEFAULT'
						 order by name asc))) as Channel,
					 (select
						TOP 1 CargoiQ_SLAConfiguration.SLATime
						from
						CargoiQ_SLAConfiguration 
						where
						CargoiQ_SLAConfiguration.Airline = Flt_OperativeFlight.CarrierCode 
						and (CargoiQ_SLAConfiguration.FlowType = 'E' OR CargoiQ_SLAConfiguration.FlowType is null) 
						and CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' 
						and (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) 
						and ((CargoiQ_SLAConfiguration.Destination is null) OR (CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightOffPoint))
					 ) CiQSLATime
              from
			          Shipment_FreightOut inner join					
                      Flt_OperativeFlight
                             on Shipment_FreightOut.FlightId = Flt_OperativeFlight.Flight_Id inner join
                      Flt_OperativeFlight_Legs
                             on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id 
					  left join  
					  Exp_Manifest ON Exp_Manifest.FlightId=Flt_OperativeFlight.Flight_Id
					  left join
				      Exp_ManifestShipmentInfo
                              on Exp_ManifestShipmentInfo.ManifestId=Exp_Manifest.ManifestId and 
					 			Exp_ManifestShipmentInfo.ShipmentId=Shipment_FreightOut.ShipmentId
					WHERE
					   Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport}
					
		   )Exp_ManifestShipmentInfo
              on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId left join
           (select
			  convert(datetime,format(Shipment_StatusUpdateEvent.EventCompletedOn,'dd-MMM-yyyy HH:mm'))EventCompletedOn,
              Flt_OperativeFlight.flightkey,
			  Flt_OperativeFlight.CarrierCode,
              Flt_OperativeFlight_Legs.DateATD,
              Flt_OperativeFlight_Legs.DateSTD,
			  Shipment_StatusUpdateEvent.Outgoingflightid,
              Shipment_StatusUpdateEvent.ShipmentNumber,
              Shipment_StatusUpdateEvent.ShipmentId,
              Shipment_StatusUpdateEvent.pieces,
              Shipment_StatusUpdateEvent.weight,
			  Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
			  Shipment_StatusUpdateEvent.CreatedUserCode
               from
                Shipment_StatusUpdateEvent
				 inner join 
                    Flt_OperativeFlight
                on Flt_OperativeFlight.Flight_Id  = Shipment_StatusUpdateEvent.Outgoingflightid
                inner join Flt_OperativeFlight_Legs
                on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id 
              where
                Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} and 
               Shipment_StatusUpdateEvent.EventType = 'DEP' and Shipment_StatusUpdateEvent.IsOutgoing=1
		)MessageInfo
                on  MessageInfo.Shipmentid =Shipment_Master.Shipmentid and 
					MessageInfo.Outgoingflightid=Exp_ManifestShipmentInfo.flightid and
					MessageInfo.CreatedUserCode=Exp_ManifestShipmentInfo.Channel
		LEFT JOIN
		 (select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
		                    from
		                    Interface_OutgoingMessageLog 
		                    where
		                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
							Interface_OutgoingMessageLog.SubMessageType = 'DEP' and 
		                    Interface_OutgoingMessageLog.Status!='ERROR'  and  
		                    Interface_OutgoingMessageLog.Message is not null
		) MessageLog On MessageInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId 
		  LEFT JOIN
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 eAWBIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
                      exists(
                             select
                                    1
                             from
                                    Shipment_FreightWayBill
                             where
                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
                      )
              )EAWShipmentInfo
                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 RACIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
              )RACShipmentInfo
                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId 
		where
		       Shipment_Master.Origin not in ( #{tenantAirport} , #{tenantCity} ) and
			   Shipment_Master.Destination not in ( #{tenantAirport} , #{tenantCity} )  and
		       Exp_ManifestShipmentInfo.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration where CiqMessageTypeId = 'DEP')  and
		       Shipment_Master.ShipmentType in ('AWB') and 
		       Shipment_Master.CancelledOn is null and 
			   cast(Exp_ManifestShipmentInfo.DateSTD as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
			   and  (DATEDIFF(minute,isnull(Exp_ManifestShipmentInfo.DateATD, Exp_ManifestShipmentInfo.DateSTD),
				 convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
					AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
		        > Exp_ManifestShipmentInfo.CiQSLATime
	UNION
		SELECT distinct 
		      'DEP' FSUMessageType,
		       Exp_ManifestShipmentInfo.carriercode  Carrier,
			   Exp_ManifestShipmentInfo.incomingCarrierCode,	  
		       Shipment_Master.ShipmentNumber AwbNumber,
		       Shipment_Master.Shipmentid,
		       Shipment_Master.Pieces TotalPcs,
		       Shipment_Master.Weight TotalWgt,
		       MessageInfo.pieces MessagePieces,
		       MessageInfo.weight MessageWeight,
			   Exp_ManifestShipmentInfo.Flight_ID,
		       Exp_ManifestShipmentInfo.FlightKey  FlightNumber,
			    case when Exp_ManifestShipmentInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,
		       upper(format(Exp_ManifestShipmentInfo.DateSTD,'dd-MMM-yyyy')) FlightDate,     
		       Shipment_Master.Origin,
		       Shipment_Master.Destination,
		       #{tenantAirport} Airport,
		       Shipment_Master.PartShipment,
			   isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
		       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,   
			   upper(format(Exp_ManifestShipmentInfo.DateSTD,'dd-MMM-yyyy HH:mm')) STD,
		       upper(format(Exp_ManifestShipmentInfo.DateATD,'dd-MMM-yyyy HH:mm')) ATD,
		
			   UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
			   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))MessageSentTime,
		
			   Exp_ManifestShipmentInfo.CiQSLATime,
			   (DATEDIFF(minute,isnull(Exp_ManifestShipmentInfo.DateATD, Exp_ManifestShipmentInfo.DateSTD),
			   convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
			   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))SLA_Difference_Minute,
		
			   MessageLog.Message,
		      
			   'MISSING' SLAStatus,
		
				 Exp_ManifestShipmentInfo.TransferType Transifer_Transit 
		from
		       Shipment_Master 
	   		INNER JOIN
	    (
           SELECT
					 Shipment_FreightOut.flightid,
                     Shipment_FreightOut.ShipmentId,
                     Flt_OperativeFlight.CarrierCode,
					 (select CarrierCode from Flt_OperativeFlight where flight_id=Shipment_FreightOut.InboundFlightId)incomingCarrierCode,
					case when  Flt_OperativeFlight.CarrierCode=(select CarrierCode from Flt_OperativeFlight where flight_id=Shipment_FreightOut.InboundFlightId)
					then 'TRANSIT'
					when Flt_OperativeFlight.CarrierCode!=(select CarrierCode from Flt_OperativeFlight where flight_id=Shipment_FreightOut.InboundFlightId)
					then 'TRANSFER'
					else 'TRANSFER' end TransferType,
                     Flt_OperativeFlight.FlightNumber,
					 Flt_OperativeFlight.flight_id,
                     Flt_OperativeFlight.FlightKey,
                     Flt_OperativeFlight.FlightType,
                     Flt_OperativeFlight_Legs.DateSTD,
                     Flt_OperativeFlight_Legs.DateATD,
                     Exp_ManifestShipmentInfo.Piece ManifestPieces,
                     Exp_ManifestShipmentInfo.Weight ManifestWeight,
					  ISNULL(ISNULL( 
					   (select top 1 Name channel 
						from Interface_IncomingOutgoingMessageDefinition a 
						inner join
						Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and FlightKey=Flt_OperativeFlight.FlightKey
						 order by name asc), 
						 (select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
						 order by name asc)),
					ISNULL((select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 order by name asc),
						(select top 1 Name channel 
						 from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode='DEFAULT'
						 order by name asc))) as Channel,
					 (select
						TOP 1 CargoiQ_SLAConfiguration.SLATime
						from
						CargoiQ_SLAConfiguration 
						where
						CargoiQ_SLAConfiguration.Airline = Flt_OperativeFlight.CarrierCode 
						and (CargoiQ_SLAConfiguration.FlowType = 'E' OR CargoiQ_SLAConfiguration.FlowType is null) 
						and CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' 
						and (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) 
						and ((CargoiQ_SLAConfiguration.Destination is null) OR (CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightOffPoint))
					 ) CiQSLATime
              from
			          Shipment_FreightOut inner join					
                      Flt_OperativeFlight
                             on Shipment_FreightOut.FlightId = Flt_OperativeFlight.Flight_Id inner join
                      Flt_OperativeFlight_Legs
                             on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id 
					  left join  
					  Exp_Manifest ON Exp_Manifest.FlightId=Flt_OperativeFlight.Flight_Id
					  left join
				      Exp_ManifestShipmentInfo
                              on Exp_ManifestShipmentInfo.ManifestId=Exp_Manifest.ManifestId and 
					 			Exp_ManifestShipmentInfo.ShipmentId=Shipment_FreightOut.ShipmentId
					WHERE
					   Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport}
					
		   )Exp_ManifestShipmentInfo
              on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId left join
           (select
			  convert(datetime,format(Shipment_StatusUpdateEvent.EventCompletedOn,'dd-MMM-yyyy HH:mm'))EventCompletedOn,
              Flt_OperativeFlight.flightkey,
			  Flt_OperativeFlight.CarrierCode,
              Flt_OperativeFlight_Legs.DateATD,
              Flt_OperativeFlight_Legs.DateSTD,
			  Shipment_StatusUpdateEvent.Outgoingflightid,
              Shipment_StatusUpdateEvent.ShipmentNumber,
              Shipment_StatusUpdateEvent.ShipmentId,
              Shipment_StatusUpdateEvent.pieces,
              Shipment_StatusUpdateEvent.weight,
			  Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
			  Shipment_StatusUpdateEvent.CreatedUserCode
               from
                Shipment_StatusUpdateEvent
				 inner join 
                    Flt_OperativeFlight
                on Flt_OperativeFlight.Flight_Id  = Shipment_StatusUpdateEvent.Outgoingflightid
                inner join Flt_OperativeFlight_Legs
                on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id 
              where
                Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} and 
               Shipment_StatusUpdateEvent.EventType = 'DEP' and Shipment_StatusUpdateEvent.IsOutgoing=1
		)MessageInfo
                on  MessageInfo.Shipmentid =Shipment_Master.Shipmentid and 
					MessageInfo.Outgoingflightid=Exp_ManifestShipmentInfo.flightid and
					MessageInfo.CreatedUserCode=Exp_ManifestShipmentInfo.Channel
		LEFT JOIN
		 (select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
		                    from
		                    Interface_OutgoingMessageLog 
		                    where
		                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
							Interface_OutgoingMessageLog.SubMessageType = 'DEP' and 
		                    Interface_OutgoingMessageLog.Status!='ERROR'  and  
		                    Interface_OutgoingMessageLog.Message is not null
		) MessageLog On MessageInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId 
		  LEFT JOIN
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 eAWBIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
                      exists(
                             select
                                    1
                             from
                                    Shipment_FreightWayBill
                             where
                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
                      )
              )EAWShipmentInfo
                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 RACIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
              )RACShipmentInfo
                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId 
		where
		       Shipment_Master.Origin not in ( #{tenantAirport} , #{tenantCity} ) and
			   Shipment_Master.Destination not in ( #{tenantAirport} , #{tenantCity} ) and
		       Exp_ManifestShipmentInfo.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration where CiqMessageTypeId = 'DEP')  and
		       Shipment_Master.ShipmentType in ('AWB') and 
		       Shipment_Master.CancelledOn is null and 
			   cast(Exp_ManifestShipmentInfo.DateSTD as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
			   and  MessageLog.Message is null
		) data
	</select>
	
	<select id="sqlIsReportDataExistsDEPWithTrasistFlag0" 	parameterType="com.ngen.cosys.ciq.report.model.NotificationSchedule" resultType="java.lang.Boolean">
		select case when count (1) > 0 then 1 else 0 end dataExists from (
			SELECT distinct 
		       'DEP' FSUMessageType,
		       Exp_ManifestShipmentInfo.carriercode  Carrier,
		       Shipment_Master.ShipmentNumber AwbNumber,
		       Shipment_Master.Shipmentid,
		       Shipment_Master.Pieces TotalPcs,
		       Shipment_Master.Weight TotalWgt,
		       MessageInfo.pieces MessagePieces,
		       MessageInfo.weight MessageWeight,
			   Exp_ManifestShipmentInfo.Flight_ID,
		       Exp_ManifestShipmentInfo.FlightKey  FlightNumber,
			    case when Exp_ManifestShipmentInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,
		       upper(format(Exp_ManifestShipmentInfo.DateSTD,'dd-MMM-yyyy')) FlightDate,     
		       Shipment_Master.Origin,
		       Shipment_Master.Destination,
		       #{tenantAirport} Airport,
		       Shipment_Master.PartShipment,
			   isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
		       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,   
			   upper(format(Exp_ManifestShipmentInfo.DateSTD,'dd-MMM-yyyy HH:mm')) STD,
		       upper(format(Exp_ManifestShipmentInfo.DateATD,'dd-MMM-yyyy HH:mm')) ATD,
		
			   UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
			   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))MessageSentTime,
		
			   Exp_ManifestShipmentInfo.CiQSLATime,
			   (DATEDIFF(minute,isnull(Exp_ManifestShipmentInfo.DateATD, Exp_ManifestShipmentInfo.DateSTD),
			   convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
			   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))SLA_Difference_Minute,
			   MessageLog.Message,
		       case   
		         when MessageLog.Message is null
		           then 
		            'MISSING'
		         when 
			     (DATEDIFF(minute,isnull(Exp_ManifestShipmentInfo.DateATD, Exp_ManifestShipmentInfo.DateSTD),
				 convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
					AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
		        > Exp_ManifestShipmentInfo.CiQSLATime then
		                      'LATE' 
		                else   'On Time'             
		              end SLAStatus
	from
       Shipment_Master inner join
       (
           SELECT
			  Exp_Manifest.flightid,
                     Exp_ManifestShipmentInfo.ShipmentId,
                     Flt_OperativeFlight.CarrierCode,
                     Flt_OperativeFlight.FlightNumber,
					 Flt_OperativeFlight.flight_id,
                     Flt_OperativeFlight.FlightKey,
                     Flt_OperativeFlight.FlightType,
                     Flt_OperativeFlight_Legs.DateSTD,
                     Flt_OperativeFlight_Legs.DateATD,
                     Exp_ManifestShipmentInfo.Piece ManifestPieces,
                     Exp_ManifestShipmentInfo.Weight ManifestWeight,
					 ISNULL(ISNULL( 
					   (select top 1 Name channel 
						from Interface_IncomingOutgoingMessageDefinition a 
						inner join
						Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and FlightKey=Flt_OperativeFlight.FlightKey
						 order by name asc), 
						 (select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
						 order by name asc)),
					ISNULL((select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 order by name asc),
						(select top 1 Name channel 
						 from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode='DEFAULT'
						 order by name asc))) as Channel,
					 (select
						TOP 1 CargoiQ_SLAConfiguration.SLATime
						from
						CargoiQ_SLAConfiguration 
						where
						CargoiQ_SLAConfiguration.Airline = Flt_OperativeFlight.CarrierCode 
						and (CargoiQ_SLAConfiguration.FlowType = 'E' OR CargoiQ_SLAConfiguration.FlowType is null) 
						and CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' 
						and (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) 
						and ((CargoiQ_SLAConfiguration.Destination is null) OR (CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightOffPoint))
					 ) CiQSLATime
              from
                      Exp_Manifest inner join
                      Exp_ManifestShipmentInfo
                             on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
					  Exp_FlightEvents 
							 on Exp_FlightEvents.FlightId = Exp_Manifest.FlightId inner join
                      Flt_OperativeFlight
                             on Exp_Manifest.FlightId = Flt_OperativeFlight.Flight_Id inner join
                      Flt_OperativeFlight_Legs
                             on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id
					where
					  Exp_FlightEvents.FlightCompletedAt is not null and
                      Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport}    
					/* and not exists
					  (select * from Exp_OffloadShipmentInfo inner join 
						Exp_OffloadULDInfo on Exp_OffloadShipmentInfo.ExpOffloadULDInfoId=Exp_OffloadULDInfo.ExpOffloadULDInfoId
						and Exp_OffloadShipmentInfo.ShipmentId=Exp_ManifestShipmentInfo.ShipmentId
						where Exp_OffloadULDInfo.FlightSegmentId=Exp_Manifest.FlightSegmentId and 
					 	format(Exp_OffloadShipmentInfo.CreatedDateTime, 'dd-MMM-yyyy HH:mm')&lt;
						format(Exp_FlightEvents.FlightCompletedAt, 'dd-MMM-yyyy HH:mm')					  
					  )*/ 
		   )Exp_ManifestShipmentInfo
              on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId left join
           (select
			  convert(datetime,format(Shipment_StatusUpdateEvent.EventCompletedOn,'dd-MMM-yyyy HH:mm'))EventCompletedOn,
              Flt_OperativeFlight.flightkey,
			  Flt_OperativeFlight.CarrierCode,
              Flt_OperativeFlight_Legs.DateATD,
              Flt_OperativeFlight_Legs.DateSTD,
			  Shipment_StatusUpdateEvent.Outgoingflightid,
              Shipment_StatusUpdateEvent.ShipmentNumber,
              Shipment_StatusUpdateEvent.ShipmentId,
              Shipment_StatusUpdateEvent.pieces,
              Shipment_StatusUpdateEvent.weight,
			  Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
			  Shipment_StatusUpdateEvent.CreatedUserCode
               from
                Shipment_StatusUpdateEvent
				 inner join 
                    Flt_OperativeFlight
                on Flt_OperativeFlight.Flight_Id  = Shipment_StatusUpdateEvent.Outgoingflightid
                inner join Flt_OperativeFlight_Legs
                on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id 
              where
                Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} and 
               Shipment_StatusUpdateEvent.EventType = 'DEP' and Shipment_StatusUpdateEvent.IsOutgoing=1
		)MessageInfo
                on  MessageInfo.Shipmentid =Shipment_Master.Shipmentid and 
					MessageInfo.Outgoingflightid=Exp_ManifestShipmentInfo.flightid and
					MessageInfo.CreatedUserCode=Exp_ManifestShipmentInfo.Channel
		LEFT JOIN
		 (select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
		                    from
		                    Interface_OutgoingMessageLog 
		                    where
		                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
							Interface_OutgoingMessageLog.SubMessageType = 'DEP' and 
		                    Interface_OutgoingMessageLog.Status!='ERROR'  and  
		                    Interface_OutgoingMessageLog.Message is not null
		) MessageLog On MessageInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId 
		  LEFT JOIN
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 eAWBIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
                      exists(
                             select
                                    1
                             from
                                    Shipment_FreightWayBill
                             where
                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
                      )
              )EAWShipmentInfo
                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 RACIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
              )RACShipmentInfo
                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId 
		where
		       Shipment_Master.Origin in ( #{tenantAirport} , #{tenantCity} ) and
		       Exp_ManifestShipmentInfo.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration where CiqMessageTypeId = 'DEP' )  and
		       Shipment_Master.ShipmentType in ('AWB') and
		       Shipment_Master.CancelledOn is null and 
			   cast(Exp_ManifestShipmentInfo.DateSTD as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
			   and 
			    (DATEDIFF(minute,isnull(Exp_ManifestShipmentInfo.DateATD, Exp_ManifestShipmentInfo.DateSTD),
				 convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
					AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
		        > Exp_ManifestShipmentInfo.CiQSLATime 
 	UNION
		SELECT  distinct 
		       'DEP' FSUMessageType,
		       Exp_ManifestShipmentInfo.carriercode  Carrier,
		       Shipment_Master.ShipmentNumber AwbNumber,
		       Shipment_Master.Shipmentid,
		       Shipment_Master.Pieces TotalPcs,
		       Shipment_Master.Weight TotalWgt,
		       MessageInfo.pieces MessagePieces,
		       MessageInfo.weight MessageWeight,
			   Exp_ManifestShipmentInfo.Flight_ID,
		       Exp_ManifestShipmentInfo.FlightKey  FlightNumber,
			    case when Exp_ManifestShipmentInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,
		       upper(format(Exp_ManifestShipmentInfo.DateSTD,'dd-MMM-yyyy')) FlightDate,     
		       Shipment_Master.Origin,
		       Shipment_Master.Destination,
		       #{tenantAirport} Airport,
		       Shipment_Master.PartShipment,
			   isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
		       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,   
			   upper(format(Exp_ManifestShipmentInfo.DateSTD,'dd-MMM-yyyy HH:mm')) STD,
		       upper(format(Exp_ManifestShipmentInfo.DateATD,'dd-MMM-yyyy HH:mm')) ATD,
		
			   UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
			   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))MessageSentTime,
		
			   Exp_ManifestShipmentInfo.CiQSLATime,
			   (DATEDIFF(minute,isnull(Exp_ManifestShipmentInfo.DateATD, Exp_ManifestShipmentInfo.DateSTD),
			   convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
			   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))SLA_Difference_Minute,
			   MessageLog.Message,
		       case   
		         when MessageLog.Message is null
		           then 
		            'MISSING'
		         when 
			     (DATEDIFF(minute,isnull(Exp_ManifestShipmentInfo.DateATD, Exp_ManifestShipmentInfo.DateSTD),
				 convert(datetime, CONVERT(datetimeoffset, MessageInfo.EventCompletedOn)  
					AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
		        > Exp_ManifestShipmentInfo.CiQSLATime then
		                      'LATE' 
		                else   'On Time'             
		              end SLAStatus
	 from
       Shipment_Master inner join
       (
           SELECT
			  Exp_Manifest.flightid,
                     Exp_ManifestShipmentInfo.ShipmentId,
                     Flt_OperativeFlight.CarrierCode,
                     Flt_OperativeFlight.FlightNumber,
					 Flt_OperativeFlight.flight_id,
                     Flt_OperativeFlight.FlightKey,
                     Flt_OperativeFlight.FlightType,
                     Flt_OperativeFlight_Legs.DateSTD,
                     Flt_OperativeFlight_Legs.DateATD,
                     Exp_ManifestShipmentInfo.Piece ManifestPieces,
                     Exp_ManifestShipmentInfo.Weight ManifestWeight,
					 ISNULL(ISNULL( 
					   (select top 1 Name channel 
						from Interface_IncomingOutgoingMessageDefinition a 
						inner join
						Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and FlightKey=Flt_OperativeFlight.FlightKey
						 order by name asc), 
						 (select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
						 order by name asc)),
					ISNULL((select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 order by name asc),
						(select top 1 Name channel 
						 from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DEP' and CarrierCode='DEFAULT'
						 order by name asc))) as Channel,
					 (select
						TOP 1 CargoiQ_SLAConfiguration.SLATime
						from
						CargoiQ_SLAConfiguration 
						where
						CargoiQ_SLAConfiguration.Airline = Flt_OperativeFlight.CarrierCode 
						and (CargoiQ_SLAConfiguration.FlowType = 'E' OR CargoiQ_SLAConfiguration.FlowType is null) 
						and CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DEP' 
						and (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) 
						and ((CargoiQ_SLAConfiguration.Destination is null) OR (CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightOffPoint))
					 ) CiQSLATime
              from
                      Exp_Manifest inner join
                      Exp_ManifestShipmentInfo
                             on Exp_Manifest.ManifestId = Exp_ManifestShipmentInfo.ManifestId inner join
					  Exp_FlightEvents 
							 on Exp_FlightEvents.FlightId = Exp_Manifest.FlightId inner join
                      Flt_OperativeFlight
                             on Exp_Manifest.FlightId = Flt_OperativeFlight.Flight_Id inner join
                      Flt_OperativeFlight_Legs
                             on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id
					where
					  Exp_FlightEvents.FlightCompletedAt is not null and
                      Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport}     
		   )Exp_ManifestShipmentInfo
              on Shipment_Master.ShipmentId = Exp_ManifestShipmentInfo.ShipmentId left join
           (select
			  convert(datetime,format(Shipment_StatusUpdateEvent.EventCompletedOn,'dd-MMM-yyyy HH:mm'))EventCompletedOn,
              Flt_OperativeFlight.flightkey,
			  Flt_OperativeFlight.CarrierCode,
              Flt_OperativeFlight_Legs.DateATD,
              Flt_OperativeFlight_Legs.DateSTD,
			  Shipment_StatusUpdateEvent.Outgoingflightid,
              Shipment_StatusUpdateEvent.ShipmentNumber,
              Shipment_StatusUpdateEvent.ShipmentId,
              Shipment_StatusUpdateEvent.pieces,
              Shipment_StatusUpdateEvent.weight,
			  Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
			  Shipment_StatusUpdateEvent.CreatedUserCode
               from
                Shipment_StatusUpdateEvent
				 inner join 
                    Flt_OperativeFlight
                on Flt_OperativeFlight.Flight_Id  = Shipment_StatusUpdateEvent.Outgoingflightid
                inner join Flt_OperativeFlight_Legs
                on Flt_OperativeFlight.Flight_Id = Flt_OperativeFlight_Legs.Flight_Id 
              where
                Flt_OperativeFlight_Legs.FlightBoardPoint = #{tenantAirport} and 
               Shipment_StatusUpdateEvent.EventType = 'DEP' and Shipment_StatusUpdateEvent.IsOutgoing=1
		 )MessageInfo
                on  MessageInfo.Shipmentid =Shipment_Master.Shipmentid and 
					MessageInfo.Outgoingflightid=Exp_ManifestShipmentInfo.flightid and
					MessageInfo.CreatedUserCode=Exp_ManifestShipmentInfo.Channel
		LEFT JOIN
		 (select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
		                    from
		                    Interface_OutgoingMessageLog 
		                    where
		                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
							Interface_OutgoingMessageLog.SubMessageType = 'DEP' and 
		                    Interface_OutgoingMessageLog.Status!='ERROR'  and  
		                    Interface_OutgoingMessageLog.Message is not null
		) MessageLog On MessageInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId 
		  LEFT JOIN
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 eAWBIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
                      exists(
                             select
                                    1
                             from
                                    Shipment_FreightWayBill
                             where
                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
                      )
              )EAWShipmentInfo
                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 RACIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
              )RACShipmentInfo
                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId 
		where
		       Shipment_Master.Origin in ( #{tenantAirport} , #{tenantCity} ) and
		       Exp_ManifestShipmentInfo.CarrierCode in (select distinct airline from CargoiQ_SLAConfiguration where CiqMessageTypeId = 'DEP')  and
		       Shipment_Master.ShipmentType in ('AWB') and
		       Shipment_Master.CancelledOn is null and 
			   cast(Exp_ManifestShipmentInfo.DateSTD as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
			   and MessageLog.Message is null       
		) data
	</select>
	
	<select id="sqlIsReportDataExistsDLV" 	parameterType="com.ngen.cosys.ciq.report.model.NotificationSchedule" resultType="java.lang.Boolean">
		select case when count (1) > 0 then 1 else 0 end dataExists from (
			SELECT distinct
'DLV' FSUMessageType, 
DeliveryInfo.carriercode Carrier,
 DeliveryInfo.flightid, 
		Shipment_Master.shipmentNumber AwbNumber, 
		Shipment_Master.shipmentid,  
		Shipment_Master.pieces TotalPcs,  
		Shipment_Master.weight TotalWgt, 
		MessageEventInfo.Pieces MessagePieces, MessageEventInfo.Weight MessageWeight,
       isnull(DeliveryInfo.FlightKey,DeliveryInfo.FlightKey) FlightNumber,
       case when DeliveryInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,  
       upper(format(DeliveryInfo.DateSTA,'dd-MMM-yyyy')) FlightDate, 
       Shipment_Master.Origin, Shipment_Master.Destination, #{tenantAirport} Airport, Shipment_Master.PartShipment, 
       upper(format(DeliveryInfo.DateSTA,'dd-MMM-yyyy HH:mm')) STA, 
       upper(format(DeliveryInfo.DateATA,'dd-MMM-yyyy HH:mm')) ATA ,  
       isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,

	   UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageEventInfo.EventCompletedOn)  
	   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm:ss'))ActualEventTime,

       DeliveryInfo.SLATime, 
	   
	   (DATEDIFF(minute,isnull(DeliveryInfo.DateATA, DeliveryInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset,MessageEventInfo.EventCompletedOn)  
               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')))-isnull(DeliveryInfo.SLATime,0))SLA_Difference_Minute,

  MessageLog.Message,
   case  
      when MessageLog.Message is null
   then
      'MISSING'
      else 'On Time'              
        end SLAStatus

FROM Shipment_Master 
INNER JOIN 
 (select distinct
		imp_delivery.ShipmentId,
	    imp_delivery.ImpDeliveryId  ,
		shipment_freightout.DeliveryOrderNo,
		shipment_freightout.flightid,
		Flt_OperativeFlight.CarrierCode,
		Flt_OperativeFlight.FlightKey,
        Flt_OperativeFlight.FlightType,    
        Flt_OperativeFlight_Legs.DateATA,
        Flt_OperativeFlight_Legs.DateSTA,
        CargoiQ_SLAConfiguration.SLATime,
	ISNULL(ISNULL( 
					   (select top 1 Name channel 
						from Interface_IncomingOutgoingMessageDefinition a 
						inner join
						Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DLV' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and FlightKey=Flt_OperativeFlight.FlightKey
						 order by name asc), 
						 (select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DLV' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
						 order by name asc)),
					ISNULL((select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DLV' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 order by name asc),
						(select top 1 Name channel 
						 from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='DLV' and CarrierCode='DEFAULT'
						 order by name asc))) as Channel 	 
    FROM            
	  imp_delivery  inner join
        shipment_freightout ON Imp_Delivery.ImpDeliveryId=shipment_freightout.DeliveryOrderNo
		inner join Flt_OperativeFlight on shipment_freightout.FlightId=Flt_OperativeFlight.Flight_ID inner join            
      Flt_OperativeFlight_Legs
        on Flt_OperativeFlight.Flight_ID = Flt_OperativeFlight_Legs.Flight_ID left join
      CargoiQ_SLAConfiguration
        on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
      (CargoiQ_SLAConfiguration.FlowType = 'I' OR CargoiQ_SLAConfiguration.FlowType is null) and
      CargoiQ_SLAConfiguration.CiqMessageTypeId = 'DLV' and
      (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
      (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)     
       where
          Flt_OperativeFlight_Legs.FlightOffPoint = #{tenantAirport} and imp_delivery.Status='COMPLETED')
		DeliveryInfo on Shipment_Master.ShipmentId = DeliveryInfo.ShipmentId 
LEFT JOIN
    (select
		 Shipment_StatusUpdateEvent.Shipmentid,
         Shipment_StatusUpdateEvent.Pieces,
         Shipment_StatusUpdateEvent.Weight,
		 Shipment_StatusUpdateEvent.deliveryId,  
		 Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
		 Shipment_StatusUpdateEvent.CreatedUserCode,
		 Shipment_StatusUpdateEvent.EventCompletedOn         
		FROM
				Shipment_StatusUpdateEvent where
				Shipment_StatusUpdateEvent.EventType = 'DLV'  and Shipment_StatusUpdateEvent.CreatedUserCode!='HTTP'
				)MessageEventInfo
				  on DeliveryInfo.Shipmentid = MessageEventInfo.Shipmentid  and   
					MessageEventInfo.deliveryId=DeliveryInfo.ImpDeliveryId and 
					MessageEventInfo.CreatedUserCode=DeliveryInfo.Channel
LEFT JOIN
 (select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
                    from
                    Interface_OutgoingMessageLog 
                    where
                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
					Interface_OutgoingMessageLog.SubMessageType = 'DLV' and 
                    Interface_OutgoingMessageLog.Status!='ERROR'  and  
                    Interface_OutgoingMessageLog.Message is not null
     ) MessageLog On MessageEventInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId
LEFT JOIN
(select  distinct Shipment_MasterSHC.ShipmentId,
       1 eAWBIndicator from
		 Shipment_Master inner join
		 Shipment_MasterSHC
		  on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
		 Mst_AssociateSHCByHandlingGroup
		   on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
		 Mst_SHCHandlingGroup
		 on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
    where
		Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and
	    exists(select  1 from  Shipment_FreightWayBill
			 where   Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
			  Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate)
    )EAWShipmentInfo
	   on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
(select  distinct Shipment_MasterSHC.ShipmentId,
    1 RACIndicator from   Shipment_Master inner join
   Shipment_MasterSHC  on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
   Mst_AssociateSHCByHandlingGroup on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
  Mst_SHCHandlingGroup   on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
  where Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
  )RACShipmentInfo
    on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId  
where
       Shipment_Master.Destination in ( #{tenantAirport} , #{tenantCity} ) and
       Shipment_Master.ShipmentType in ('AWB') and
       DeliveryInfo.carriercode in (select distinct airline from  CargoiQ_SLAConfiguration where CiqMessageTypeId = 'DLV')  and
       Shipment_Master.CancelledOn is null and
       cast(DeliveryInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
	    and MessageLog.Message is null
		) data
	</select>
	
	<select id="sqlIsReportDataExistsTFD" 	parameterType="com.ngen.cosys.ciq.report.model.NotificationSchedule" resultType="java.lang.Boolean">
		select case when count (1) > 0 then 1 else 0 end dataExists from (
		SELECT distinct
      'TFD' FSUMessageType, ShipmentVerificationInfo.carriercode Carrier, ShipmentVerificationInfo.flight_id, 
	   Shipment_Master.shipmentNumber AwbNumber, Shipment_Master.shipmentid,  Shipment_Master.pieces TotalPcs,  
       Shipment_Master.weight TotalWgt, MessageEventInfo.Pieces MessagePieces, MessageEventInfo.Weight MessageWeight,
       ShipmentVerificationInfo.FlightKey FlightNumber,
       case when  ShipmentVerificationInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,  
       upper(format(isnull(ShipmentVerificationInfo.DateSTA,ShipmentVerificationInfo.DateSTA),'dd-MMM-yyyy')) FlightDate, 
       Shipment_Master.Origin, Shipment_Master.Destination, #{tenantAirport} Airport, Shipment_Master.PartShipment, 
       upper(format(ShipmentVerificationInfo.DateSTA,'dd-MMM-yyyy HH:mm')) STA, 
       upper(format(ShipmentVerificationInfo.DateATA,'dd-MMM-yyyy HH:mm')) ATA ,  
       isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,

	   UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageEventInfo.EventCompletedOn)  
	   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))ActualEventTime,

       ShipmentVerificationInfo.SLATime, 
	   
	   (DATEDIFF(minute,isnull(ShipmentVerificationInfo.DateATA, ShipmentVerificationInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset,MessageEventInfo.EventCompletedOn)  
               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))SLA_Difference_Minute,

       MessageLog.Message,
	   
	   'LATE' SLAStatus  
from
       Shipment_Master 
INNER JOIN
(
  SELECT distinct
               Transhipment_TransferManifestByAWBInfo.ShipmentNumber,
			   Transhipment_TransferManifestByAWBInfo.ShipmentDate,
			   Transhipment_TransferManifestByAWB.TRMNumber,
               Flt_OperativeFlight.CarrierCode,
			   Flt_OperativeFlight.Flight_Id,
			   Flt_OperativeFlight.FlightKey,
			   Flt_OperativeFlight.FlightType,
               Flt_OperativeFlight_Legs.DateATA,
			   Flt_OperativeFlight_legs.DateSTA,
			   CargoiQ_SLAConfiguration.SLATime,
			    ISNULL(ISNULL( 
					   (select top 1 Name channel 
						from Interface_IncomingOutgoingMessageDefinition a 
						inner join
						Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='TFD' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and FlightKey=Flt_OperativeFlight.FlightKey
						 order by name asc), 
						 (select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='TFD' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
						 order by name asc)),
					ISNULL((select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='TFD' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 order by name asc),
						(select top 1 Name channel 
						 from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='TFD' and CarrierCode='DEFAULT'
						 order by name asc))) as Channel
          FROM
			Transhipment_TransferManifestByAWBInfo 
			inner join Transhipment_TransferManifestByAWB
				on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
			inner join flt_operativeflight 
				on flt_operativeflight.flight_id=Transhipment_TransferManifestByAWBInfo.InboundFlightId
			inner join flt_operativeflight_legs 
				on flt_operativeflight_legs.flight_id=flt_operativeflight.flight_id 
			left join
                CargoiQ_SLAConfiguration
                    on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
                (CargoiQ_SLAConfiguration.FlowType = 'T' OR CargoiQ_SLAConfiguration.FlowType is null) and
                CargoiQ_SLAConfiguration.CiqMessageTypeId = 'TFD' and
                (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
                (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)
			WHERE  
				flt_operativeflight_legs.flightOffPoint= #{tenantAirport} and 
				Transhipment_TransferManifestByAWBInfo.InboundFlightHandler!='DNATA'
              )ShipmentVerificationInfo on Shipment_Master.ShipmentNumber = ShipmentVerificationInfo.ShipmentNumber and 
			   Shipment_Master.ShipmentDate = ShipmentVerificationInfo.ShipmentDate
LEFT JOIN
              (
              SELECT
				Shipment_StatusUpdateEvent.TRMNumber,
                Shipment_StatusUpdateEvent.ShipmentNumber,
                Shipment_StatusUpdateEvent.ShipmentDate,
				Shipment_StatusUpdateEvent.Pieces,
                Shipment_StatusUpdateEvent.Weight,
				Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
				Shipment_StatusUpdateEvent.CreatedUserCode,
				convert(datetime,format(Shipment_StatusUpdateEvent.EventCompletedOn,'dd-MMM-yyyy HH:mm'))EventCompletedOn            
              FROM
                Shipment_StatusUpdateEvent 
			  WHERE
                     Shipment_StatusUpdateEvent.EventType = 'TFD'
					 and Shipment_StatusUpdateEvent.CreatedUserCode!='HTTP'
              )MessageEventInfo
                      on MessageEventInfo.ShipmentNumber=ShipmentVerificationInfo.ShipmentNumber  and
                         MessageEventInfo.ShipmentDate=ShipmentVerificationInfo.ShipmentDate  and 
						 MessageEventInfo.CreatedUserCode= ShipmentVerificationInfo.Channel and
						 MessageEventInfo.TRMNumber=ShipmentVerificationInfo.TRMNumber   
LEFT JOIN
	  (select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
                    from
                    Interface_OutgoingMessageLog 
                    where
                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
					Interface_OutgoingMessageLog.SubMessageType = 'TFD' and 
                    Interface_OutgoingMessageLog.Status!='ERROR'  and  
                    Interface_OutgoingMessageLog.Message is not null  
     ) MessageLog On MessageEventInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId
LEFT JOIN
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 eAWBIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
                      exists(
                             select
                                    1
                            from
                                    Shipment_FreightWayBill
                             where
                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
                      )
              )EAWShipmentInfo
                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 RACIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
              )RACShipmentInfo
                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId  
where 
Shipment_Master.Origin not in ( #{tenantAirport} , #{tenantCity} ) and
       Shipment_Master.Destination not in ( #{tenantAirport} , #{tenantCity} ) and
       Shipment_Master.ShipmentType in ('AWB') and
       ShipmentVerificationInfo.carriercode in  (SELECT distinct airline from  CargoiQ_SLAConfiguration where CiqMessageTypeId = 'TFD')  and
       Shipment_Master.CancelledOn is null and
       cast(ShipmentVerificationInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
	   and (DATEDIFF(minute,isnull(ShipmentVerificationInfo.DateATA, ShipmentVerificationInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset,MessageEventInfo.EventCompletedOn)  
            AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
        > ShipmentVerificationInfo.SLATime
UNION
SELECT distinct
      'TFD' FSUMessageType, ShipmentVerificationInfo.carriercode Carrier, ShipmentVerificationInfo.flight_id, 
	   Shipment_Master.shipmentNumber AwbNumber, Shipment_Master.shipmentid,  Shipment_Master.pieces TotalPcs,  
       Shipment_Master.weight TotalWgt, MessageEventInfo.Pieces MessagePieces, MessageEventInfo.Weight MessageWeight,
       ShipmentVerificationInfo.FlightKey FlightNumber,
       case when  ShipmentVerificationInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,  
       upper(format(isnull(ShipmentVerificationInfo.DateSTA,ShipmentVerificationInfo.DateSTA),'dd-MMM-yyyy')) FlightDate, 
       Shipment_Master.Origin, Shipment_Master.Destination, #{tenantAirport} Airport, Shipment_Master.PartShipment, 
       upper(format(ShipmentVerificationInfo.DateSTA,'dd-MMM-yyyy HH:mm')) STA, 
       upper(format(ShipmentVerificationInfo.DateATA,'dd-MMM-yyyy HH:mm')) ATA ,  
       isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,

	   UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageEventInfo.EventCompletedOn)  
	   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))ActualEventTime,

       ShipmentVerificationInfo.SLATime, 
	   
	   (DATEDIFF(minute,isnull(ShipmentVerificationInfo.DateATA, ShipmentVerificationInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset,MessageEventInfo.EventCompletedOn)  
               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))SLA_Difference_Minute,

   
       MessageLog.Message,
	   
	   'MISSING' SLAStatus  
from
       Shipment_Master 
INNER JOIN
(
  SELECT distinct
               Transhipment_TransferManifestByAWBInfo.ShipmentNumber,
			   Transhipment_TransferManifestByAWBInfo.ShipmentDate,
			   Transhipment_TransferManifestByAWB.TRMNumber,
               Flt_OperativeFlight.CarrierCode,
			   Flt_OperativeFlight.Flight_Id,
			   Flt_OperativeFlight.FlightKey,
			   Flt_OperativeFlight.FlightType,
               Flt_OperativeFlight_Legs.DateATA,
			   Flt_OperativeFlight_legs.DateSTA,
			   CargoiQ_SLAConfiguration.SLATime,
			    ISNULL(ISNULL( 
					   (select top 1 Name channel 
						from Interface_IncomingOutgoingMessageDefinition a 
						inner join
						Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='TFD' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and FlightKey=Flt_OperativeFlight.FlightKey
						 order by name asc), 
						 (select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='TFD' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
						 order by name asc)),
					ISNULL((select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='TFD' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 order by name asc),
						(select top 1 Name channel 
						 from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='TFD' and CarrierCode='DEFAULT'
						 order by name asc))) as Channel
          FROM
			Transhipment_TransferManifestByAWBInfo 
			inner join Transhipment_TransferManifestByAWB
				on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
			inner join flt_operativeflight 
				on flt_operativeflight.flight_id=Transhipment_TransferManifestByAWBInfo.InboundFlightId
			inner join flt_operativeflight_legs 
				on flt_operativeflight_legs.flight_id=flt_operativeflight.flight_id 
			left join
                CargoiQ_SLAConfiguration
                    on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
                (CargoiQ_SLAConfiguration.FlowType = 'T' OR CargoiQ_SLAConfiguration.FlowType is null) and
                CargoiQ_SLAConfiguration.CiqMessageTypeId = 'TFD' and
                (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
                (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)
			WHERE  
				flt_operativeflight_legs.flightOffPoint= #{tenantAirport} and 
				Transhipment_TransferManifestByAWBInfo.InboundFlightHandler!='DNATA'
              )ShipmentVerificationInfo on Shipment_Master.ShipmentNumber = ShipmentVerificationInfo.ShipmentNumber and 
			   Shipment_Master.ShipmentDate = ShipmentVerificationInfo.ShipmentDate
LEFT JOIN
              (
              SELECT
				Shipment_StatusUpdateEvent.TRMNumber,
                Shipment_StatusUpdateEvent.ShipmentNumber,
                Shipment_StatusUpdateEvent.ShipmentDate,
				Shipment_StatusUpdateEvent.Pieces,
                Shipment_StatusUpdateEvent.Weight,
				Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
				Shipment_StatusUpdateEvent.CreatedUserCode,
				convert(datetime,format(Shipment_StatusUpdateEvent.EventCompletedOn,'dd-MMM-yyyy HH:mm'))EventCompletedOn            
              FROM
                Shipment_StatusUpdateEvent 
			  WHERE
                     Shipment_StatusUpdateEvent.EventType = 'TFD'
					 and Shipment_StatusUpdateEvent.CreatedUserCode!='HTTP'
              )MessageEventInfo
                      on MessageEventInfo.ShipmentNumber=ShipmentVerificationInfo.ShipmentNumber  and
                         MessageEventInfo.ShipmentDate=ShipmentVerificationInfo.ShipmentDate  and 
						 MessageEventInfo.CreatedUserCode= ShipmentVerificationInfo.Channel and
						 MessageEventInfo.TRMNumber=ShipmentVerificationInfo.TRMNumber   
LEFT JOIN
	  (select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
                    from
                    Interface_OutgoingMessageLog 
                    where
                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
					Interface_OutgoingMessageLog.SubMessageType = 'TFD' and 
                    Interface_OutgoingMessageLog.Status!='ERROR'  and  
                    Interface_OutgoingMessageLog.Message is not null  
     ) MessageLog On MessageEventInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId
LEFT JOIN
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 eAWBIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
                      exists(
                             select
                                    1
                            from
                                    Shipment_FreightWayBill
                             where
                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
                      )
              )EAWShipmentInfo
                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 RACIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
              )RACShipmentInfo
                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId  
where 
Shipment_Master.Origin not in ( #{tenantAirport} , #{tenantCity} ) and
       Shipment_Master.Destination not in ( #{tenantAirport} , #{tenantCity} ) and
       Shipment_Master.ShipmentType in ('AWB') and
       ShipmentVerificationInfo.carriercode in  (SELECT distinct airline from  CargoiQ_SLAConfiguration where CiqMessageTypeId = 'TFD')  and
       Shipment_Master.CancelledOn is null and
       cast(ShipmentVerificationInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
	   and  MessageLog.Message is null
		) data
	</select>
	
	<select id="sqlIsReportDataExistsRCT" 	parameterType="com.ngen.cosys.ciq.report.model.NotificationSchedule" resultType="java.lang.Boolean">
		select case when count (1) > 0 then 1 else 0 end dataExists from (
			SELECT distinct
      'RCT' FSUMessageType, ShipmentVerificationInfo.carriercode Carrier, ShipmentVerificationInfo.flight_id, 
	   Shipment_Master.shipmentNumber AwbNumber, Shipment_Master.shipmentid,  Shipment_Master.pieces TotalPcs,  
       Shipment_Master.weight TotalWgt, MessageEventInfo.Pieces MessagePieces, MessageEventInfo.Weight MessageWeight,
       ShipmentVerificationInfo.FlightKey FlightNumber,
       case when  ShipmentVerificationInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,  
       upper(format(isnull(ShipmentVerificationInfo.DateSTA,ShipmentVerificationInfo.DateSTA),'dd-MMM-yyyy')) FlightDate, 
       Shipment_Master.Origin, Shipment_Master.Destination, #{tenantAirport} Airport, Shipment_Master.PartShipment, 
       upper(format(ShipmentVerificationInfo.DateSTA,'dd-MMM-yyyy HH:mm')) STA, 
       upper(format(ShipmentVerificationInfo.DateATA,'dd-MMM-yyyy HH:mm')) ATA ,  
       isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,

	   UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageEventInfo.EventCompletedOn)  
	   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))ActualEventTime,

       ShipmentVerificationInfo.SLATime, 
	   
	   (DATEDIFF(minute,isnull(ShipmentVerificationInfo.DateATA, ShipmentVerificationInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset,MessageEventInfo.EventCompletedOn)  
               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))SLA_Difference_Minute,
 
       MessageLog.Message,
	   'LATE' SLAStatus  
from
       Shipment_Master 
INNER JOIN
(
  SELECT distinct
               Transhipment_TransferManifestByAWBInfo.ShipmentNumber,
			   Transhipment_TransferManifestByAWBInfo.ShipmentDate,
			   Transhipment_TransferManifestByAWB.TRMNumber,
               Flt_OperativeFlight.CarrierCode,
			   Flt_OperativeFlight.Flight_Id,
			   Flt_OperativeFlight.FlightKey,
			   Flt_OperativeFlight.FlightType,
               Flt_OperativeFlight_Legs.DateATA,
			   Flt_OperativeFlight_legs.DateSTA,
			   CargoiQ_SLAConfiguration.SLATime,
			   ISNULL(ISNULL( 
					   (select top 1 Name channel 
						from Interface_IncomingOutgoingMessageDefinition a 
						inner join
						Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='RCT' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and FlightKey=Flt_OperativeFlight.FlightKey
						 order by name asc), 
						 (select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='RCT' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
						 order by name asc)),
					ISNULL((select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='RCT' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 order by name asc),
						(select top 1 Name channel 
						 from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='RCT' and CarrierCode='DEFAULT'
						 order by name asc))) as Channel
          FROM
			Transhipment_TransferManifestByAWBInfo 
			inner join Transhipment_TransferManifestByAWB
				on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
			inner join flt_operativeflight 
				on flt_operativeflight.flight_id=Transhipment_TransferManifestByAWBInfo.InboundFlightId
			inner join flt_operativeflight_legs 
				on flt_operativeflight_legs.flight_id=flt_operativeflight.flight_id 
			left join
                CargoiQ_SLAConfiguration
                    on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
                (CargoiQ_SLAConfiguration.FlowType = 'T' OR CargoiQ_SLAConfiguration.FlowType is null) and
                CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCT' and
                (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
                (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)
			WHERE  
				flt_operativeflight_legs.flightOffPoint=#{tenantAirport} and 
				Transhipment_TransferManifestByAWBInfo.InboundFlightHandler!='DNATA' and 
				Transhipment_TransferManifestByAWB.CarrierCodeFrom != Transhipment_TransferManifestByAWB.CarrierCodeTo
              )ShipmentVerificationInfo on Shipment_Master.ShipmentNumber = ShipmentVerificationInfo.ShipmentNumber and 
			   Shipment_Master.ShipmentDate = ShipmentVerificationInfo.ShipmentDate
LEFT JOIN
              (
              SELECT
				Shipment_StatusUpdateEvent.TRMNumber,
                Shipment_StatusUpdateEvent.ShipmentNumber,
                Shipment_StatusUpdateEvent.ShipmentDate,
				Shipment_StatusUpdateEvent.Pieces,
                Shipment_StatusUpdateEvent.Weight,
				Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
				Shipment_StatusUpdateEvent.CreatedUserCode,
				convert(datetime,format(Shipment_StatusUpdateEvent.EventCompletedOn,'dd-MMM-yyyy HH:mm'))EventCompletedOn            
              FROM
                Shipment_StatusUpdateEvent 
			  WHERE
                     Shipment_StatusUpdateEvent.EventType = 'RCT' 
					 and Shipment_StatusUpdateEvent.CreatedUserCode!='HTTP'
              )MessageEventInfo
                      on MessageEventInfo.ShipmentNumber=ShipmentVerificationInfo.ShipmentNumber  and
                         MessageEventInfo.ShipmentDate=ShipmentVerificationInfo.ShipmentDate  and 
						 MessageEventInfo.CreatedUserCode= ShipmentVerificationInfo.Channel and
						 MessageEventInfo.TRMNumber=ShipmentVerificationInfo.TRMNumber   
LEFT JOIN
	  (select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
                    from
                    Interface_OutgoingMessageLog 
                    where
                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
					Interface_OutgoingMessageLog.SubMessageType = 'RCT' and 
                    Interface_OutgoingMessageLog.Status!='ERROR'  and  
                    Interface_OutgoingMessageLog.Message is not null  
     ) MessageLog On MessageEventInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId
LEFT JOIN
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 eAWBIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
                      exists(
                             select
                                    1
                            from
                                    Shipment_FreightWayBill
                             where
                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
                      )
              )EAWShipmentInfo
                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 RACIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
              )RACShipmentInfo
                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId  
where 
Shipment_Master.Origin not in ( #{tenantAirport} , #{tenantCity} ) and
       Shipment_Master.Destination not in ( #{tenantAirport} , #{tenantCity} ) and
       Shipment_Master.ShipmentType in ('AWB') and
       ShipmentVerificationInfo.carriercode in  (SELECT distinct airline from  CargoiQ_SLAConfiguration where CiqMessageTypeId = 'RCT')  and
       Shipment_Master.CancelledOn is null and
       cast(ShipmentVerificationInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
	   and (DATEDIFF(minute,isnull(ShipmentVerificationInfo.DateATA, ShipmentVerificationInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset,MessageEventInfo.EventCompletedOn)  
            AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))
        > ShipmentVerificationInfo.SLATime
UNION
SELECT distinct
      'RCT' FSUMessageType, ShipmentVerificationInfo.carriercode Carrier, ShipmentVerificationInfo.flight_id, 
	   Shipment_Master.shipmentNumber AwbNumber, Shipment_Master.shipmentid,  Shipment_Master.pieces TotalPcs,  
       Shipment_Master.weight TotalWgt, MessageEventInfo.Pieces MessagePieces, MessageEventInfo.Weight MessageWeight,
       ShipmentVerificationInfo.FlightKey FlightNumber,
       case when  ShipmentVerificationInfo.FlightType='P' then 'PAX' else 'CGO' end FlightType,  
       upper(format(isnull(ShipmentVerificationInfo.DateSTA,ShipmentVerificationInfo.DateSTA),'dd-MMM-yyyy')) FlightDate, 
       Shipment_Master.Origin, Shipment_Master.Destination, #{tenantAirport} Airport, Shipment_Master.PartShipment, 
       upper(format(ShipmentVerificationInfo.DateSTA,'dd-MMM-yyyy HH:mm')) STA, 
       upper(format(ShipmentVerificationInfo.DateATA,'dd-MMM-yyyy HH:mm')) ATA ,  
       isnull(EAWShipmentInfo.eAWBIndicator, 0) eAWBIndicator,
       isnull(RACShipmentInfo.RACIndicator, 0) RACIndicator,

	   UPPER(format(convert(datetime, CONVERT(datetimeoffset, MessageEventInfo.EventCompletedOn)  
	   AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone')),'dd-MMM-yyyy HH:mm'))ActualEventTime,

       ShipmentVerificationInfo.SLATime, 
	   
	   (DATEDIFF(minute,isnull(ShipmentVerificationInfo.DateATA, ShipmentVerificationInfo.DateSTA),convert(datetime, CONVERT(datetimeoffset,MessageEventInfo.EventCompletedOn)  
               AT TIME ZONE (select ParameterValueChar from App_SystemParameters where ParameterCode='Station_timezone'))))SLA_Difference_Minute,

       MessageLog.Message,
	     
          'MISSING' SLAStatus  
from
       Shipment_Master 
INNER JOIN
(
  SELECT distinct
               Transhipment_TransferManifestByAWBInfo.ShipmentNumber,
			   Transhipment_TransferManifestByAWBInfo.ShipmentDate,
			   Transhipment_TransferManifestByAWB.TRMNumber,
               Flt_OperativeFlight.CarrierCode,
			   Flt_OperativeFlight.Flight_Id,
			   Flt_OperativeFlight.FlightKey,
			   Flt_OperativeFlight.FlightType,
               Flt_OperativeFlight_Legs.DateATA,
			   Flt_OperativeFlight_legs.DateSTA,
			   CargoiQ_SLAConfiguration.SLATime,
			   ISNULL(ISNULL( 
					   (select top 1 Name channel 
						from Interface_IncomingOutgoingMessageDefinition a 
						inner join
						Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='RCT' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and FlightKey=Flt_OperativeFlight.FlightKey
						 order by name asc), 
						 (select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='RCT' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 and AirportCode=Flt_OperativeFlight_Legs.FlightOffPoint
						 order by name asc)),
					ISNULL((select top 1 Name channel 
						  from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='RCT' and CarrierCode=Flt_OperativeFlight.CarrierCode
						 order by name asc),
						(select top 1 Name channel 
						 from Interface_IncomingOutgoingMessageDefinition a 
						 inner join
						 Interface_ExternalSystem c 
						 on a.InterfaceExternalSystemId=c.InterfaceExternalSystemId
						 inner join 
						 Interface_AssociateCustomerWithMessageDefinition d
						 on d.InterfaceIncomingOutgoingMessageDefinitionId=a.InterfaceIncomingOutgoingMessageDefinitionId
						 inner join 
						 Interface_MessageDefinitionByCustomer e 
						 on e.InterfaceMessageDefinitionByCustomerId=d.InterfaceMessageDefinitionByCustomerId
						 where messageType='FSU' and SubMessageType='RCT' and CarrierCode='DEFAULT'
						 order by name asc))) as Channel
          FROM
			Transhipment_TransferManifestByAWBInfo 
			inner join Transhipment_TransferManifestByAWB
				on Transhipment_TransferManifestByAWBInfo.TransTransferManifestByAwbId = Transhipment_TransferManifestByAWB.TransTransferManifestByAwbId
			inner join flt_operativeflight 
				on flt_operativeflight.flight_id=Transhipment_TransferManifestByAWBInfo.InboundFlightId
			inner join flt_operativeflight_legs 
				on flt_operativeflight_legs.flight_id=flt_operativeflight.flight_id 
			left join
                CargoiQ_SLAConfiguration
                    on Flt_OperativeFlight.CarrierCode = CargoiQ_SLAConfiguration.Airline and
                (CargoiQ_SLAConfiguration.FlowType = 'T' OR CargoiQ_SLAConfiguration.FlowType is null) and
                CargoiQ_SLAConfiguration.CiqMessageTypeId = 'RCT' and
                (CargoiQ_SLAConfiguration.FlightType = 'B' OR CargoiQ_SLAConfiguration.FlightType = Flt_OperativeFlight.FlightType) and
                (CargoiQ_SLAConfiguration.Destination is null OR CargoiQ_SLAConfiguration.Destination = Flt_OperativeFlight_Legs.FlightBoardPoint)
			WHERE  
				flt_operativeflight_legs.flightOffPoint= #{tenantAirport} and 
				Transhipment_TransferManifestByAWBInfo.InboundFlightHandler!='DNATA' and 
				Transhipment_TransferManifestByAWB.CarrierCodeFrom != Transhipment_TransferManifestByAWB.CarrierCodeTo
              )ShipmentVerificationInfo on Shipment_Master.ShipmentNumber = ShipmentVerificationInfo.ShipmentNumber and 
			   Shipment_Master.ShipmentDate = ShipmentVerificationInfo.ShipmentDate
LEFT JOIN
              (
              SELECT
				Shipment_StatusUpdateEvent.TRMNumber,
                Shipment_StatusUpdateEvent.ShipmentNumber,
                Shipment_StatusUpdateEvent.ShipmentDate,
				Shipment_StatusUpdateEvent.Pieces,
                Shipment_StatusUpdateEvent.Weight,
				Shipment_StatusUpdateEvent.InterfaceOutgoingMessageLogId,
				Shipment_StatusUpdateEvent.CreatedUserCode,
				convert(datetime,format(Shipment_StatusUpdateEvent.EventCompletedOn,'dd-MMM-yyyy HH:mm'))EventCompletedOn            
              FROM
                Shipment_StatusUpdateEvent 
			  WHERE
                     Shipment_StatusUpdateEvent.EventType = 'RCT' 
					 and Shipment_StatusUpdateEvent.CreatedUserCode!='HTTP'
              )MessageEventInfo
                      on MessageEventInfo.ShipmentNumber=ShipmentVerificationInfo.ShipmentNumber  and
                         MessageEventInfo.ShipmentDate=ShipmentVerificationInfo.ShipmentDate  and 
						 MessageEventInfo.CreatedUserCode= ShipmentVerificationInfo.Channel and
						 MessageEventInfo.TRMNumber=ShipmentVerificationInfo.TRMNumber   
LEFT JOIN
	  (select Interface_OutgoingMessageLog.Message, Interface_OutgoingMessageLog.InterfaceOutgoingMessageLogId
                    from
                    Interface_OutgoingMessageLog 
                    where
                    Interface_OutgoingMessageLog.MessageType = 'FSU' and
					Interface_OutgoingMessageLog.SubMessageType = 'RCT' and 
                    Interface_OutgoingMessageLog.Status!='ERROR'  and  
                    Interface_OutgoingMessageLog.Message is not null  
     ) MessageLog On MessageEventInfo.InterfaceOutgoingMessageLogId=MessageLog.InterfaceOutgoingMessageLogId
LEFT JOIN
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 eAWBIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'EAW' and 
                      exists(
                             select
                                    1
                            from
                                    Shipment_FreightWayBill
                             where
                                    Shipment_FreightWayBill.AwbNumber = Shipment_Master.ShipmentNumber and
                                    Shipment_FreightWayBill.AwbDate = Shipment_Master.ShipmentDate
                      )
              )EAWShipmentInfo
                      on Shipment_Master.ShipmentId = EAWShipmentInfo.ShipmentId left join
       (select
                      distinct Shipment_MasterSHC.ShipmentId,
                      1 RACIndicator
              from
                      Shipment_Master inner join
                      Shipment_MasterSHC
                             on Shipment_Master.ShipmentId = Shipment_MasterSHC.ShipmentId inner join
                      Mst_AssociateSHCByHandlingGroup
                             on Shipment_MasterSHC.SpecialHandlingCode = Mst_AssociateSHCByHandlingGroup.SpecialHandlingCode inner join
                      Mst_SHCHandlingGroup
                             on Mst_AssociateSHCByHandlingGroup.MstSHCHandlingGroupID = Mst_SHCHandlingGroup.MstSHCHandlingGroupID
              where
                      Mst_SHCHandlingGroup.SHCHandlingGroupCode = 'RAC'
              )RACShipmentInfo
                      on Shipment_Master.ShipmentId = RACShipmentInfo.ShipmentId  
where 
Shipment_Master.Origin not in ( #{tenantAirport} , #{tenantCity} ) and
       Shipment_Master.Destination not in ( #{tenantAirport} , #{tenantCity} ) and
       Shipment_Master.ShipmentType in ('AWB') and
       ShipmentVerificationInfo.carriercode in  (SELECT distinct airline from  CargoiQ_SLAConfiguration where CiqMessageTypeId = 'RCT')  and
       Shipment_Master.CancelledOn is null and
       cast(ShipmentVerificationInfo.DateSTA as datetime) between cast(#{fromDate} as datetime) and cast(#{toDate} as datetime)
	   and MessageLog.Message is null
		) data
	</select>
	
</mapper>